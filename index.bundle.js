/*! For license information please see index.bundle.js.LICENSE.txt */
(()=>{var t={377:(t,e,n)=>{var s=n(832),r=n(652),i=n(801),a=n(30),o=n(618),l=n(49),u=n(971);u.alea=s,u.xor128=r,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},832:function(t,e,n){var s;!function(t,r,i){function a(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},49:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},652:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},618:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,i=e.i;return e.w=s=s+1640531527|0,n=r[i+34&127],t=r[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[i]=n^t,e.i=i,n+(s^s>>>16)|0},function(t,e){var n,s,r,i,a,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,i=-32;i<l;++i)e&&(s^=e.charCodeAt((i+32)%e.length)),0===i&&(a=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,i>=0&&(a=a+1640531527|0,r=0==(n=o[127&i]^=s+a)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,i=512;i>0;--i)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=a,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},30:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},971:(t,e,n)=>{var s;!function(r,i){var a,o=this,l=256,u="random",h=i.pow(l,6),c=i.pow(2,52),d=2*c,p=255;function f(t,e,n){var s=[],p=b(y((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(r)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(r)]}}():t,3),s),f=new g(s),w=function(){for(var t=f.g(6),e=h,n=0;t<c;)t=(t+n)*l,e*=l,n=f.g(1);for(;t>=d;)t/=2,e/=2,n>>>=1;return(t+n)/e};return w.int32=function(){return 0|f.g(4)},w.quick=function(){return f.g(4)/4294967296},w.double=w,b(x(f.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&m(s,f),t.state=function(){return m(f,{})}),n?(i[u]=t,e):t})(w,p,"global"in e?e.global:this==i,e.state)}function g(t){var e,n=t.length,s=this,r=0,i=s.i=s.j=0,a=s.S=[];for(n||(t=[n++]);r<l;)a[r]=r++;for(r=0;r<l;r++)a[r]=a[i=p&i+t[r%n]+(e=a[r])],a[i]=e;(s.g=function(t){for(var e,n=0,r=s.i,i=s.j,a=s.S;t--;)e=a[r=p&r+1],n=n*l+a[p&(a[r]=a[i=p&i+e])+(a[i]=e)];return s.i=r,s.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function y(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(y(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function b(t,e){for(var n,s=t+"",r=0;r<s.length;)e[p&r]=p&(n^=19*e[p&r])+s.charCodeAt(r++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(i["seed"+u]=f,b(i.random(),r),t.exports){t.exports=f;try{a=n(42)}catch(t){}}else void 0===(s=function(){return f}.call(e,n,e,t))||(t.exports=s)}([],Math)},410:()=>{},628:()=>{},601:()=>{},792:()=>{},42:()=>{}},e={};function n(s){var r=e[s];if(void 0!==r)return r.exports;var i=e[s]={id:s,loaded:!1,exports:{}};return t[s].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(t,e)=>{for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>gs,computeFlatOffset:()=>Rs,computeOutShape:()=>ys,getNormalizedAxes:()=>vs,isSliceContinous:()=>Es,maskToAxes:()=>ms,parseSliceParams:()=>As,startForAxis:()=>Is,startIndicesWithElidedDims:()=>Cs,stopForAxis:()=>Ss,stopIndicesWithElidedDims:()=>$s,stridesForAxis:()=>ks,stridesWithElidedDims:()=>bs});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>ti,computeOutShape:()=>Qr,segOpComputeOptimalWindowSize:()=>Zr});var s={};n.r(s),n.d(s,{ERF_A1:()=>So,ERF_A2:()=>Eo,ERF_A3:()=>Ro,ERF_A4:()=>Ao,ERF_A5:()=>No,ERF_P:()=>Io,PARALLELIZE_THRESHOLD:()=>Yr,SELU_SCALE:()=>ko,SELU_SCALEALPHA:()=>$o,applyActivation:()=>xa,assertAndGetBroadcastShape:()=>Vr,assertAxesAreInnerMostDims:()=>Xs,assertParamsConsistent:()=>Ir,assignToTypedArray:()=>zo,axesAreInnerMostDims:()=>Hs,calculateShapes:()=>Co,castTensor:()=>Wo,combineLocations:()=>js,complexWithEvenIndex:()=>Oo,complexWithOddIndex:()=>Mo,computeConv2DInfo:()=>or,computeConv3DInfo:()=>lr,computeDefaultPad:()=>ur,computeDilation2DInfo:()=>rr,computeOptimalWindowSize:()=>Jr,computeOutAndReduceShapes:()=>qs,computeOutShape:()=>Sr,computePool2DInfo:()=>ir,computePool3DInfo:()=>ar,convertConv2DDataFormat:()=>mr,eitherStridesOrDilationsAreOne:()=>gr,expandShapeToKeepDim:()=>Ks,exponent:()=>Po,exponents:()=>Bo,getAxesPermutation:()=>Ys,getBroadcastDims:()=>Wr,getComplexWithIndex:()=>Lo,getFusedBiasGradient:()=>ba,getFusedDyActivation:()=>ya,getImageCenter:()=>po,getInnerMostAxes:()=>Zs,getPermuted:()=>go,getReductionAxes:()=>Ur,getReshaped:()=>fo,getReshapedPermuted:()=>mo,getSliceBeginCoords:()=>yo,getSliceSize:()=>bo,getUndoAxesPermutation:()=>Js,linspaceImpl:()=>Vo,log:()=>Do,mergeRealAndImagArrays:()=>Fo,prepareAndValidate:()=>xo,prepareSplitSize:()=>Ji,reshapeTensor:()=>Uo,segment_util:()=>e,shouldFuse:()=>wa,slice_util:()=>t,splitRealAndImagArrays:()=>_o,tupleValuesAreOne:()=>fr,upcastType:()=>on,validateInput:()=>vo,validateUpdateShape:()=>wo,warn:()=>To});var r={};n.r(r),n.d(r,{maxImpl:()=>ey,transposeImpl:()=>ny});const i=(t,e)=>{let n;return t.addEventListener("message",(t=>{const{type:s,payload:r}=t.data;s===e&&n(r)})),(...s)=>new Promise((r=>{t.postMessage({type:e,payload:s}),n=r}))},a="tfjsflags";class o{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(e instanceof Promise)throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);a in t&&t[a].split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function l(){return h}let u,h=null;function c(){if(null==u){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}u=t}return u}function d(t,e){const n=function(){const t=c();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const p="Acos",f="Acosh",g="Add",m="ArgMax",y="ArgMin",b="Asin",x="Asinh",w="Atan",v="Atanh",C="Atan2",$="AvgPool",k="AvgPool3D",I="BatchMatMul",S="BatchToSpaceND",E="BroadcastTo",R="Cast",A="Ceil",N="ClipByValue",T="Concat",D="Conv2D",F="Conv2DBackpropInput",_="Conv3D",O="Cos",M="Cosh",L="Cumsum",z="DepthwiseConv2dNative",B="Dilation2D",P="Dilation2DBackpropInput",W="Dilation2DBackpropFilter",U="Div",V="Expm1",G="FlipLeftRight",H="Floor",j="FloorDiv",q="FusedBatchNorm",K="GatherV2",X="GreaterEqual",Y="Identity",J="IsFinite",Z="IsInf",Q="IsNan",tt="Log1p",et="LogSoftmax",nt="Max",st="Maximum",rt="MaxPool",it="MaxPool3D",at="MaxPoolWithArgmax",ot="Minimum",lt="Multiply",ut="Negate",ht="NonMaxSuppressionV3",ct="NonMaxSuppressionV4",dt="NonMaxSuppressionV5",pt="OnesLike",ft="OneHot",gt="PadV2",mt="Prelu",yt="Reciprocal",bt="Relu",xt="Reshape",wt="ResizeNearestNeighbor",vt="ResizeBilinear",Ct="Relu6",$t="Reverse",kt="Round",It="Rsqrt",St="SelectV2",Et="Selu",Rt="Slice",At="Sinh",Nt="Sign",Tt="Sigmoid",Dt="Softplus",Ft="Sqrt",_t="SpaceToBatchND",Ot="SplitV",Mt="Softmax",Lt="SquaredDifference",zt="Square",Bt="Tanh",Pt="Tile",Wt="Transpose",Ut="Unpack",Vt="UnsortedSegmentSum",Gt="ZerosLike",Ht="Step",jt="RotateWithOffset",qt="_FusedMatMul",Kt="FusedConv2D",Xt="FusedDepthwiseConv2D",Yt=d("kernelRegistry",(()=>new Map)),Jt=d("gradRegistry",(()=>new Map));function Zt(t){return Jt.get(t)}function Qt(t){const e=Yt.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===t&&n.push(a)}return n}function te(t){const{kernelName:e,backendName:n}=t,s=ne(e,n);Yt.has(s)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),Yt.set(s,t)}function ee(t){const{kernelName:e}=t;Jt.has(e)&&l().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),Jt.set(e,t)}function ne(t,e){return`${e}_${t}`}function se(t){let e=t.length,n=0,s=0;for(;e>0;)s=Math.random()*e|0,e--,n=t[e],t[e]=t[s],t[s]=n}function re(t,e,n){return Math.max(t,Math.min(e,n))}function ie(t){return t%2==0?t:t+1}function ae(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function oe(t,e,n=""){ae(ce(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function le(t){ae(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function ue(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||ve(t)&&!n)for(let s=0;s<t.length;++s)ue(t[s],e,n);else e.push(t);return e}function he(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function ce(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function de(t){return t%1==0}function pe(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function fe(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function ge(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function me(t,e=(t=>0),n){return new Promise(((s,r)=>{let i=0;const a=()=>{if(t())return void s();i++;const o=e(i);null!=n&&i>=n?r():setTimeout(a,o)};a()}))}function ye(t,e){const n=e.length;return ae((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),ae(t.every((t=>de(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function be(t,e){const n=[],s=[],r=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||r?null:ye(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[a]||i[a]>e)&&1===t[e]&&(n.push(t[e]),s.push(e)),i[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),s.push(e))}return{newShape:n,keptDims:s}}function xe(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function we(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function ve(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function Ce(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function $e(t){return"string"==typeof t||t instanceof String}function ke(t){return"number"==typeof t}function Ie(t){return Array.isArray(t)?Ie(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":ke(t)?"float32":$e(t)?"string":"boolean"==typeof t?"bool":"float32"}function Se(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Ee(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Re(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function Ae(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=ue(t)),l().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Ne(t,e,n){const s=new Array;if(1===e.length){const r=e[0];for(let e=0;e<r;e++)s[e]=n[t+e]}else{const r=e[0],i=e.slice(1),a=i.reduce(((t,e)=>t*e));for(let e=0;e<r;e++)s[e]=Ne(t+e*a,i,n)}return s}function Te(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return Ne(0,t,e)}function De(t,e){const n=Fe(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function Fe(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function _e(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return Te(t,new Float32Array(n));if("int32"===e)return Te(t,new Int32Array(n));if("bool"===e)return Te(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function Oe(){return l().platform.now()}function Me(t){t.forEach((e=>{ae(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function Le(t,e="utf-8"){return e=e||"utf-8",l().platform.decode(t,e)}function ze(t,e,n){if(0===e)return 0;if(1===e)return t[0];let s=t[t.length-1];for(let e=0;e<t.length-1;++e)s+=n[e]*t[e];return s}function Be(t,e,n){if(0===e)return[];if(1===e)return[t];const s=new Array(e);for(let e=0;e<s.length-1;++e)s[e]=Math.floor(t/n[e]),t-=s[e]*n[e];return s[s.length-1]=t,s}class Pe{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Ue)}profileKernel(t,e,n){let s;const r=this.backendTimer.time((()=>{s=n()}));for(let e=0;e<s.length;e++){const n=s[e];n.data().then((e=>{We(e,n.dtype,t)}))}return{kernelName:t,outputs:s,inputs:e,timeMs:r.then((t=>t.kernelMs)),extraInfo:r.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:s,inputs:r,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),s,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function We(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const s=t[e];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class Ue{logKernelProfile(t,e,n,s,r,i){const a="number"==typeof s?ge(`${s}ms`,9):s.error,o=ge(t,25),l=e.rank,u=e.size,h=ge(e.shape.toString(),14);let c="";for(const t in r){const n=r[t];if(null!=n){const s=n.shape||e.shape,r=s.length;c+=`${t}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${h}\t%c${u}\t%c${c}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ve(t,e,n,s){const r=Re(e),i=function(t,e,n,s){const r=he(e),i=s[s.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?qe(t):t;if(o>1)for(let t=0;t<r/i;t++){const e=t*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],Ge(l[e+t],0,n).length)}return a}(t,e,n,r),a=e.length,o=je(t,e,n,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function Ge(t,e,n){let s;return s=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:$e(t)?`'${t}'`:"bool"===n?He(t):parseFloat(t.toFixed(7)).toString(),ge(s,e)}function He(t){return 0===t?"false":"true"}function je(t,e,n,s,r,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[Ge(qe(t)[0],0,n)]:"bool"===n?[He(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let s=Array.from(t.slice(0,e)),i=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(s=qe(s),i=qe(i)),["["+s.map(((t,e)=>Ge(t,r[e],n))).join(", ")+", ..., "+i.map(((t,e)=>Ge(t,r[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?qe(t):Array.from(t)).map(((t,e)=>Ge(t,r[e],n))).join(", ")+"]"]}const u=e.slice(1),h=s.slice(1),c=s[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const s=e*c,i=s+c;d.push(...je(t.slice(s,i),u,n,h,r,!1))}d.push("...");for(let e=o-3;e<o;e++){const s=e*c,i=s+c;d.push(...je(t.slice(s,i),u,n,h,r,e===o-1))}}else for(let e=0;e<o;e++){const s=e*c,i=s+c;d.push(...je(t.slice(s,i),u,n,h,r,e===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function qe(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Ke{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=he(t),null!=n){const t=n.length;ae(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||we(e,this.size),this.strides=Re(t)}set(t,...e){0===e.length&&(e=[0]),ae(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Xe().makeTensor(this.values,this.shape,this.dtype)}}let Xe=null,Ye=null,Je=null;class Ze{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=he(t),this.strides=Re(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Ye.buffer(this.shape,this.dtype,t)}bufferSync(){return Ye.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Te(this.shape,t)}arraySync(){return Te(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=Xe().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>Le(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=Xe().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>Le(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Xe().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Xe().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ye.print(this,t)}clone(){return this.throwIfDisposed(),Ye.clone(this)}toString(t=!1){return Ve(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ye.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Xe().makeVariable(this,t,e,n)}}Object.defineProperty(Ze,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class Qe extends Ze{constructor(t,e,n,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!ce(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Xe().disposeTensor(this),this.dataId=t.dataId,Xe().incRef(this,null)}dispose(){Xe().disposeVariable(this),this.isDisposedInternal=!0}}var tn,en,nn,sn,rn;Object.defineProperty(Qe,Symbol.hasInstance,{value:t=>t instanceof Ze&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(tn||(tn={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(en||(en={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(nn||(nn={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(sn||(sn={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(rn||(rn={}));const an={float32:sn,int32:en,bool:nn,complex64:rn};function on(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return an[t][e]}function ln(t){return on(t,"int32")}function un(t,e){if(t.dtype===e.dtype)return[t,e];const n=on(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function hn(t,e){return e.some((e=>e.id===t.id))}function cn(t){const e=[];return dn(t,e,new Set),e}function dn(t,e,n){if(null==t)return;if(t instanceof Ze)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=t;for(const t in r){const s=r[t];n.has(s)||(n.add(s),dn(s,e,n))}}class pn{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class fn{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new pn}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Pe(this.backendInstance),!0}setupRegisteredKernels(){Qt(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){Qt(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(Promise.resolve(n)===n){const e=++this.pendingBackendInitId,s=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),s=n.backend,r=this.readSync(e);s.disposeData(e),n.backend=t,t.move(e,r,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,s=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return fn.nextTensorId++}nextVariableId(){return fn.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},s={dtype:e};return mn.runKernelFunc((n=>n.cast(t,e)),n,null,R,s)}})),[],{}),e}runKernel(t,e,n,s,r){return this.runKernelFunc(null,e,null,t,n,s,r)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const s=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-e-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t,e,n,s,r,i,a){let o,l=[];const u=this.isTapeOn();null==s&&(s=null!=this.state.activeScope?this.state.activeScope.name:"");const h=this.state.numBytes,c=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const p=function(t,e){const n=ne(t,e);return Yt.get(n)}(s,this.backendName);let f,g;if(null!=p)d=()=>{const t=this.backend.numDataIds();f=p.kernelFunc({inputs:e,attrs:r,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(s,t,n);const o=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(u){let t=this.getTensorsForGradient(s,e,o);if(null==t){null==a&&(a=[]);const e=o.filter(((t,e)=>a[e]));t=(i||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{u&&(l=t.map((t=>this.keep(this.clone(t)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const r=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(s,n,r),r}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(s,e,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),o=g.outputs):o=d()})),u&&this.addTapeNode(s,e,o,n,l,r),this.state.profiling&&this.state.activeProfile.kernels.push({name:s,bytesAdded:this.state.numBytes-h,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-c,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:o.map((t=>t.shape)),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const s=Zt(t);if(null!=s){const t=s.inputsToSave||[],r=s.outputsToSave||[];let i;s.saveAllInputs?(ae(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const a=n.filter(((t,e)=>r[e]));return i.concat(a)}return null}makeTensor(t,e,n,s){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=t;"string"===n&&$e(t[0])&&(r=t.map((t=>function(t,e="utf-8"){return e=e||"utf-8",l().platform.encode(t,e)}(t))));const i=s.write(r,e,n),a=new Ze(e,n,i,this.nextTensorId());if(this.incRef(a,s),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,s){const r=new Ze(e,n=n||"float32",t,this.nextTensorId());return this.incRef(r,s),r}makeVariable(t,e=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==t.dtype&&(t=t.cast(s));const r=new Qe(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*Ce(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof Qe||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,s,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},o=Zt(t);null!=o&&(s=o.gradFunc),null!=s&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],s=Fe(t.size,t.dtype);return this.makeTensor(s,t.shape,t.dtype)}return t})),s(t.length>1?t:t[0],r,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=cn(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==s.id||this.track(t)}))}gradients(t,e,n,s=!1){if(ae(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));ae(r instanceof Ze,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const s={},r={};for(let t=0;t<e.length;t++)s[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],a=i.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(s[n.id]){i.outputs.forEach((t=>s[t.id]=!0)),o=!0,r[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],s=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in s)i[s[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(r[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const r=n.inputs[e];s[r.id]&&(t[e]=r)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,r);if(!s&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=De(he(t),"float32");return mn.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,s){for(let r=e.length-1;r>=0;r--){const i=e[r],a=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const e in i.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[e]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const a=i.inputs[e];if(!ce(r.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=r;else{const e=t[a.id];t[a.id]=s(e,r),e.dispose()}}}}(t,i,(t=>this.tidy(t)),yn);const s=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(t){return ae(Se(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;ae(e.every((t=>t instanceof Ze)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return e.forEach(((t,e)=>{s[e]=t})),this.runKernelFunc(((s,r)=>(n=t(...e,r),ae(n.value instanceof Ze,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ae(Se(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),s,((t,s)=>{const r=n.gradFunc(t,s),i=Array.isArray(r)?r:[r];ae(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ae(i.every((t=>t instanceof Ze)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((t,e)=>{a[e]=()=>t})),a}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Oe(),n=await this.backend.time(t);return n.wallMs=Oe()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new pn;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function gn(){const t=c();if(null==t._tfengine){const e=new o(t);t._tfengine=new fn(e)}var e;return e=t._tfengine.ENV,h=e,Xe=()=>t._tfengine,t._tfengine}fn.nextTensorId=0,fn.nextVariableId=0;const mn=gn();function yn(t,e){const n={a:t,b:e};return mn.runKernelFunc(((n,s)=>{const r=n.add(t,e);return s([t,e]),r}),n,null,g)}function bn(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const xn=l();function wn(t,e){let n=t;if(ve(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||ve(n)&&"string"!==e;)s.push(n.length),n=n[0];return Array.isArray(t)&&l().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&vn(t,s,[]),s}function vn(t,e,n){if(n=n||[],!Array.isArray(t)&&!ve(t))return void ae(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));ae(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),ae(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const s=e.slice(1);for(let e=0;e<t.length;++e)vn(t[e],s,n.concat(e))}function Cn(t,e,n,s){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}function $n(t,e,n,s="numeric"){if(t instanceof Ze)return Cn(s,t.dtype,e,n),t;let r=Ie(t);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Cn(s,r,e,n),null==t||!ve(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const s=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const i=wn(t,r);ve(t)||Array.isArray(t)||(t=[t]);const a="string"!==r?Ae(t,r):ue(t,[],!0);return mn.makeTensor(a,i,r)}function kn(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,s)=>$n(t,`${e}[${s}]`,n)),s)}function In(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...t)=>{mn.startScope(n);try{const e=s(...t);return e instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),mn.endScope(e),e}catch(t){throw mn.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}xn.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),xn.registerFlag("IS_BROWSER",(()=>bn())),xn.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),xn.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),xn.registerFlag("PROD",(()=>!1)),xn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>xn.getBool("DEBUG"))),xn.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),xn.registerFlag("IS_TEST",(()=>!1));const Sn=In({complex_:function(t,e){const n=$n(t,"real","complex"),s=$n(e,"imag","complex");oe(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return mn.runKernelFunc((t=>t.complex(n,s)),r,null,"Complex")}});function En(t,e,n,s){if(null==s&&(s=Ie(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ve(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Me(e);const t=he(e),s=he(n);ae(t===s,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${s}`));for(let t=0;t<n.length;++t){const s=n[t],r=t!==n.length-1||s!==he(e.slice(t));ae(n[t]===e[t]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return ve(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?Ae(t,s):ue(t,[],!0),mn.makeTensor(t,e,s)}function Rn(t,e,n){return En(t,e,wn(t,n),n)}async function An(t,e){const n=[],s=[],r=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<r.length;++i){const a=r[i],o=Array.isArray(t)?t[i].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,s=new Uint8Array(n);let r=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(i,r),r+=4,s.set(n,r),r+=n.length}t(s)}));s.push(t)}else s.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:Nn(await Promise.all(s)),specs:n}}function Nn(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const s=new Uint8Array(e);let r=0;return n.forEach((t=>{s.set(new Uint8Array(t.buffer),r),r+=t.byteLength})),s.buffer}const Tn="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Dn(t){return Tn?Buffer.byteLength(t):new Blob([t]).size}function Fn(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let s=0;return t.forEach((t=>{n.set(new Uint8Array(t),s),s+=t.byteLength})),n.buffer}function _n(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Dn(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Dn(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class On{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==On.instance&&(On.instance=new On),On.instance}static registerSaveRouter(t){On.getInstance().saveRouters.push(t)}static registerLoadRouter(t){On.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return On.getHandlers(t,"save")}static getLoadHandlers(t,e){return On.getHandlers(t,"load",e)}static getHandlers(t,e,n){const s=[];return("load"===e?On.getInstance().loadRouters:On.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&s.push(r)})),s}}const Mn="tensorflowjs",Ln="models_store",zn="model_info_store";function Bn(){if(!l().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Pn(t){const e=t.result;e.createObjectStore(Ln,{keyPath:"modelPath"}),e.createObjectStore(zn,{keyPath:"modelPath"})}class Wn{constructor(t){if(this.indexedDB=Bn(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const s=this.indexedDB.open(Mn,1);s.onupgradeneeded=()=>Pn(s),s.onsuccess=()=>{const r=s.result;if(null==e){const e=r.transaction(Ln,"readonly"),s=e.objectStore(Ln).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(s.result.modelArtifacts)},s.onerror=t=>(r.close(),n(s.error)),e.oncomplete=()=>r.close()}else{const s=_n(e),i=r.transaction(zn,"readwrite");let a=i.objectStore(zn);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(Ln,"readwrite");const o=l.objectStore(Ln).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:s});o.onsuccess=()=>t({modelArtifactsInfo:s}),o.onerror=t=>{a=i.objectStore(zn);const e=a.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(o.error)),e.onerror=t=>(r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=t=>n(s.error)}))}}Wn.URL_SCHEME="indexeddb://";const Un=t=>{return l().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Wn.URL_SCHEME)?(e=t.slice(Wn.URL_SCHEME.length),new Wn(e)):null;var e};On.registerSaveRouter(Un),On.registerLoadRouter(Un);class Vn{constructor(){this.indexedDB=Bn()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(Mn,1);n.onupgradeneeded=()=>Pn(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(zn,"readonly"),i=r.objectStore(zn).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(s.close(),e(i.error)),r.oncomplete=()=>s.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Wn.URL_SCHEME)?e.slice(Wn.URL_SCHEME.length):e,new Promise(((e,n)=>{const s=this.indexedDB.open(Mn,1);s.onupgradeneeded=()=>Pn(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(zn,"readwrite"),a=i.objectStore(zn),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const s=a.delete(t),i=()=>{l=r.transaction(Ln,"readwrite");const s=l.objectStore(Ln).delete(t);s.onsuccess=()=>e(o.result.modelArtifactsInfo),s.onerror=t=>n(o.error)};s.onsuccess=i,s.onerror=t=>(i(),r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=t=>n(s.error)}))}}const Gn="/",Hn="tensorflowjs_models",jn="info",qn="model_topology",Kn="weight_specs",Xn="weight_data",Yn="model_metadata";function Jn(t){return{info:[Hn,t,jn].join(Gn),topology:[Hn,t,qn].join(Gn),weightSpecs:[Hn,t,Kn].join(Gn),weightData:[Hn,t,Xn].join(Gn),modelMetadata:[Hn,t,Yn].join(Gn)}}function Zn(t){const e=t.split(Gn);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Gn)}class Qn{constructor(t){if(!l().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Jn(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),s=_n(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Tn)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,s=e.length;t<s;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:s}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Tn){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}Qn.URL_SCHEME="localstorage://";const ts=t=>{return l().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Qn.URL_SCHEME)?(e=t.slice(Qn.URL_SCHEME.length),new Qn(e)):null;var e};On.registerSaveRouter(ts),On.registerLoadRouter(ts);class es{constructor(){ae(l().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ae("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Hn+Gn,n=Gn+jn;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(e)&&r.endsWith(n)&&(t[Zn(r)]=JSON.parse(this.LS.getItem(r)))}return t}async removeModel(t){var e;const n=Jn(t=(e=t).startsWith(Qn.URL_SCHEME)?e.slice(Qn.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),s}}class ns{constructor(){this.managers={}}static getInstance(){return null==ns.instance&&(ns.instance=new ns),ns.instance}static registerManager(t,e){ae(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),ae(t.length>0,(()=>"scheme must not be an empty string."));const n=ns.getInstance();ae(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class ss{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(l().get("IS_BROWSER")){l().setPlatform("browser",new ss);try{ns.registerManager(Qn.URL_SCHEME,new es)}catch(t){}try{ns.registerManager(Wn.URL_SCHEME,new Vn)}catch(t){}}let rs;function is(t,e="float32",n){return e=e||"float32",Me(t),new Ke(t,e,n)}l().get("IS_NODE")&&l().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=l().global.fetch?l().global.fetch(t,e):(null==rs&&(rs=n(410)),rs(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const as=In({cast_:function(t,e){const n=$n(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return mn.runKernelFunc((t=>t.cast(n,e)),s,null,R,r)}}),os=In({clone_:function(t){const e=$n(t,"x","clone",null),n={x:e};return mn.runKernelFunc((()=>mn.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,Y)}});function ls(t){return new Promise((t=>setTimeout(t))).then(t)}gn(),Ye={buffer:is,cast:as,clone:os,print:function(t,e=!1){console.log(t.toString(e))}};class us{constructor(t){if(!l().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(us.URL_SCHEME)&&(t=t.slice(us.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=r,await ls((()=>i.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await ls((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:_n(t)}}}}function hs(t,e,n,s){!function(t){ae(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){ae(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),ae(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),ae(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(t.map((i=>(i.then((i=>{const a=n+ ++r/t.length*(s-n);return e(a),i})),i))))}async function cs(t,e){null==e&&(e={});const n=null==e.fetchFunc?l().platform.fetch:e.fetchFunc,s=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(s):await hs(s,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await hs(r,e.onProgress,.5,1)}us.URL_SCHEME="downloads://",On.registerSaveRouter((t=>l().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(us.URL_SCHEME)?function(t="model"){return new us(t)}(t.slice(us.URL_SCHEME.length)):null));class ds{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(ae("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=l().platform.fetch,ae(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&ae(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:_n(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,s=e.weightsManifest,r=e.generatedBy,i=e.convertedBy,a=e.format,o=e.userDefinedMetadata;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,u;if(null!=s){const t=await this.loadWeights(s);[l,u]=t}return{modelTopology:n,weightSpecs:l,weightData:u,userDefinedMetadata:o,generatedBy:r,convertedBy:i,format:a}}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),r=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(r+t+s);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,Fn(await cs(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ps(t){return null!=t.match(ds.URL_SCHEME_REGEX)}ds.URL_SCHEME_REGEX=/^https?:\/\//;const fs=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>ps(t))):ps(t),n)return function(t,e){return new ds(t,e)}(t,e)}return null};function gs(t,e,n){ae(t.rank===e.length,(()=>`Error in slice${t.rank}D: Length of begin ${e} must match the rank of the array (${t.rank}).`)),ae(t.rank===n.length,(()=>`Error in slice${t.rank}D: Length of size ${n} must match the rank of the array (${t.rank}).`));for(let s=0;s<t.rank;++s)ae(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${t.rank}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function ms(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function ys(t,e,n){const s=[];for(let r=0;r<t.length;r++)s[r]=Math.ceil((e[r]-t[r])/n[r]);return s}function bs(t,e,n,s){const r=[...t];for(let t=r.length;t<s.length;t++)r.push(1);for(let t=0;t<n;t++)0===t?r[e]=1:(r.splice(e,0,1),r.pop());return r}function xs(t,e,n){return n<=t?n:n-(e-1)}function ws(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function vs(t,e,n,s,r,i,a,o,l){const u=t.length;let h=new Array(u),c=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;h=Cs(a,l,u,s,t),c=$s(o,l,u,r,t),d=bs(i,l,u,t)}else for(let e=0;e<u;e++)h[e]=Is(a,s,i,t,e,l),c[e]=Ss(o,r,i,t,e,l),d[e]=ks(i,e,l);return{begin:h,end:c,strides:d}}function Cs(t,e,n,s,r){const i=[...r],a=ws(n,e);for(let r=0;r<i.length;r++)if(a.indexOf(r)>-1)i[r]=0;else{const a=xs(e,n,r);let o=s[a];t&1<<a&&(o=0),i[r]=o}return i}function $s(t,e,n,s,r){const i=[...r],a=ws(n,e);for(let r=0;r<i.length;r++)if(a.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const a=xs(e,n,r);let o=s[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let t=0;t<i.length;t++){const e=r[t];i[t]<0&&(i[t]+=e),i[t]=re(0,i[t],r[t])}return i}function ks(t,e,n){let s=t[e];return(n&1<<e||null==s)&&(s=1),s}function Is(t,e,n,s,r,i){let a=e[r];const o=n[r]||1;(t&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=re(0,a,l-1),a}function Ss(t,e,n,s,r,i){let a=e[r];const o=n[r]||1;(t&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=o>0?re(0,a,l):re(-1,a,l-1),a}function Es(t,e,n){let s=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){s=t;break}for(let r=s+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function Rs(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function As(t,e,n){let s,r;return s="number"==typeof e?[e,...new Array(t.rank-1).fill(0)]:e.length<t.rank?e.concat(new Array(t.rank-e.length).fill(0)):e.slice(),s.forEach((t=>{ae(-1!==t,(()=>"slice() does not support negative begin indexing."))})),r=null==n?new Array(t.rank).fill(-1):"number"==typeof n?[n,...new Array(t.rank-1).fill(-1)]:n.length<t.rank?n.concat(new Array(t.rank-n.length).fill(-1)):n,r=r.map(((e,n)=>e>=0?e:(ae(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-s[n]))),[s,r]}On.registerSaveRouter(fs),On.registerLoadRouter(fs);class Ns{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Ts{constructor(){this.classNameMap={}}static getMap(){return null==Ts.instance&&(Ts.instance=new Ts),Ts.instance}static register(t){Ts.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Ds(t){ae(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),ae("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),ae(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ts.register(t)}function Fs(t){l().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function _s(){return mn}function Os(){return mn.memory()}function Ms(t,e){return mn.tidy(t,e)}function Ls(t){cn(t).forEach((t=>t.dispose()))}function zs(t){return mn.keep(t)}function Bs(t,e,n=1){return mn.registerBackend(t,e,n)}function Ps(t){return mn.customGrad(t)}function Ws(t,e){if((ve(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&ve(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return En(t,[],[],e)}Je=Fs;class Us extends Ns{minimize(t,e=!1,n){const{value:s,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:r[t.name]})));this.applyGradients(t)}else this.applyGradients(r);return Ls(r),e?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){ae(Se(t),(()=>"The f passed in variableGrads(f) must be a function")),ae(null==e||Array.isArray(e)&&e.every((t=>t instanceof Qe)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in mn.registeredVariables)e.push(mn.registeredVariables[t])}const s=n?e.filter((t=>!t.trainable)):null,r=e.length;ae((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:i,grads:a}=mn.gradients(t,e,null,!0);ae(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ae(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=s&&s.forEach((t=>o[t.name]=null)),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Ls(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ws(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Us,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Vs=In({abs_:function(t){const e=$n(t,"x","abs"),n={x:e};return mn.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,"Abs")}}),Gs=In({add_:function(t,e){let n=$n(t,"a","add"),s=$n(e,"b","add");[n,s]=un(n,s);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.add(n,s);return e([n,s]),r}),r,null,g)}});function Hs(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function js(t,e,n){const s=t.length+e.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(t[i++]):r.push(e[a++]);return r}function qs(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}function Ks(t,e){return js(t,e.map((t=>1)),e)}function Xs(t,e,n){ae(Hs(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function Ys(t,e){if(Hs(t,e))return null;const n=[];for(let s=0;s<e;++s)-1===t.indexOf(s)&&n.push(s);return t.forEach((t=>n.push(t))),n}function Js(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Zs(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}const Qs=In({reshape_:function(t,e){const n=$n(t,"x","reshape",null);e=function(t,e){let n=1,s=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${e}`);s=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===s){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const r=t.slice();return r[s]=e/n,r}(e,n.size),ae(n.size===he(e),(()=>"new shape and old shape must have the same number of elements."));const s={x:n},r={shape:e};return mn.runKernelFunc(((t,s)=>(s([n]),t.reshape(n,e))),s,null,xt,r)}}),tr=In({transpose_:function(t,e){const n=$n(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),ae(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{ae(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:e};return mn.runKernelFunc((t=>t.transpose(n,e)),s,null,Wt,r)}}),er=In({all_:function(t,e=null,n=!1){let s=$n(t,"x","all","bool");const r={x:s},i={axis:e,keepDims:n};return mn.runKernelFunc((t=>{const r=ye(e,s.shape);let i=r;const a=Ys(i,s.rank);null!=a&&(s=tr(s,a),i=Zs(i.length,s.rank));const o=t.all(s,i);if(n){const t=Ks(o.shape,r);return Qs(o,t)}return o}),r,null,"All",i)}}),nr=In({any_:function(t,e=null,n=!1){let s=$n(t,"x","any","bool");const r={x:s},i={axis:e,keepDims:n};return mn.runKernelFunc((t=>{const r=ye(e,s.shape);let i=r;const a=Ys(i,s.rank);null!=a&&(s=tr(s,a),i=Zs(i.length,s.rank));const o=t.any(s,i);if(n){const t=Ks(o.shape,r);return Qs(o,t)}return o}),r,null,"Any",i)}}),sr=In({argMax_:function(t,e=0){let n=$n(t,"x","argMax");const s={x:n},r={axis:e};return mn.runKernelFunc(((t,s)=>{s([n]);let r=ye(e,n.shape);const i=Ys(r,n.rank);return null!=i&&(n=tr(n,i),r=Zs(r.length,n.rank)),t.argMax(n,r[0])}),s,null,m,r)}});function rr(t,e,n,s,r="NHWC",i){return or(t,[...e,t[3]],n,i,s,null,null,mr(r))}function ir(t,e,n,s,r,i,a="channelsLast"){const[o,l]=hr(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return or(t,u,n,s,r,i,!1,a)}function ar(t,e,n,s,r,i,a="NDHWC"){const[o,l,u]=cr(e);let h,c;if("NDHWC"===a)c="channelsLast",h=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);c="channelsFirst",h=[o,l,u,t[1],t[1]]}return lr(t,h,n,s,r,!1,c,i)}function or(t,e,n,s,r,i,a=!1,o="channelsLast"){let[l,u,h,c]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,c]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,c,u,h]=t}const[d,p,,f]=e,[g,m]=hr(n),[y,b]=hr(s),x=dr(d,y),w=dr(p,b),{padInfo:v,outHeight:C,outWidth:$}=function(t,e,n,s,r,i,a,o,l){let u,h,c;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,s,r){null==s&&(s=ur(t,e,n));const i=t[1],a=pr((t[0]-e+2*s)/n+1,r);ae(de(a),(()=>`The output # of rows (${a}) must be an integer. Change the stride and/or zero pad parameters`));const o=pr((i-e+2*s)/n+1,r);return ae(de(o),(()=>`The output # of columns (${o}) must be an integer. Change the stride and/or zero pad parameters`)),[a,o]}([e,n],i,s,t,o);h=r[0],c=r[1]}else if("same"===t){h=Math.ceil(e/s),c=Math.ceil(n/r);const t=Math.max(0,(h-1)*s+i-e),o=Math.max(0,(c-1)*r+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-i+1)/s),c=Math.ceil((n-a+1)/r);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],g="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},h=pr((e-i+d+p)/s+1,o),c=pr((n-a+f+g)/r+1,o)}}return{padInfo:u,outHeight:h,outWidth:c}}(r,u,h,g,m,x,w,i,o),k=a?f*c:f;let I;return"channelsFirst"===o?I=[l,k,C,$]:"channelsLast"===o&&(I=[l,C,$,k]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:c,outHeight:C,outWidth:$,outChannels:k,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:t,outShape:I,filterShape:e}}function lr(t,e,n,s,r,i=!1,a="channelsLast",o){let[l,u,h,c,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,h,c,d]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,h,c]=t}const[p,f,g,,m]=e,[y,b,x]=cr(n),[w,v,C]=cr(s),$=dr(p,w),k=dr(f,v),I=dr(g,C),{padInfo:S,outDepth:E,outHeight:R,outWidth:A}=function(t,e,n,s,r,i,a,o,l,u,h){let c,d,p,f;if("number"==typeof t){c={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,s,r,i){null==r&&(r=ur(t,e,s));const a=t[1],o=t[2],l=pr((t[0]-e+2*r)/s+1,i);ae(de(l),(()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`));const u=pr((a-e+2*r)/s+1,i);ae(de(u),(()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`));const h=pr((o-e+2*r)/s+1,i);return ae(de(h),(()=>`The output # of columns (${h}) must be an integer. Change the stride and/or zero pad parameters`)),[l,u,h,1]}([e,n,s,1],o,0,r,t,h);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/r),p=Math.ceil(n/i),f=Math.ceil(s/a);const t=(d-1)*r+o-e,h=(p-1)*i+l-n,g=(f-1)*a+u-s,m=Math.floor(t/2),y=t-m,b=Math.floor(h/2),x=h-b,w=Math.floor(g/2);c={top:b,bottom:x,left:w,right:g-w,front:m,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/r),p=Math.ceil((n-l+1)/i),f=Math.ceil((s-u+1)/a)}return{padInfo:c,outDepth:d,outHeight:p,outWidth:f}}(r,u,h,c,y,b,x,$,k,I,o),N=i?m*d:m;let T;return"channelsFirst"===a?T=[l,N,E,R,A]:"channelsLast"===a&&(T=[l,E,R,A,N]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:h,inWidth:c,inChannels:d,outDepth:E,outHeight:R,outWidth:A,outChannels:N,padInfo:S,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:$,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationDepth:w,dilationHeight:v,dilationWidth:C,inShape:t,outShape:T,filterShape:e}}function ur(t,e,n,s=1){const r=dr(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}function hr(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function cr(t){return"number"==typeof t?[t,t,t]:t}function dr(t,e){return e<=1?t:t+(t-1)*(e-1)}function pr(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function fr(t){const[e,n,s]=hr(t);return 1===e&&1===n&&1===s}function gr(t,e){return fr(t)||fr(e)}function mr(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const yr=In({avgPool_:function(t,e,n,s,r){const i=$n(t,"x","avgPool","float32");ae(gr(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=Qs(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ae(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),null!=r&&ae(de(s),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let h=mn.runKernelFunc(((t,i)=>{const o=ir(a.shape,e,n,1,s,r);return i([a]),1===o.filterWidth&&1===o.filterHeight&&ce(o.inShape,o.outShape)?a.clone():t.avgPool(a,o)}),l,null,$,u);return h=as(h,i.dtype),o?Qs(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),br=In({avgPool3d_:function(t,e,n,s,r,i="NDHWC",a){null==a?a=[1,1,1]:Fs("dilations is deprecated, this field will be gone in v3.0.0.");const o=$n(t,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=Qs(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ae(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),ae("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),ae(gr(n,a),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=r&&ae(de(s),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const h={x:l},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i,dilations:a};let d=mn.runKernelFunc(((t,o)=>{null==a&&(a=[1,1,1]);const u=ar(l.shape,e,n,a,s,r,i);return o([l]),t.avgPool3d(l,u)}),h,null,k,c);return d=as(d,l.dtype),u?Qs(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function xr(t){return null==t?null:0===t.rank?Qs(t,[t.size]):1===t.rank?t:2===t.rank?Qs(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Qs(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const wr=In({batchNorm_:function(t,e,n,s,r,i){null==i&&(i=.001);const a=$n(t,"x","batchNorm"),o=$n(e,"mean","batchNorm"),l=$n(n,"variance","batchNorm");let u,h;null!=r&&(u=$n(r,"scale","batchNorm")),null!=s&&(h=$n(s,"offset","batchNorm")),ae(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ae(null==h||o.rank===h.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ae(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const c=function(t){let e;return e=0===t.rank||1===t.rank?Qs(t,[1,1,1,t.size]):2===t.rank?Qs(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Qs(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),d={x:c,scale:u,offset:h,mean:o,variance:l},p={varianceEpsilon:i},f=mn.runKernelFunc(((t,e)=>(e([c,o,l,u]),t.batchNorm(c,xr(o),xr(l),xr(h),xr(u),i))),d,null,q,p);return Qs(f,a.shape)}}),vr=In({batchNorm2d_:function(t,e,n,s,r,i){const a=$n(t,"x","batchNorm"),o=$n(e,"mean","batchNorm"),l=$n(n,"variance","batchNorm");let u,h;return null!=r&&(u=$n(r,"scale","batchNorm")),null!=s&&(h=$n(s,"offset","batchNorm")),ae(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),ae(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),ae(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&ae(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=h&&ae(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),wr(a,o,l,h,u,i)}}),Cr=In({batchNorm3d_:function(t,e,n,s,r,i){const a=$n(t,"x","batchNorm"),o=$n(e,"mean","batchNorm"),l=$n(n,"variance","batchNorm");let u,h;return null!=r&&(u=$n(r,"scale","batchNorm")),null!=s&&(h=$n(s,"offset","batchNorm")),ae(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),ae(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),ae(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&ae(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=h&&ae(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),wr(a,o,l,h,u,i)}}),$r=In({batchNorm4d_:function(t,e,n,s,r,i){const a=$n(t,"x","batchNorm"),o=$n(e,"mean","batchNorm"),l=$n(n,"variance","batchNorm");let u,h;return null!=r&&(u=$n(r,"scale","batchNorm")),null!=s&&(h=$n(s,"offset","batchNorm")),ae(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),ae(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),ae(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&ae(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=h&&ae(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),wr(a,o,l,h,u,i)}}),kr=In({clipByValue_:function(t,e,n){const s=$n(t,"x","clipByValue");ae(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const r={x:s},i={clipValueMin:e,clipValueMax:n};return mn.runKernelFunc(((t,r)=>{const i=t.clip(s,e,n);return r([s]),i}),r,null,N,i)}});function Ir(t,e){const n=t[0].length;t.forEach(((t,e)=>{ae(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),ae(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=t[0];t.forEach(((t,r)=>{for(let i=0;i<n;i++)ae(i===e||t[i]===s[i],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${t}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Sr(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}const Er=In({concat_:function(t,e=0){ae(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=kn(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const s=ye(e,n[0].shape)[0],r=Sr(n.map((t=>t.shape)),s);if(0===he(r))return Rn([],r);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];Ir(n.map((t=>t.shape)),s);const i=n,a={axis:e};return mn.runKernelFunc(((t,e)=>{const r=t.concat(n,s);return e(n),r}),i,null,T,a)}}),Rr=In({concat1d_:function(t){return Er(t,0)}}),Ar=In({concat2d_:function(t,e){return Er(t,e)}}),Nr=In({concat3d_:function(t,e){return Er(t,e)}}),Tr=In({concat4d_:function(t,e){return Er(t,e)}}),Dr=In({conv2d_:function(t,e,n,s,r="NHWC",i=[1,1],a){const o=$n(t,"x","conv2d"),l=$n(e,"filter","conv2d");let u=o,h=!1;3===o.rank&&(h=!0,u=Qs(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ae(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),ae(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=a&&ae(de(s),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const c="NHWC"===r?u.shape[3]:u.shape[1];ae(c===l.shape[2],(()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${l.shape[2]}.`)),ae(gr(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=mn.runKernelFunc(((t,e)=>{const o=mr(r),h=or(u.shape,l.shape,n,i,s,a,!1,o),c=t.conv2d(u,l,h);return e([u,l]),c}),d,null,D,p);return h?Qs(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Fr=In({conv1d_:function(t,e,n,s,r="NWC",i=1,a){const o=$n(t,"x","conv1d"),l=$n(e,"filter","conv1d");let u=o,h=!1;2===o.rank&&(h=!0,u=Qs(o,[1,o.shape[0],o.shape[1]])),ae(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),ae(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=a&&ae(de(s),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`)),ae(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),ae(gr(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),ae("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const c=Qs(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Qs(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Dr(d,c,[1,n],s,"NHWC",[1,i],a);return Qs(p,h?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),_r=In({conv2DBackpropInput_:function(t,e,n,s,r,i="NHWC",a){ae(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=Qs(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),ae(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ae(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),ae(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===i?o[3]:o[1],c="NHWC"===i?l.shape[3]:l.shape[1];ae(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),ae(c===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[3]}.`)),null!=a&&ae(de(r),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},f=mn.runKernelFunc(((t,e)=>{const u=mr(i),h=or(o,n.shape,s,1,r,a,!1,u),c=t.conv2dDerInput(l,n,h);return e([l,n]),c}),d,null,F,p);return u?Qs(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Or=In({conv2dTranspose_:function(t,e,n,s,r,i){const a=$n(t,"x","conv2dTranspose"),o=$n(e,"filter","conv2dTranspose");return _r(n,a,o,s,r,"NHWC",i)}}),Mr=In({conv3d_:function(t,e,n,s,r="NDHWC",i=[1,1,1]){const a=$n(t,"x","conv3d"),o=$n(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=Qs(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),ae(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),ae(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ae(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ae(gr(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),ae("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const h={x:l,filter:o},c={strides:n,pad:s,dataFormat:r,dilations:i},d=mn.runKernelFunc(((t,e)=>{const r=lr(l.shape,o.shape,n,i,s),a=t.conv3d(l,o,r);return e([l,o]),a}),h,null,_,c);return u?Qs(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Lr=In({depthwiseConv2d_:function(t,e,n,s,r="NHWC",i=[1,1],a){const o=$n(t,"x","depthwiseConv2d"),l=$n(e,"filter","depthwiseConv2d");let u=o,h=!1;3===o.rank&&(h=!0,u=Qs(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ae(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),ae(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),ae(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=a&&ae(de(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const c={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},p=mn.runKernelFunc(((t,e)=>{null==i&&(i=[1,1]),ae(gr(n,i),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const r=or(u.shape,l.shape,n,i,s,a,!0),o=t.depthwiseConv2D(u,l,r);return e([u,l]),o}),c,null,z,d);return h?Qs(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),zr=In({floorDiv_:function(t,e){let n=$n(t,"a","floorDiv"),s=$n(e,"b","floorDiv");[n,s]=un(n,s);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.floorDiv(n,s);return e([n,s]),r}),r,null,j)}}),Br=In({div_:function(t,e){let n=$n(t,"a","div"),s=$n(e,"b","div");if([n,s]=un(n,s),"int32"===n.dtype&&"int32"===s.dtype)return zr(n,s);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.realDivide(n,s);return e([n,s]),r}),r,null,U,{})}}),Pr=In({elu_:function(t){const e=$n(t,"x","elu"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.elu(e);return n([s]),s}),n,null,"Elu")}});function Wr(t,e){const n=t.length,s=[];for(let r=0;r<n;r++){const i=n-1-r,a=t[i]||1;(e[e.length-1-r]||1)>1&&1===a&&s.unshift(i)}return s}function Ur(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],i=e.length-s-1,a=e[i];(null==r||1===r&&a>1)&&n.unshift(i)}return n}function Vr(t,e){const n=[],s=Math.max(t.length,e.length);for(let r=0;r<s;r++){let s=t[t.length-r-1];null==s&&(s=1);let i=e[e.length-r-1];if(null==i&&(i=1),1===s)n.unshift(i);else if(1===i)n.unshift(s);else{if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(s)}}return n}const Gr=In({equal_:function(t,e){let n=$n(t,"a","equal"),s=$n(e,"b","equal");[n,s]=un(n,s),Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc((t=>t.equal(n,s)),r,null,"Equal")}}),Hr=In({expandDims_:function(t,e=0){const n=$n(t,"x","expandDims",null);ae(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s=n.shape.slice();return e<0&&(ae(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),s.splice(e,0,1),Qs(n,s)}}),jr=In({tile_:function(t,e){const n=$n(t,"x","tile",null);ae(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const s=[n],r={x:n},i={reps:e};return mn.runKernelFunc(((t,s)=>{const r=t.tile(n,e);return s([n]),r}),r,null,Pt,i,s)}}),qr=In({eye_:function(t,e,n,s="float32"){null==e&&(e=t);const r=is([t,e],s),i=t<=e?t:e;for(let t=0;t<i;++t)r.set(1,t,t);const a=Qs(r.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return jr(Hr(a,0),[n[0],1,1]);if(2===n.length)return jr(Hr(Hr(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return jr(Hr(Hr(Hr(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Kr(t,e,n){const s={shape:t,value:e,dtype:n};return mn.runKernelFunc((s=>s.fill(t,e,n)),{},null,"Fill",s)}const Xr=In({floor_:function(t){const e=$n(t,"x","floor"),n={x:e};return mn.runKernelFunc((t=>t.floor(e)),n,null,H)}}),Yr=30;function Jr(t){return t<=Yr?t:Ee(t,Math.floor(Math.sqrt(t)))}function Zr(t,e){let n,s=!1;for(t<=Yr?(n=t,s=!0):n=Ee(t,Math.floor(Math.sqrt(t)));!s;)n>e||n===t?s=!0:n=Ee(t,n+1);return n}function Qr(t,e,n){const s=[],r=t.length;for(let i=0;i<r;i++)i!==e?s.push(t[i]):s.push(n);return s}function ti(t,e,n){const s=t.shape[n],r=[];let i=1,a=1;for(let e=0;e<n;e++)r.push(t.shape[e]),i*=t.shape[e];for(let t=0;t<e.rank;t++)r.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)r.push(t.shape[e]),a*=t.shape[e];return{batchSize:i,sliceSize:a,dimSize:s,outputShape:r}}const ei=In({gather_:function(t,e,n=0){const s=$n(t,"x","gather"),r=$n(e,"indices","gather","int32"),i={x:s,indices:r},a={axis:n};return mn.runKernelFunc(((t,e)=>{const i=ye(n,s.shape)[0],a=ti(s,r,i),o=t.gather(s,Qs(r,[r.size]),i);return e([s,r]),Qs(o,a.outputShape)}),i,null,K,a)}}),ni=In({greater_:function(t,e){let n=$n(t,"a","greater"),s=$n(e,"b","greater");[n,s]=un(n,s),Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc((t=>t.greater(n,s)),r,null,"Greater")}}),si=In({greaterEqual_:function(t,e){let n=$n(t,"a","greaterEqual"),s=$n(e,"b","greaterEqual");[n,s]=un(n,s),Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.greaterEqual(n,s);return e([n,s]),r}),r,null,X)}}),ri=In({imag_:function(t){const e=$n(t,"input","imag"),n={input:e};return mn.runKernelFunc((t=>t.imag(e)),n,null,"Imag")}}),ii=In({maximum_:function(t,e){let n=$n(t,"a","maximum"),s=$n(e,"b","maximum");[n,s]=un(n,s),"bool"===n.dtype&&(n=as(n,"int32"),s=as(s,"int32")),Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.maximum(n,s);return e([n,s]),r}),r,null,st)}}),ai=In({mul_:function(t,e){let n=$n(t,"a","mul"),s=$n(e,"b","mul");[n,s]=un(n,s);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.multiply(n,s);return e([n,s]),r}),r,null,lt)}}),oi=In({leakyRelu_:function(t,e=.2){const n=$n(t,"x","leakyRelu");return ii(ai(Ws(e),n),n)}}),li=In({log_:function(t){const e=$n(t,"x","log"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.log(e);return n([e]),s}),n,null,"Log")}}),ui=In({exp_:function(t){const e=$n(t,"x","exp"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.exp(e);return n([s]),s}),n,null,"Exp")}}),hi=In({max_:function(t,e=null,n=!1){const s=$n(t,"x","max"),r={x:s},i={reductionIndices:e,keepDims:n};return mn.runKernelFunc(((t,r)=>{let i=ye(e,s.shape);const a=Ys(i,s.rank);let o=s;null!=a&&(o=tr(s,a),i=Zs(i.length,o.rank));const l=t.max(o,i);null!=a&&o.dispose();let u=l;if(n){const t=Ks(u.shape,ye(e,s.shape));u=Qs(u,t),l.dispose()}return r([s,u]),u}),r,null,nt,i)}}),ci=In({sub_:function(t,e){let n=$n(t,"a","sub"),s=$n(e,"b","sub");[n,s]=un(n,s);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.subtract(n,s);return e([n,s]),r}),r,null,"Sub")}}),di=In({sum_:function(t,e=null,n=!1){let s=$n(t,"x","sum");"bool"===s.dtype&&(s=as(s,"int32"));const r={x:s},i={axis:e,keepDims:n};return mn.runKernelFunc(((t,r)=>{r([s]);const i=ye(e,s.shape),a=Ys(i,s.rank);let o=i,l=s;null!=a&&(l=tr(s,a),o=Zs(o.length,s.rank));let u=t.sum(l,o);if(n){const t=Ks(u.shape,i);u=Qs(u,t)}return u}),r,null,"Sum",i)}}),pi=In({logSoftmax_:function(t,e=-1){const n=$n(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const s={logits:n},r={axis:e};return mn.runKernelFunc(((n,s)=>{const r=hi(t,e,!0),i=ci(t,r),a=ci(as(i,"float32"),li(di(ui(i),e,!0)));return s([a]),a}),s,null,et,r)}}),fi=In({logicalAnd_:function(t,e){const n=$n(t,"a","logicalAnd","bool"),s=$n(e,"b","logicalAnd","bool");Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc((t=>t.logicalAnd(n,s)),r,null,"LogicalAnd")}}),gi=In({maxPool_:function(t,e,n,s,r){const i=$n(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=Qs(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ae(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),ae(gr(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=r&&ae(de(s),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r},h=mn.runKernelFunc(((t,i)=>{const o=ir(a.shape,e,n,1,s,r);let l;return l=1===o.filterWidth&&1===o.filterHeight&&ce(o.inShape,o.outShape)?a.clone():t.maxPool(a,o),i([a,l]),l}),l,null,rt,u);return o?Qs(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),mi=In({maxPool3d_:function(t,e=[1,1,1],n,s,r,i="NDHWC",a){null==a?a=[1,1,1]:Fs("dilations is deprecated, this field will be gone in v3.0.0.");const o=$n(t,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=Qs(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ae(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),ae("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),ae(gr(n,a),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=r&&ae(de(s),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const h={x:l},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i,dilations:a},d=mn.runKernelFunc(((t,o)=>{null==a&&(a=[1,1,1]);const u=ar(l.shape,e,n,a,s,r,i),h=t.maxPool3d(l,u);return o([l,h]),h}),h,null,it,c);return u?Qs(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function yi(t,e="float32"){if("complex64"===e){const e=yi(t,"float32"),n=yi(t,"float32");return Sn(e,n)}const n=Fe(he(t),e);return mn.makeTensor(n,t,e)}function bi(t,e="float32"){if("complex64"===e){const e=bi(t,"float32"),n=yi(t,"float32");return Sn(e,n)}const n=De(he(t),e);return mn.makeTensor(n,t,e)}const xi=In({mean_:function(t,e=null,n=!1){const s=$n(t,"x","mean"),r=ye(e,s.shape),i=he(qs(s.shape,r)[1]);return Ps((t=>{const s=Ws(i),a=s.dtype===t.dtype?t:as(t,s.dtype),o=Br(a,s);return{value:di(o,e,n),gradFunc:e=>{const n=t.shape.slice();r.forEach((t=>{n[t]=1}));const s=Qs(e,n);return Br(ai(s,bi(t.shape,"float32")),i)}}}))(s)}}),wi=In({min_:function(t,e=null,n=!1){const s=$n(t,"x","min"),r={x:s},i={axis:e,keepDims:n};return mn.runKernelFunc(((t,r)=>{const i=ye(e,s.shape);let a=i;const o=Ys(a,s.rank);let l=s;null!=o&&(l=tr(s,o),a=Zs(a.length,s.rank));const u=t.min(l,a);null!=o&&l.dispose();let h=u;if(n){const t=Ks(h.shape,i);h=Qs(u,t),u.dispose()}return r([s,h]),h}),r,null,"Min",i)}}),vi=In({minimum_:function(t,e){let n=$n(t,"a","minimum"),s=$n(e,"b","minimum");[n,s]=un(n,s),"bool"===n.dtype&&(n=as(n,"int32"),s=as(s,"int32")),Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.minimum(n,s);return e([n,s]),r}),r,null,ot)}}),Ci=In({square_:function(t){const e=$n(t,"x","square"),n=[e];return mn.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}}),$i=In({moments_:function(t,e=null,n=!1){const s=ye(e,(t=$n(t,"x","moments")).shape),r=xi(t,s,n);let i=r.shape;n||(i=Ks(r.shape,s));const a=Ci(ci(as(t,"float32"),Qs(r,i)));return{mean:r,variance:xi(a,s,n)}}}),ki=In({neg_:function(t){const e=$n(t,"x","neg"),n={x:e};return mn.runKernelFunc((t=>t.neg(e)),n,null,ut)}}),Ii=In({notEqual_:function(t,e){let n=$n(t,"a","notEqual"),s=$n(e,"b","notEqual");[n,s]=un(n,s),Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc((t=>t.notEqual(n,s)),r,null,"NotEqual")}}),Si=In({oneHot_:function(t,e,n=1,s=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const r=$n(t,"indices","oneHot","int32"),i=[...r.shape,e],a={indices:r},o={depth:e,onValue:n,offValue:s};return mn.runKernelFunc(((t,a)=>(a([r]),Qs(t.oneHot(Qs(r,[r.size]),e,n,s),i))),a,null,ft,o)}}),Ei=In({real_:function(t){const e=$n(t,"input","real"),n={input:e};return mn.runKernelFunc((t=>t.real(e)),n,null,"Real")}}),Ri=In({zerosLike_:function(t){const e=$n(t,"x","zerosLike"),n={x:e};return mn.runKernelFunc((t=>t.zerosLike(e)),n,null,Gt)}}),Ai=In({onesLike_:function(t){const e=$n(t,"x","onesLike"),n={x:e};return mn.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=Ai(Ei(e)),n=Ri(ri(e));return Sn(t,n)}return t.onesLike(e)}),n,null,pt)}}),Ni=In({pad_:function(t,e,n=0){const s=$n(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},i={x:s};return mn.runKernelFunc(((t,r)=>(r([s]),t.pad(s,e,n))),i,null,gt,r)}}),Ti=In({prelu_:function(t,e){const n=$n(t,"x","prelu"),s=$n(e,"alpha","prelu"),r={x:n,alpha:s};return mn.runKernelFunc(((t,e)=>{const r=t.prelu(n,s);return e([n,s]),r}),r,null,mt)}});var Di=n(377);class Fi{constructor(t,e,n,s,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=r||Math.random();this.random=Di.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let s,r,i;do{s=2*this.random()-1,r=2*this.random()-1,i=s*s+r*r}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*s*a,e=this.mean+this.stdDev*r*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class _i{constructor(t=0,e=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Di.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Oi=In({randomNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const i=new Fi(e,n,s,!1,r),a=is(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Mi=In({randomUniform_:function(t,e=0,n=1,s="float32",r){const i=is(t,s),a=new _i(e,n,null,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});function Li(t,e){le(t);const n=wn(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return En(t,null,n,e)}function zi(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return mn.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return yi([0],s);const r=Fe(Math.abs(Math.ceil((e-t)/n)),s);e<t&&1===n&&(n=-1),r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+n;return Li(r,s)}),{},null,"Range",r)}const Bi=In({relu_:function(t){const e=$n(t,"x","relu"),n={x:e};return mn.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?as(e,"int32"):t.relu(e))),n,null,bt)}}),Pi=In({reverse_:function(t,e){const n=$n(t,"x","reverse"),s={x:n},r={dims:e};return mn.runKernelFunc((t=>{const s=ye(e,n.shape);if(0===n.rank)return os(n);const r=t.reverse(n,s);return Qs(r,n.shape)}),s,null,$t,r)}}),Wi=In({selu_:function(t){const e=$n(t,"x","selu"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.selu(e);return n([e]),s}),n,null,Et)}}),Ui=In({separableConv2d_:function(t,e,n,s,r,i=[1,1],a="NHWC"){const o=$n(t,"x","separableConv2d"),l=$n(e,"depthwiseFilter","separableConv2d"),u=$n(n,"pointwiseFilter","separableConv2d");let h=o,c=!1;if(3===o.rank&&(c=!0,h=Qs(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ae(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),ae(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),ae(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),ae(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),ae(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];ae(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Lr(h,l,s,r,a,i),g=Dr(f,u,1,"valid",a);return c?Qs(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Vi=In({sigmoid_:function(t){const e=$n(t,"x","sigmoid"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.sigmoid(e);return n([s]),s}),n,null,Tt)}}),Gi=In({slice_:function(t,e,n){const s=$n(t,"x","slice");if(0===s.rank)throw new Error("Slicing scalar is not possible");const[r,i]=As(s,e,n);gs(s,r,i);const a={x:s},o={begin:e,size:n};return mn.runKernelFunc(((t,e)=>(e([s]),t.slice(s,r,i))),a,null,Rt,o)}}),Hi=In({slice1d_:function(t,e,n){const s=$n(t,"x","slice1d");return ae(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Gi(s,[e],[n])}}),ji=In({slice2d_:function(t,e,n){const s=$n(t,"x","slice2d");return ae(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Gi(s,e,n)}}),qi=In({slice3d_:function(t,e,n){const s=$n(t,"x","slice3d");return ae(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Gi(s,e,n)}}),Ki=In({slice4d_:function(t,e,n){const s=$n(t,"x","slice4d");return ae(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Gi(s,e,n)}}),Xi=In({softmax_:function(t,e=-1){const n=$n(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return mn.runKernelFunc(((t,s)=>{const r=t.softmax(n,e);return s([r]),r}),s,null,Mt,r)}}),Yi=In({softplus_:function(t){const e=$n(t,"x","softplus"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.softplus(e);return n([e]),s}),n,null,Dt)}});function Ji(t,e,n=0){let s=[];if("number"==typeof e)ae(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(e).fill(t.shape[n]/e);else{const r=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);ae(r<=1,(()=>"There should be only one negative value in split array."));const i=e.indexOf(-1);if(-1!==i){const s=e.reduce(((t,e)=>e>0?t+e:t));e[i]=t.shape[n]-s}ae(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=e}return s}const Zi=In({split_:function(t,e,n=0){const s=$n(t,"x","split"),r={x:s},i={numOrSizeSplits:e,axis:n};return mn.runKernelFunc(((t,r)=>{const i=ye(n,s.shape)[0],a=Ji(s,e,i);return t.split(s,a,i)}),r,null,Ot,i)}}),Qi=In({sqrt_:function(t){const e=$n(t,"x","sqrt"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.sqrt(e);return n([e]),s}),n,null,Ft)}}),ta=In({squeeze_:function(t,e){const n=$n(t,"x","squeeze");return Qs(n,be(n.shape,e).newShape)}}),ea=In({stack_:function(t,e=0){const n=kn(t,"tensors","stack");if(ae(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return Hr(n[0],e);const s=n[0].rank,r=n[0].shape,i=n[0].dtype;ae(e<=s,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{oe(r,t.shape,"All tensors passed to stack must have matching shapes"),ae(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const a=n.map((t=>Hr(t,e)));return Er(a,e)}}),na=In({tanh_:function(t){const e=$n(t,"x","tanh"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.tanh(e);return n([s]),s}),n,null,Bt)}});function sa(t,e,n){if(le(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const s=wn(t,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return En(t,e,s,n)}function ra(t,e,n){if(le(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const s=wn(t,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return En(t,e,s,n)}const ia=In({truncatedNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const i=new Fi(e,n,s,!0,r),a=is(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),aa=In({unstack_:function(t,e=0){const n=$n(t,"x","unstack");ae(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const s={value:n},r={axis:e};return mn.runKernelFunc((t=>t.unstack(n,e)),s,null,Ut,r)}}),oa=In({broadcastTo_:function(t,e){let n=$n(t,"broadcastTo","x");const s=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Qs(n,t)}const r=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(r[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return os(n);const a={x:n},o={shape:e,inputShape:r};return mn.runKernelFunc((t=>t.tile(n,i)),a,null,E,o)}}),la=In({where_:function(t,e,n){const s=$n(e,"a","where"),r=$n(n,"b","where"),i=$n(t,"condition","where","bool"),a=Vr(s.shape,r.shape),o=oa(s,a),l=oa(r,a);1===i.rank&&ae(i.shape[0]===s.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==i.rank&&oe(i.shape,l.shape,"Error in where: ");const u={condition:i,t:o,e:l};return mn.runKernelFunc(((t,e)=>{const n=t.select(i,o,l);return e([i]),n}),u,null,St)}}),ua=In({dropout_:function(t,e,n,s){const r=$n(t,"x","dropout");if(ae("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),ae(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Ze?r.clone():r;const i=function(t,e){if(null==e)return t.shape.slice();if(ce(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)null==e[s]&&null!=t.shape[s]?n.push(t.shape[s]):n.push(e[s]);return n}return e}(r,n),a=1-e,o=Br(Xr(Gs(Mi(i,0,1,"float32",s),a)),a);return ai(r,o)}}),ha=In({fft_:function(t){ae("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return mn.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],s=t.size/n,r=t.as2D(s,n);return e.fft(r).reshape(t.shape)}),e,null,"FFT")}}),ca=In({rfft_:function(t,e){ae("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(null!=e&&e<n){const s=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,r=Gi(t,s,i),n=e}else if(null!=e&&e>n){const s=t.shape.map((t=>t));s[t.shape.length-1]=e-n,r=Er([t,yi(s)],t.shape.length-1),n=e}else r=t;const i=Ri(r),a=Qs(Sn(r,i),[s,n]),o=ha(a),l=Math.floor(n/2)+1,u=Ei(o),h=ri(o),c=Zi(u,[l,n-l],u.shape.length-1),d=Zi(h,[l,n-l],h.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,Qs(Sn(c[0],d[0]),p)}}),da=In({ifft_:function(t){ae("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return mn.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],s=t.size/n,r=Qs(t,[s,n]),i=e.ifft(r);return Qs(i,t.shape)}),e,null,"IFFT")}}),pa=In({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=Qs(t,[n,e]);s=da(r)}else{const r=[n,2*(e-1)],i=Qs(Ei(t),[n,e]),a=Qs(ri(t),[n,e]),o=Pi(Gi(i,[0,1],[n,e-2]),1),l=ai(Pi(Gi(a,[0,1],[n,e-2]),1),Ws(-1)),u=Er([i,o],1),h=Er([a,l],1),c=Qs(Sn(u,h),[r[0],r[1]]);s=da(c)}if(s=Ei(s),3===t.rank&&0!==t.shape[0]){const e=s,n=t.shape[0];s=Qs(s,[n,s.shape[0]/n,s.shape[1]]),e.dispose()}return s}}),fa=In({conv2DBackpropFilter_:function(t,e,n,s,r,i="NHWC",a){let o=t;3===t.rank&&(o=Qs(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=Qs(e,[1,e.shape[0],e.shape[1],e.shape[2]])),ae(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ae(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),ae(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],h="NHWC"===i?l.shape[3]:l.shape[1];ae(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),ae(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),null!=a&&ae(de(r),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const c={x:o,dy:l},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:a};return mn.runKernelFunc((t=>{const e=mr(i),u=or(o.shape,n,s,1,r,a,!1,e);return t.conv2dDerFilter(o,l,u)}),c,null,"Conv2DBackpropFilter",d)}}),ga=In({relu6_:function(t){const e=$n(t,"x","relu6"),n={x:e};return mn.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?as(e,"int32"):t.relu6(e))),n,null,Ct)}}),ma=In({step_:function(t,e=0){const n=$n(t,"x","step"),s={x:n},r={alpha:e};return mn.runKernelFunc((t=>t.step(n,e)),s,null,Ht,r)}});function ya(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return ai(t,ma(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ba(t,e){let n=e;const s=Ur(t.shape,e.shape);return s.length>0&&(n=di(n,s)),Qs(n,t.shape)}function xa(t,e,n){if("linear"===e)return t;if("relu"===e)return Bi(t);if("elu"===e)return Pr(t);if("relu6"===e)return ga(t);if("prelu"===e)return Ti(t,n);throw new Error(`Unknown fused activation ${e}.`)}const wa=(t,e)=>!(t>0)||"linear"===e,va=In({fusedConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u}){if(l=l||"linear",!1===wa(mn.state.gradientDepth,l)){let h=Dr(t,e,n,s,r,i,a);return null!=o&&(h=Gs(h,o)),xa(h,l,u)}const h=$n(t,"x","conv2d"),c=$n(e,"filter","conv2d");let d=h,p=!1;3===h.rank&&(p=!0,d=Qs(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ae(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),ae(4===c.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`)),null!=a&&ae(de(s),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`)),ae(d.shape[3]===c.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${c.shape[2]}.`)),ae(gr(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),ae("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const f=or(d.shape,c.shape,n,i,s,a);let g,m;null!=o&&(g=$n(o,"bias","fused conv2d"),[g]=un(g,h),Vr(f.outShape,g.shape)),null!=u&&(m=$n(u,"prelu weights","fused conv2d"));const y=(t,e)=>{const[r,a,o,u]=e,h=ya(t,o,l);ae(fr(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const c=[_r(a.shape,h,r,n,s),fa(a,h,r.shape,n,s)];if(null!=u){const t=ba(u,h);c.push(t)}return c},b=t=>t.fusedConv2d({input:d,filter:c,convInfo:f,bias:g,activation:l,preluActivationWeights:m}),x={x:d,filter:c,bias:g,preluActivationWeights:m},w={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l};if(null==o){const t=Ps(((t,e,n)=>{let s=mn.runKernelFunc(b,x,null,Kt,w);return n([e,t,s]),p&&(s=Qs(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return t(d,c)}{const t=Ps(((t,e,n,s)=>{let r=mn.runKernelFunc(b,x,null,Kt,w);return s([e,t,r,n]),p&&(r=Qs(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return t(d,c,g)}}}),Ca=In({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s){let r=t;3===t.rank&&(r=Qs(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let i=e;3===i.rank&&(i=Qs(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const a={x:r,dy:i};return mn.runKernelFunc((t=>t.depthwiseConv2DDerFilter(r,i,s)),a,null,"DepthwiseConv2dNativeBackpropFilter")}}),$a=In({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s){let r=e,i=!1;3===e.rank&&(i=!0,r=Qs(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const a={dy:r},o=mn.runKernelFunc((t=>t.depthwiseConv2DDerInput(r,n,s)),a,null,"DepthwiseConv2dNativeBackpropInput");return i?Qs(o,[o.shape[1],o.shape[2],o.shape[3]]):o}});In({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u}){if(!1===wa(mn.state.gradientDepth,l)){let h=Lr(t,e,n,s,r,i,a);return null!=o&&(h=Gs(h,o)),xa(h,l,u)}const h=$n(t,"x","depthwiseConv2d"),c=$n(e,"filter","depthwiseConv2d");let d=h,p=!1;3===h.rank&&(p=!0,d=Qs(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ae(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),ae(4===c.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`)),ae(d.shape[3]===c.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),null==i&&(i=[1,1]),ae(gr(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=a&&ae(de(s),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${s}.`));const f=or(d.shape,c.shape,n,i,s,a,!0);let g,m;null!=o&&(g=$n(o,"bias","fused conv2d"),[g]=un(g,h),Vr(f.outShape,g.shape)),null!=u&&(m=$n(u,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{ae(fr(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[n,s,r,a]=e,o=ya(t,r,l),u=$a(s.shape,o,n,f),h=Ca(s,o,n.shape,f);return null!=a?[u,h,ba(g,o)]:[u,h]},b=t=>t.fusedDepthwiseConv2D({input:d,filter:c,convInfo:f,bias:g,activation:l,preluActivationWeights:m}),x={x:d,filter:c,bias:g,preluActivationWeights:m},w={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l};if(null==o){const t=Ps(((t,e,n)=>{let s=mn.runKernelFunc(b,x,null,Xt,w);return n([e,t,s]),p&&(s=Qs(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return t(d,c)}{const t=Ps(((t,e,n,s)=>{let r=mn.runKernelFunc(b,x,null,Xt,w);return s([e,t,r,n]),p&&(r=Qs(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return t(d,c,g)}}});const ka=In({matMul_:function(t,e,n=!1,s=!1){let r=$n(t,"a","matMul"),i=$n(e,"b","matMul");[r,i]=un(r,i),ae(r.rank>=2&&i.rank>=2&&r.rank===i.rank,(()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${r.rank} and ${i.rank}.`));const a=n?r.shape[r.rank-2]:r.shape[r.rank-1],o=s?i.shape[i.rank-1]:i.shape[i.rank-2],l=n?r.shape[r.rank-1]:r.shape[r.rank-2],u=s?i.shape[i.rank-2]:i.shape[i.rank-1],h=r.shape.slice(0,-2),c=i.shape.slice(0,-2),d=he(h),p=he(c);ae(ce(h,c),(()=>`Error in matMul: outer dimensions (${h}) and (${c}) of Tensors with shapes ${r.shape} and ${i.shape} must match.`)),ae(a===o,(()=>`Error in matMul: inner shapes (${a}) and (${o}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${n} and transposeB=${s} must match.`));const f=r.shape.slice(0,-2).concat([l,u]),g=Qs(r,n?[d,a,l]:[d,l,a]),m=Qs(i,s?[p,u,o]:[p,o,u]),y={a:g,b:m},b={transposeA:n,transposeB:s},x=mn.runKernelFunc(((t,e)=>(e([g,m]),t.batchMatMul(g,m,n,s))),y,null,I,b);return Qs(x,f)}}),Ia=In({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a}){if(!1===wa(mn.state.gradientDepth,i)){let o=ka(t,e,n,s);return null!=r&&(o=Gs(o,r)),xa(o,i,a)}let o=$n(t,"a","fused matMul"),l=$n(e,"b","fused matMul");[o,l]=un(o,l);const u=n?o.shape[o.rank-2]:o.shape[o.rank-1],h=s?l.shape[l.rank-1]:l.shape[l.rank-2],c=n?o.shape[o.rank-1]:o.shape[o.rank-2],d=s?l.shape[l.rank-2]:l.shape[l.rank-1],p=o.shape.slice(0,-2),f=l.shape.slice(0,-2),g=he(p),m=he(f);ae(o.rank>=2&&l.rank>=2&&o.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${l.rank}.`)),ae(ce(p,f),(()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${o.shape} and ${l.shape} must match.`)),ae(u===h,(()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${o.shape} and ${l.shape} and transposeA=${n} and transposeB=${s} must match.`));const y=o.shape.slice(0,-2).concat([c,d]),b=Qs(o,n?[g,u,c]:[g,c,u]),x=Qs(l,s?[m,d,h]:[m,h,d]);let w,v;null!=r&&(w=$n(r,"bias","fused matMul"),[w]=un(w,o),Vr(y,w.shape)),null!=a&&(v=$n(a,"prelu weights","fused matMul"));const C=(t,e)=>{const[a,o,l,u]=e,h=ya(Qs(t,l.shape),l,i);let c,d;return n||s?!n&&s?(c=ka(h,o,!1,!1),d=ka(h,a,!0,!1)):n&&!s?(c=ka(o,h,!1,!0),d=ka(a,h,!1,!1)):(c=ka(o,h,!0,!0),d=ka(h,a,!0,!0)):(c=ka(h,o,!1,!0),d=ka(a,h,!0,!1)),null!=r?[c,d,ba(u,h)]:[c,d]},$=t=>t.fusedBatchMatMul({a:b,b:x,transposeA:n,transposeB:s,bias:w,activation:i,preluActivationWeights:v}),k={a:b,b:x,bias:w,preluActivationWeights:v},I={transposeA:n,transposeB:s,activation:i};if(null==r){const t=Ps(((t,e,n)=>{const s=mn.runKernelFunc($,k,null,qt,I);return n([t,e,s]),{value:Qs(s,y),gradFunc:C}}));return t(b,x)}{const t=Ps(((t,e,n,s)=>{const r=mn.runKernelFunc($,k,null,qt,I);return s([t,e,r,n]),{value:Qs(r,y),gradFunc:C}}));return t(b,x,w)}}});function Sa(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+s-1);r[i]=e-n*Math.cos(a)}return Li(r,"float32")}In({hammingWindow_:function(t){return Sa(t,.54,.46)}});const Ea=In({hannWindow_:function(t){return Sa(t,.5,.5)}}),Ra=In({frame_:function(t,e,n,s=!1,r=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(Gi(t,i,e)),i+=n;if(s)for(;i<t.size;){const s=i+e-t.size,o=Er([Gi(t,i,e-s),Kr([s],r)]);a.push(o),i+=n}return 0===a.length?sa([],[0,e]):Qs(Er(a),[a.length,e])}});function Aa(t,e,n,s,r,i){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),ae(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),ae(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),ae(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),ae(1===e.rank,(()=>"scores must be a 1D tensor")),ae(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`)),ae(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}function Na(t,e,n){const s=function(t,e,n){return function(t,e,n){let s=0,r=t.length,i=0,a=!1;for(;s<r;){i=s+(r-s>>>1);const o=n(e,t[i]);o>0?s=i+1:(r=i,a=!o)}return a?s:-s-1}(t,e,n||Ta)}(t,e,n),r=s<0?-(s+1):s;t.splice(r,0,e)}function Ta(t,e){return t>e?1:t<e?-1:0}function Da(t,e,n,s,r){return Oa(t,e,n,s,r,0).selectedIndices}function Fa(t,e,n,s,r,i){return Oa(t,e,n,s,r,0,!1,i,!0)}function _a(t,e,n,s,r,i){return Oa(t,e,n,s,r,i,!0)}function Oa(t,e,n,s,r,i,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>r&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(za);const h=i>0?-.5/i:0,c=[],d=[];for(;c.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=e;if(n<r)break;let o=!1;for(let n=c.length-1;n>=a;--n){const a=Ma(t,i,c[n]);if(a>=s){o=!0;break}if(e.score=e.score*La(s,h,a),e.score<=r)break}e.suppressBeginIndex=c.length,o||(e.score===n?(c.push(i),d.push(e.score)):e.score>r&&Na(u,e,za))}const p=c.length,f=n-p;o&&f>0&&(c.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:Li(c,"int32")};return a&&(g.selectedScores=Li(d,"float32")),l&&(g.validOutputs=Ws(p,"int32")),g}function Ma(t,e,n){const s=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),i=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),h=Math.min(r[1],r[3]),c=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-i)*(l-a),f=(c-u)*(d-h);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(a,h),y=Math.min(o,c),b=Math.min(l,d),x=Math.max(y-g,0)*Math.max(b-m,0);return x/(p+f-x)}function La(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function za(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}In({stft_:function(t,e,n,s,r=Ea){var i;null==s&&(i=e,s=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const a=Ra(t,e,n),o=ai(a,r(e)),l=[];for(let t=0;t<a.shape[0];t++)l.push(ca(Gi(o,[t,0],[1,e]),s));return Er(l)}}),In({cropAndResize_:function(t,e,n,s,r,i){const a=$n(t,"image","cropAndResize"),o=$n(e,"boxes","cropAndResize","float32"),l=$n(n,"boxInd","cropAndResize","int32");r=r||"bilinear",i=i||0;const u=o.shape[0];ae(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),ae(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),ae(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),ae(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),ae(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),ae("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const h={image:a,boxes:o,boxInd:l},c={method:r,extrapolationValue:i,cropSize:s};return mn.runKernelFunc((t=>t.cropAndResize(a,o,l,s,r,i)),h,null,"CropAndResize",c)}}),In({flipLeftRight_:function(t){const e=$n(t,"image","flipLeftRight","float32");ae(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return mn.runKernel(G,n,{})}}),In({rotateWithOffset_:function(t,e,n=0,s=.5){const r=$n(t,"image","rotateWithOffset","float32");ae(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const i={image:r},a={radians:e,fillValue:n,center:s};return mn.runKernel(jt,i,a)}}),In({nonMaxSuppression_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=$n(t,"boxes","nonMaxSuppression"),a=$n(e,"scores","nonMaxSuppression"),o=Aa(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return mn.runKernelFunc((t=>t.nonMaxSuppression(i,a,n,s,r)),{boxes:i,scores:a},null,ht,l)}}),In({nonMaxSuppressionWithScore_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=$n(t,"boxes","nonMaxSuppression"),o=$n(e,"scores","nonMaxSuppression"),l=Aa(a,o,n,s,r,i),u={boxes:a,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},c=mn.runKernel(dt,u,h);return{selectedIndices:c[0],selectedScores:c[1]}}}),In({nonMaxSuppressionPadded_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=$n(t,"boxes","nonMaxSuppression"),o=$n(e,"scores","nonMaxSuppression"),l=Aa(a,o,n,s,r,null),u={boxes:a,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},c=mn.runKernel(ct,u,h);return{selectedIndices:c[0],validOutputs:c[1]}}});const Ba=In({resizeBilinear_:function(t,e,n=!1){const s=$n(t,"images","resizeBilinear");ae(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),ae(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`));let r=s,i=!1;3===s.rank&&(i=!0,r=Qs(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[a,o]=e,l={images:r},u={alignCorners:n,size:e},h=mn.runKernelFunc(((t,e)=>(e([r]),t.resizeBilinear(r,a,o,n))),l,null,vt,u);return i?Qs(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Pa=In({resizeNearestNeighbor_:function(t,e,n=!1){const s=$n(t,"images","resizeNearestNeighbor");ae(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),ae(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),ae("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let r=s,i=!1;3===s.rank&&(i=!0,r=Qs(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[a,o]=e,l={images:r},u={alignCorners:n,size:e},h=mn.runKernelFunc(((t,e)=>(e([r]),t.resizeNearestNeighbor(r,a,o,n))),l,null,wt,u);return i?Qs(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Wa=In({lessEqual_:function(t,e){let n=$n(t,"a","lessEqual"),s=$n(e,"b","lessEqual");[n,s]=un(n,s),Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.lessEqual(n,s);return e([n,s]),r}),r,null,"LessEqual")}}),Ua=In({bandPart_:function(t,e,n){ae(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),ae(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=$n(t,"a","bandPart");ae(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[i,a]=s.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=Qs(zi(0,i,1,"int32"),[-1,1]),l=zi(0,a,1,"int32"),u=ci(o,l),h=fi(Wa(u,Ws(+e,"int32")),si(u,Ws(-n,"int32"))),c=yi([i,a],s.dtype);return Qs(ea(aa(Qs(s,[-1,i,a])).map((t=>la(h,t,c)))),r)}}),Va=In({pow_:function(t,e){let n=$n(t,"base","pow"),s=$n(e,"exp","pow");[n,s]=un(n,s);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.pow(n,s);return e([n,s,r]),r}),r,null,"Pow")}});function Ga(t,e,n=null){if(0===t.rank)return Vs(t);if(1!==t.rank&&null===n)return Ga(Qs(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return di(Vs(t),n);if(e===1/0)return hi(Vs(t),n);if(e===-1/0)return wi(Vs(t),n);if("euclidean"===e||2===e)return Qi(di(Va(Vs(t),Ws(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return hi(di(Vs(t),n[0]),n[1]-1);if(e===1/0)return hi(di(Vs(t),n[1]),n[0]);if(e===-1/0)return wi(di(Vs(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Qi(di(Ci(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Ha=In({norm_:function(t,e="euclidean",n=null,s=!1){const r=Ga(t=$n(t,"x","norm"),e,n);let i=r.shape;if(s){const e=ye(n,t.shape);i=Ks(r.shape,e)}return Qs(r,i)}}),ja=In({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,ae(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)ae(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Zi(t,t.shape[0],0).map((t=>ta(t,[0])));ae(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],s=t;for(let e=0;e<t.length;++e)n.push(mn.tidy((()=>{let t=s[e];if(e>0)for(let s=0;s<e;++s){const e=ai(di(ai(n[s],t)),n[s]);t=ci(t,e)}return Br(t,Ha(t,"euclidean"))})));return e?ea(n,0):n}});function qa(t,e=!1){return mn.tidy((()=>{ae(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],s=t.shape[1];let r=qr(n),i=os(t);const a=sa([[1]],[1,1]);let o=os(a);const l=n>=s?s:n;for(let t=0;t<l;++t){const e=i,l=o,u=r;[o,i,r]=mn.tidy((()=>{const e=Gi(i,[t,t],[n-t,1]),l=Ha(e),u=Gi(i,[t,t],[1,1]),h=la(ni(u,0),sa([[-1]]),sa([[1]])),c=ci(u,ai(h,l)),d=Br(e,c);o=1===d.shape[0]?os(a):Er([a,Gi(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=ki(Br(ka(h,c),l)),f=Gi(i,[t,0],[n-t,s]),g=ai(p,o),m=tr(o);if(0===t)i=ci(f,ka(g,ka(m,f)));else{const e=ci(f,ka(g,ka(m,f)));i=Er([Gi(i,[0,0],[t,s]),e],0)}const y=tr(g),b=Gi(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=ci(b,ka(ka(b,o),y));else{const e=ci(b,ka(ka(b,o),y));r=Er([Gi(r,[0,0],[n,t]),e],1)}return[o,i,r]})),Ls([e,l,u])}return!e&&n>s&&(r=Gi(r,[0,0],[n,s]),i=Gi(i,[0,0],[s,s])),[r,i]}))}const Ka=In({qr_:function(t,e=!1){if(ae(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return qa(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),s=aa(Qs(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],i=[];return s.forEach((t=>{const[n,s]=qa(t,e);r.push(n),i.push(s)})),[Qs(ea(r,0),t.shape),Qs(ea(i,0),t.shape)]}}});var Xa;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Xa||(Xa={}));const Ya=In({computeWeightedLoss_:function(t,e,n=Xa.SUM_BY_NONZERO_WEIGHTS){const s=$n(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=$n(e,"weights","computeWeightedLoss"));const i=null==r?s:ai(s,r);if(n===Xa.NONE)return i;if(n===Xa.SUM)return di(i);if(n===Xa.MEAN){if(null==r)return xi(i);{const t=s.size/r.size,e=Br(di(i),di(r));return t>1?Br(e,Ws(t)):e}}if(n===Xa.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Br(di(i),Ws(s.size));{const t=ai(r,bi(s.shape)),e=as(di(Ii(t,Ws(0))),"float32");return Br(di(i),e)}}throw Error(`Unknown reduction: ${n}`)}});In({absoluteDifference_:function(t,e,n,s=Xa.SUM_BY_NONZERO_WEIGHTS){const r=$n(t,"labels","absoluteDifference"),i=$n(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=$n(n,"weights","absoluteDifference")),oe(r.shape,i.shape,"Error in absoluteDifference: ");const o=Vs(ci(r,i));return Ya(o,a,s)}}),In({cosineDistance_:function(t,e,n,s,r=Xa.SUM_BY_NONZERO_WEIGHTS){const i=$n(t,"labels","cosineDistance"),a=$n(e,"predictions","cosineDistance");let o=null;null!=s&&(o=$n(s,"weights","cosineDistance")),oe(i.shape,a.shape,"Error in cosineDistance: ");const l=Ws(1),u=ci(l,di(ai(i,a),n,!0));return Ya(u,o,r)}}),In({hingeLoss_:function(t,e,n,s=Xa.SUM_BY_NONZERO_WEIGHTS){let r=$n(t,"labels","hingeLoss");const i=$n(e,"predictions","hingeLoss");let a=null;null!=n&&(a=$n(n,"weights","hingeLoss")),oe(r.shape,i.shape,"Error in hingeLoss: ");const o=Ws(1);r=ci(ai(Ws(2),r),o);const l=Bi(ci(o,ai(r,i)));return Ya(l,a,s)}}),In({huberLoss_:function(t,e,n,s=1,r=Xa.SUM_BY_NONZERO_WEIGHTS){const i=$n(t,"labels","huberLoss"),a=$n(e,"predictions","huberLoss");let o=null;null!=n&&(o=$n(n,"weights","huberLoss")),oe(i.shape,a.shape,"Error in huberLoss: ");const l=Ws(s),u=Vs(ci(a,i)),h=vi(u,l),c=ci(u,h),d=Gs(ai(Ws(.5),Ci(h)),ai(l,c));return Ya(d,o,r)}}),In({logLoss_:function(t,e,n,s=1e-7,r=Xa.SUM_BY_NONZERO_WEIGHTS){const i=$n(t,"labels","logLoss"),a=$n(e,"predictions","logLoss");let o=null;null!=n&&(o=$n(n,"weights","logLoss")),oe(i.shape,a.shape,"Error in logLoss: ");const l=Ws(1),u=Ws(s),h=ki(ai(i,li(Gs(a,u)))),c=ai(ci(l,i),li(Gs(ci(l,a),u))),d=ci(h,c);return Ya(d,o,r)}});const Ja=In({squaredDifference_:function(t,e){let n=$n(t,"a","squaredDifference"),s=$n(e,"b","squaredDifference");[n,s]=un(n,s),Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.squaredDifference(n,s);return e([n,s]),r}),r,null,Lt,{})}});In({meanSquaredError_:function(t,e,n,s=Xa.SUM_BY_NONZERO_WEIGHTS){const r=$n(t,"labels","meanSquaredError"),i=$n(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=$n(n,"weights","meanSquaredError")),oe(r.shape,i.shape,"Error in meanSquaredError: ");const o=Ja(r,i);return Ya(o,a,s)}});const Za=In({log1p_:function(t){const e=$n(t,"x","log1p"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.log1p(e);return n([e]),s}),n,null,tt)}});In({sigmoidCrossEntropy_:function(t,e,n,s=0,r=Xa.SUM_BY_NONZERO_WEIGHTS){let i=$n(t,"multiClassLabels","sigmoidCrossEntropy");const a=$n(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=$n(n,"weights","sigmoidCrossEntropy")),oe(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const t=Ws(s),e=Ws(1),n=Ws(.5);i=Gs(ai(i,ci(e,t)),ai(n,t))}const l=function(t,e){const n=$n(t,"labels","sigmoidCrossEntropyWithLogits"),s=$n(e,"logits","sigmoidCrossEntropyWithLogits");oe(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Bi(s),i=ai(s,n),a=Za(ui(ki(Vs(s))));return Gs(ci(r,i),a)}(i,a);return Ya(l,o,r)}});const Qa=In({logSumExp_:function(t,e=null,n=!1){const s=$n(t,"x","logSumExp"),r=ye(e,s.shape),i=hi(s,r,!0),a=ci(s,i),o=ui(a),l=di(o,r),u=li(l),h=Gs(Qs(i,u.shape),u);if(n){const t=Ks(h.shape,r);return Qs(h,t)}return h}});In({softmaxCrossEntropy_:function(t,e,n,s=0,r=Xa.SUM_BY_NONZERO_WEIGHTS){let i=$n(t,"onehotLabels","softmaxCrossEntropy");const a=$n(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=$n(n,"weights","softmaxCrossEntropy")),oe(i.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const t=Ws(s),e=Ws(1),n=Ws(i.shape[1]);i=Gs(ai(i,ci(e,t)),Br(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);const s=Ps(((t,e,s)=>{const r=Qa(e,[n],!0),i=ci(as(e,"float32"),r);s([t,i]);const a=ki(ai(i,t));return{value:di(a,[n]),gradFunc:(t,e)=>{const[s,r]=e,i=Ks(t.shape,[n]);return[ai(Qs(t,i),ci(as(s,"float32"),ui(r))),ai(Qs(t,i),ci(ui(r),as(s,"float32")))]}}}));return s(t,e)}(i,a);return Ya(l,o,r)}});const to={bandPart:Ua,gramSchmidt:ja,qr:Ka};class eo extends Us{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=mn.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=mn.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Ms((()=>Ri(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Ms((()=>Ri(s).variable(!1)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;Ms((()=>{const t=Gs(ai(i,this.rho),ai(Ci(r),1-this.rho)),e=ai(Br(Qi(Gs(a,this.epsilon)),Qi(Gs(i,this.epsilon))),r),n=Gs(ai(a,this.rho),ai(Ci(e),1-this.rho));i.assign(t),a.assign(n);const o=Gs(ai(e,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ls(this.accumulatedGrads.map((t=>t.variable))),Ls(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}eo.className="Adadelta",Ds(eo);class no extends Us{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=mn.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Ms((()=>Kr(s.shape,this.initialAccumulatorValue).variable(t)))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=this.accumulatedGrads[n].variable;Ms((()=>{const t=Gs(i,Ci(r));i.assign(t);const e=Gs(ai(Br(r,Qi(Gs(t,mn.backend.epsilon()))),-this.learningRate),s);s.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ls(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}no.className="Adagrad",Ds(no);class so extends Us{constructor(t,e,n,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ms((()=>{this.accBeta1=Ws(e).variable(),this.accBeta2=Ws(n).variable()})),null==s&&(this.epsilon=mn.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Ms((()=>{const n=ci(1,this.accBeta1),s=ci(1,this.accBeta2);e.forEach(((e,r)=>{const i=mn.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:Ms((()=>Ri(i).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${e}/v`,variable:Ms((()=>Ri(i).variable(!1)))});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=Gs(ai(o,this.beta1),ai(a,1-this.beta1)),h=Gs(ai(l,this.beta2),ai(Ci(a),1-this.beta2)),c=Br(u,n),d=Br(h,s);o.assign(u),l.assign(h);const p=Gs(ai(Br(c,Gs(Qi(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(ai(this.accBeta1,this.beta1)),this.accBeta2.assign(ai(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ls(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Ls(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Ms((()=>{this.accBeta1.assign(Va(this.beta1,this.iterations_+1)),this.accBeta2.assign(Va(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}so.className="Adam",Ds(so);class ro extends Us{constructor(t,e,n,s=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ms((()=>{this.iteration=Ws(0).variable(),this.accBeta1=Ws(e).variable()})),null==s&&(this.epsilon=mn.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Ms((()=>{const n=ci(1,this.accBeta1),s=Br(-this.learningRate,Gs(ai(this.iteration,this.decay),1));e.forEach(((e,r)=>{const i=mn.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:Ri(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${e}/v`,variable:Ri(i).variable(!1)});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=Gs(ai(o,this.beta1),ai(a,1-this.beta1)),h=ai(l,this.beta2),c=Vs(a),d=ii(h,c);o.assign(u),l.assign(d);const p=Gs(ai(Br(s,n),Br(u,Gs(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(Gs(this.iteration,1)),this.accBeta1.assign(ai(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ls(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Ls(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}ro.className="Adamax",Ds(ro);class io extends Us{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=mn.registeredVariables[e];Ms((()=>{const t=Gs(ai(this.c,s),r);r.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=zs(Ws(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}io.className="SGD",Ds(io);class ao extends io{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Ws(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=mn.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Ms((()=>Ri(s).variable(t)))}}const r=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&Ms((()=>{let t;const e=Gs(ai(this.m,r),i);t=this.useNesterov?Gs(ai(this.c,Gs(i,ai(e,this.m))),s):Gs(ai(this.c,e),s),r.assign(e),s.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ls(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}ao.className="Momentum",Ds(ao);class oo extends Us{constructor(t,e=.9,n=0,s=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=mn.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=mn.registeredVariables[e],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Ms((()=>Ri(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Ms((()=>Ri(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Ms((()=>Ri(s).variable(r)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Ms((()=>{const t=Gs(ai(a,this.decay),ai(Ci(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,r=Gs(ai(e,this.decay),ai(i,1-this.decay)),l=Br(ai(i,this.learningRate),Qi(ci(t,Gs(Ci(r),this.epsilon)))),u=Gs(ai(o,this.momentum),l);a.assign(t),e.assign(r),o.assign(u);const h=ci(s,u);s.assign(h)}else{const t=Gs(ai(a,this.decay),ai(Ci(i),1-this.decay)),e=Gs(ai(o,this.momentum),Br(ai(i,this.learningRate),Qi(Gs(t,this.epsilon))));a.assign(t),o.assign(e);const n=ci(s,e);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ls(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ls(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Ls(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}oo.className="RMSProp",Ds(oo);class lo{static sgd(t){return new io(t)}static momentum(t,e,n=!1){return new ao(t,e,n)}static rmsprop(t,e=.9,n=0,s=null,r=!1){return new oo(t,e,n,s,r)}static adam(t=.001,e=.9,n=.999,s=null){return new so(t,e,n,s)}static adadelta(t=.001,e=.95,n=null){return new eo(t,e,n)}static adamax(t=.002,e=.9,n=.999,s=null,r=0){return new ro(t,e,n,s,r)}static adagrad(t,e=.1){return new no(t,e)}}const uo={sgd:lo.sgd,momentum:lo.momentum,adadelta:lo.adadelta,adagrad:lo.adagrad,rmsprop:lo.rmsprop,adamax:lo.adamax,adam:lo.adam},ho="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function co(){return new Promise((t=>ho((()=>t()))))}function po(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function fo(t,e,n,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const n=e.length;for(let s=0;s<n;++s)r=r.concat([t[s+1]/e[s],e[s]]);r=r.concat(t.slice(n+1))}return r}function go(t,e,n=!0){const s=[];if(n){s.push(e);for(let n=e+1;n<t;++n)n<=2*e?(s.push(n),s.push(n-(e+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<t;++s)s>=2*e+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function mo(t,e,n,s=!0){const r=[];s?r.push(t[0]/n):r.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?s?r.push(e[n-1]*t[n]):r.push(t[n]/e[n-1]):r.push(t[n]);return r}function yo(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function bo(t,e,n){const s=t.slice(0,1);for(let r=0;r<n;++r)s.push(t[r+1]-e[r][0]-e[r][1]);return s}function xo(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,s=n[n.length-1];let r=1;for(let t=0;t<n.length-1;++t)r*=n[t];const i=t.shape,a=n.slice();a.pop();let o=1;for(let e=s;e<t.rank;++e)o*=i[e],a.push(i[e]);const l=[...Re(t.shape).map((t=>t/o)),1].slice(0,s);return[a,r,o,l]}function wo(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(i+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+t.length-s)throw new Error(i+" update.rank != "+(r+t.length-s));for(let t=0;t<r;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-r;++e)if(n.shape[e+r]!==t[e+s])throw new Error(i+` updates.shape[${e+r}] (${n.shape[e+r]}) != shape[${e+r}] (${t[e+r]})`)}function vo(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}wo(n,e,t)}function Co(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,i=n.length;let a=1;for(let t=r;t<i;++t)a*=n[t];const o=r<1?1:r;return{sliceRank:r,numUpdates:he(e.shape)/o,sliceSize:a,strides:[...Re(n.slice(0,r)),1],outputSize:he(n)}}const $o=1.7580993408473768,ko=1.0507009873554805,Io=.3275911,So=.254829592,Eo=-.284496736,Ro=1.421413741,Ao=-1.453152027,No=1.061405429;function To(...t){l().getBool("IS_TEST")||console.warn(...t)}function Do(...t){l().getBool("IS_TEST")||console.log(...t)}function Fo(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function _o(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function Oo(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function Mo(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function Lo(t,e){return{real:t[2*e],imag:t[2*e+1]}}function zo(t,e,n,s){t[2*s]=e,t[2*s+1]=n}function Bo(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const i=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:n,imag:s}}function Po(t,e,n){const s=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(s),imag:Math.sin(s)}}function Wo(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=yi(t.shape),s=as(t,"float32"),r=n.complex(s,e);return e.dispose(),s.dispose(),r}if(s=t.dtype,"complex64"===(r=e)||"float32"===r&&"complex64"!==s||"int32"===r&&"float32"!==s&&"complex64"!==s||"bool"===r&&"bool"===s)return mn.makeTensorFromDataId(t.dataId,t.shape,e);var s,r;if("complex64"===t.dtype){const s=n.real(t),r=as(s,e);return s.dispose(),r}if("int32"===e)return n.int(t);if("bool"===e){const e=Ws(0,t.dtype),s=n.notEqual(t,e);return e.dispose(),s}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function Uo(t,e){return mn.makeTensorFromDataId(t.dataId,e,t.dtype)}function Vo(t,e,n){const s=(e-t)/(n-1),r=Fe(n,"float32");r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+s;return Li(r,"float32")}function Go(t,e,n){const s=new Array(t.rank).fill(0),r=t.shape.slice();return e.map((e=>{const i=[...r];i[n]=e;const a=Gi(t,s,i);return s[n]+=e,a}))}function Ho(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const s=is(n,t.dtype);for(let e=0;e<s.values.length;++e){const n=s.indexToLoc(e),r=new Array(t.rank);for(let e=0;e<r.length;e++)r[e]=n[e]%t.shape[e];const i=t.locToIndex(r);s.values[e]=t.values[i]}return s.toTensor()}function jo(t,e,n,s,r){const i=e[e.length-1],[a,o]=[t.length/i,i],l=xe(n,a*s),u=xe("int32",a*s);for(let e=0;e<a;e++){const n=e*o,r=t.subarray(n,n+o),i=[];for(let t=0;t<r.length;t++)i.push({value:r[t],index:t});i.sort(((t,e)=>e.value-t.value));const a=e*s,h=l.subarray(a,a+s),c=u.subarray(a,a+s);for(let t=0;t<s;t++)h[t]=i[t].value,c[t]=i[t].index}const h=e.slice();return h[h.length-1]=s,[Rn(l,h,n),Rn(u,h,"int32")]}function qo(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const s=is(t,"int32"),r=is([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=s.indexToLoc(n[e]),a=e*t.length;r.values.set(i,a)}return r.toTensor()}class Ko{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Xo{time(t){return Yo("time")}read(t){return Yo("read")}readSync(t){return Yo("readSync")}numDataIds(){return Yo("numDataIds")}disposeData(t){return Yo("disposeData")}write(t,e,n){return Yo("write")}move(t,e,n,s){return Yo("move")}memory(){return Yo("memory")}floatPrecision(){return Yo("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,s){return Yo("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:s,bias:r,activation:i,preluActivationWeights:a}){return Yo("fusedBatchMatMul")}slice(t,e,n){return Yo("slice")}stridedSlice(t,e,n,s){return Yo("stridedSlice")}unstack(t,e){return Yo("unstack")}reverse(t,e){return Yo("reverse")}concat(t,e){return Yo("concat")}neg(t){return Yo("neg")}add(t,e){return Yo("add")}addN(t){return Yo("addN")}subtract(t,e){return Yo("subtract")}multiply(t,e){return Yo("multiply")}realDivide(t,e){return Yo("realDivide")}floorDiv(t,e){return Yo("floorDiv")}sum(t,e){return Yo("sum")}prod(t,e){return Yo("prod")}unsortedSegmentSum(t,e,n){return Yo("unsortedSegmentSum")}argMin(t,e){return Yo("argMin")}argMax(t,e){return Yo("argMax")}equal(t,e){return Yo("equal")}notEqual(t,e){return Yo("notEqual")}less(t,e){return Yo("less")}lessEqual(t,e){return Yo("lessEqual")}greater(t,e){return Yo("greater")}greaterEqual(t,e){return Yo("greaterEqual")}logicalNot(t){return Yo("logicalNot")}logicalAnd(t,e){return Yo("logicalAnd")}logicalOr(t,e){return Yo("logicalOr")}where(t){return Yo("where")}select(t,e,n){return Yo("select")}topk(t,e,n){return Yo("topk")}min(t,e){return Yo("min")}minimum(t,e){return Yo("minimum")}mod(t,e){return Yo("mod")}max(t,e){return Yo("max")}maximum(t,e){return Yo("maximum")}all(t,e){return Yo("all")}any(t,e){return Yo("any")}squaredDifference(t,e){return Yo("squaredDifference")}ceil(t){return Yo("ceil")}floor(t){return Yo("floor")}round(t){return Yo("round")}sign(t){return Yo("sign")}isNaN(t){return Yo("isNaN")}isInf(t){return Yo("isInf")}isFinite(t){return Yo("isFinite")}pow(t,e){return Yo("pow")}exp(t){return Yo("exp")}expm1(t){return Yo("expm1")}softmax(t,e){return Yo("softmax")}log(t){return Yo("log")}log1p(t){return Yo("log1p")}sqrt(t){return Yo("sqrt")}rsqrt(t){return Yo("rsqrt")}square(t){return Yo("square")}reciprocal(t){return Yo("reciprocal")}relu(t){return Yo("relu")}relu6(t){return Yo("relu6")}prelu(t,e){return Yo("prelu")}elu(t){return Yo("elu")}eluDer(t,e){return Yo("eluDer")}selu(t){return Yo("selu")}int(t){return Yo("int")}clip(t,e,n){return Yo("clip")}abs(t){return Yo("abs")}complexAbs(t){return Yo("complexAbs")}sigmoid(t){return Yo("sigmoid")}softplus(t){return Yo("softplus")}sin(t){return Yo("sin")}cos(t){return Yo("cos")}tan(t){return Yo("tan")}asin(t){return Yo("asin")}acos(t){return Yo("acos")}atan(t){return Yo("atan")}atan2(t,e){return Yo("atan2")}sinh(t){return Yo("sinh")}cosh(t){return Yo("cosh")}tanh(t){return Yo("tanh")}asinh(t){return Yo("asinh")}acosh(t){return Yo("acosh")}atanh(t){return Yo("atanh")}erf(t){return Yo("erf")}step(t,e){return Yo("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){return Yo("fusedConv2d")}conv2d(t,e,n){return Yo("conv2d")}conv2dDerInput(t,e,n){return Yo("conv2dDerInput")}conv2dDerFilter(t,e,n){return Yo("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){return Yo("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return Yo("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return Yo("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return Yo("depthwiseConv2DDerFilter")}conv3d(t,e,n){return Yo("conv3d")}conv3dDerInput(t,e,n){return Yo("conv3dDerInput")}conv3dDerFilter(t,e,n){return Yo("conv3dDerFilter")}maxPool(t,e){return Yo("maxPool")}maxPoolBackprop(t,e,n,s){return Yo("maxPoolBackprop")}avgPool(t,e){return Yo("avgPool")}avgPoolBackprop(t,e,n){return Yo("avgPoolBackprop")}avgPool3d(t,e){return Yo("avgPool3d")}avgPool3dBackprop(t,e,n){return Yo("avgPool3dBackprop")}maxPool3d(t,e){return Yo("maxPool3d")}maxPool3dBackprop(t,e,n,s){return Yo("maxPool3dBackprop")}reshape(t,e){return Yo("reshape")}cast(t,e){return Yo("cast")}tile(t,e){return Yo("tile")}pad(t,e,n){return Yo("pad")}transpose(t,e){return Yo("transpose")}gather(t,e,n){return Yo("gather")}gatherND(t,e){return Yo("gatherND")}scatterND(t,e,n){return Yo("scatterND")}batchToSpaceND(t,e,n){return Yo("batchToSpaceND")}spaceToBatchND(t,e,n){return Yo("spaceToBatchND")}resizeBilinear(t,e,n,s){return Yo("resizeBilinear")}resizeBilinearBackprop(t,e,n){return Yo("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,s){return Yo("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return Yo("resizeNearestNeighborBackprop")}batchNorm(t,e,n,s,r,i){return Yo("batchNorm")}localResponseNormalization4D(t,e,n,s,r){return Yo("localResponseNormalization4D")}LRNGrad(t,e,n,s,r,i,a){return Yo("LRNGrad")}multinomial(t,e,n,s){return Yo("multinomial")}oneHot(t,e,n,s){return Yo("oneHot")}cumsum(t,e,n,s){return Yo("cumsum")}nonMaxSuppression(t,e,n,s,r){return Yo("nonMaxSuppression")}fft(t){return Yo("fft")}ifft(t){return Yo("ifft")}complex(t,e){return Yo("complex")}real(t){return Yo("real")}imag(t){return Yo("imag")}cropAndResize(t,e,n,s,r,i){return Yo("cropAndResize")}depthToSpace(t,e,n){return Yo("depthToSpace")}split(t,e,n){return Yo("split")}sparseToDense(t,e,n,s){return Yo("sparseToDense")}diag(t){return Yo("diag")}fill(t,e,n){return Yo("fill")}onesLike(t){return Yo("onesLike")}zerosLike(t){return Yo("zerosLike")}linspace(t,e,n){return Yo("linspace")}dispose(){return Yo("dispose")}}function Yo(t){throw new Error(`'${t}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}const Jo={kernelName:"Abs",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(t,ma(as(n,"float32"),-1))}}},Zo={kernelName:p,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ci(as(n,"float32")),s=Qi(ci(Ws(1),e));return ki(Br(t,s))}}}},Qo={kernelName:f,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Qi(ci(Ci(as(n,"float32")),1));return Br(t,e)}}}},tl={kernelName:g,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Vr(n.shape,s.shape);return{a:()=>{let e=t;const s=Ur(n.shape,r);return s.length>0&&(e=di(e,s)),Qs(e,n.shape)},b:()=>{let e=t;const n=Ur(s.shape,r);return n.length>0&&(e=di(e,n)),Qs(e,s.shape)}}}},el={kernelName:m,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(n)}}},nl={kernelName:y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(n)}}},sl={kernelName:b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Br(t,Qi(ci(Ws(1),Ci(as(n,"float32")))))}}},rl={kernelName:x,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Qi(Gs(Ws(1),Ci(as(n,"float32"))));return Br(t,e)}}}},il={kernelName:C,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Vr(n.shape,s.shape);return{a:()=>{const e=Gs(Ci(n),Ci(s));let i=ai(t,Br(s,e));const a=Ur(n.shape,r);return a.length>0&&(i=di(i,a)),Qs(i,n.shape)},b:()=>{const e=Gs(Ci(n),Ci(s));let i=ki(ai(t,Br(n,e)));const a=Ur(s.shape,r);return a.length>0&&(i=di(i,a)),Qs(i,s.shape)}}}},al={kernelName:w,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Br(t,Gs(Ci(as(n,"float32")),1))}}},ol={kernelName:v,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Br(t,ci(Ws(1),Ci(as(n,"float32"))))}}},ll=In({avgPool3dBackprop_:function(t,e,n,s,r=[1,1,1],i,a){const o=$n(t,"dy","avgPool3dBackprop"),l=$n(e,"input","avgPool3dBackprop");let u=o,h=l,c=!1;4===l.rank&&(c=!0,u=Qs(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Qs(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),ae(5===u.rank,(()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${u.rank}.`)),ae(5===h.rank,(()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${h.rank}.`)),ae(gr(s,r),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`)),null!=a&&ae(de(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const d={dy:u,input:h},p={filterSize:n,strides:s,dilations:r,pad:i,dimRoundingMode:a},f=mn.runKernelFunc((t=>{const e=ar(h.shape,n,s,r,i,a);return t.avgPool3dBackprop(u,h,e)}),d,null,"AvgPool3DBackprop",p);return c?Qs(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),ul={kernelName:k,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,dilations:a,pad:o,dimRoundingMode:l}=n,u=null==a?[1,1,1]:a;return{x:()=>ll(t,s,r,i,u,o,l)}}},hl=In({avgPoolBackprop_:function(t,e,n,s,r){const i=$n(t,"dy","avgPoolBackprop"),a=$n(e,"input","avgPoolBackprop");ae(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=Qs(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=Qs(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ae(4===l.rank,(()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${l.rank}.`)),ae(4===o.rank,(()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${o.rank}.`));const h={dy:l,input:o},c={filterSize:n,strides:s,pad:r},d=mn.runKernelFunc((t=>{const e=ir(o.shape,n,s,1,r);return t.avgPoolBackprop(l,o,e)}),h,null,"AvgPoolBackprop",c);return u?Qs(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),cl={kernelName:$,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,pad:a}=n;return{x:()=>hl(t,s,r,i,a)}}},dl={kernelName:I,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>ka(t,r,!1,!1),b:()=>ka(t,s,!0,!1)}:i&&!a?{a:()=>ka(r,t,!1,!0),b:()=>ka(s,t,!1,!1)}:{a:()=>ka(r,t,!0,!0),b:()=>ka(t,s,!0,!0)}:{a:()=>ka(t,r,!1,!0),b:()=>ka(s,t,!0,!1)}}},pl=In({spaceToBatchND_:function(t,e,n){const s=$n(t,"x","spaceToBatchND");ae(s.rank>=1+e.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`)),ae(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),ae(s.shape.reduce(((t,s,r)=>r>0&&r<=e.length?t&&(s+n[r-1][0]+n[r-1][1])%e[r-1]==0:t),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const r={x:s},i={blockShape:e,paddings:n};return mn.runKernelFunc((t=>t.spaceToBatchND(s,e,n)),r,null,_t,i)}}),fl={kernelName:S,gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>pl(t,s,r)}}},gl={kernelName:E,gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,i=s.shape,a=Array.from(i);for(let t=r.length-1;t>=0;t--)if(r[t]===i[t])a[t]=1;else if(1!==r[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>di(t,o,!0)}}},ml={kernelName:R,gradFunc:t=>({x:()=>t.clone()})},yl={kernelName:A,gradFunc:t=>({x:()=>Ri(t)})},bl={kernelName:N,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>la(fi(si(s,r),Wa(s,i)),t,Ri(t))}}},xl={kernelName:T,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map((t=>t.shape)),{axis:r}=n,i=ye(r,e[0].shape)[0],a=s.map((t=>t[i]));return Zi(t,a,i).map((t=>()=>t))}},wl={kernelName:D,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return ae(fr(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>_r(s.shape,t,r,a,o,l),filter:()=>fa(s,t,r.shape,a,o,l)}}},vl={kernelName:F,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Dr(t,r,i,a,o,1,l),filter:()=>fa(t,s,r.shape,i,a,o,l)}}},Cl=In({conv3DBackpropFilter_:function(t,e,n,s,r){let i=t;4===t.rank&&(i=Qs(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=Qs(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),ae(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),ae(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),ae(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ae(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),ae(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,y:a},l={strides:s,pad:r};return mn.runKernelFunc((t=>{const e=lr(i.shape,n,s,1,r);return t.conv3dDerFilter(i,a,e)}),o,null,"Conv3DBackpropFilterV2",l)}}),$l=In({conv3DBackpropInput_:function(t,e,n,s,r){ae(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=Qs(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];ae(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),ae(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),ae(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ae(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),ae(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const h={dy:a},c={pad:r},d=mn.runKernelFunc((t=>{const e=lr(i,n.shape,s,1,r);return t.conv3dDerInput(a,n,e)}),h,null,"Conv3DBackpropInputV2",c);return o?Qs(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),kl={kernelName:_,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i}=n;ae(fr(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[a,o]=e;return{x:()=>$l(a.shape,t,o,r,i),filter:()=>Cl(a,t,o.shape,r,i)}}},Il=In({sin_:function(t){const e=$n(t,"x","sin"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.sin(e);return n([e]),s}),n,null,"Sin")}}),Sl={kernelName:O,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(ki(Il(as(n,"float32"))),t)}}},El=In({sinh_:function(t){const e=$n(t,"x","sinh"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.sinh(e);return n([e]),s}),n,null,At)}}),Rl={kernelName:M,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(El(as(n,"float32")),t)}}},Al=In({cumsum_:function(t,e=0,n=!1,s=!1){const r=$n(t,"x","cumsum"),i={x:r},a={axis:e,exclusive:n,reverse:s};return mn.runKernelFunc(((t,i)=>{const a=Ys([e],r.rank);let o=r;null!=a&&(o=tr(r,a));const l=Zs(1,r.rank)[0];let u=t.cumsum(o,l,n,s);if(i([r]),null!=a){const t=Js(a);u=tr(u,t)}return u}),i,null,L,a)}}),Nl={kernelName:L,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:i,reverse:a}=n;return{x:()=>{const e=Ys([r],s.rank);let n=Al(t,r,i,!a);return null!=e&&(n=tr(n,e)),n}}}},Tl={kernelName:z,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=n,o=null==s?[1,1]:s;ae(fr(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;ae(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),ae(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),ae(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ae(gr(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=a&&ae(de(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const h=or(l.shape,u.shape,r,o,i,a,!0);return{x:()=>$a(l.shape,t,u,h),filter:()=>Ca(l,t,u.shape,h)}}},Dl={kernelName:B,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,i={x:s,filter:r,dy:t},a={x:s,filter:r,dy:t};return{x:()=>mn.runKernel(P,i,n),filter:()=>mn.runKernel(W,a,n)}}},Fl={kernelName:U,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Vr(n.shape,s.shape);return{a:()=>{const e=Br(t,as(s,"float32")),i=Ur(n.shape,r);return i.length>0?Qs(di(e,i),n.shape):e},b:()=>{let e=ai(t,as(n,"float32"));const i=Ur(s.shape,r);i.length>0&&(e=Qs(di(e,i),s.shape));const a=Ci(s);return ki(Br(e,as(a,"float32")))}}}},_l={kernelName:"Elu",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s=e=>e.eluDer(t,n),r={dy:t,y:n};return{x:()=>mn.runKernelFunc(s,r,null,"EluGrad")}}},Ol={kernelName:"Erf",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=ai(ui(ki(Ci(n))),2/Math.sqrt(Math.PI));return{x:()=>ai(t,s)}}},Ml={kernelName:"Exp",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(t,n)}}},Ll={kernelName:V,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(t,ui(n))}}},zl={kernelName:H,gradFunc:t=>({x:()=>Ri(t)})},Bl={kernelName:j,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Vr(n.shape,s.shape);return{a:()=>{const e=Br(t,as(s,"float32")),i=Ur(n.shape,r);return i.length>0?Qs(di(e,i),n.shape):e},b:()=>{let e=ai(t,as(n,"float32"));const i=Ur(s.shape,r);i.length>0&&(e=Qs(di(e,i),s.shape));const a=Ci(s);return ki(Br(e,as(a,"float32")))}}}},Pl=In({rsqrt_:function(t){const e=$n(t,"x","rsqrt"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.rsqrt(e);return n([e]),s}),n,null,It)}}),Wl={kernelName:q,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,i,a,o]=e,l=null==o?Ws(1):o,u=Ur(i.shape,r.shape),h=[];if(1===i.rank){for(let t=0;t<r.shape.length-1;++t)h.push(r.shape[t]);h.push(1)}const c=ci(r,i),d=ai(t,l),p=Pl(Gs(a,Ws(s))),f=ai(ai(ai(p,p),p),Ws(-.5));return{x:()=>1===i.rank?Qs(ai(ai(t,jr(Qs(p,[1,1,1,i.shape[0]]),h)),l),r.shape):Qs(ai(ai(t,p),l),r.shape),mean:()=>{let t=ai(ai(p,Ws(-1)),d);return 1===i.rank&&(t=di(t,u)),Qs(t,i.shape)},variance:()=>{let t=ai(ai(f,c),d);return 1===i.rank&&(t=di(t,u)),Qs(t,i.shape)},scale:()=>{const e=ai(c,p);let n=ai(t,e);return 1===i.rank&&(n=di(n,u)),Qs(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=di(e,u)),Qs(e,i.shape)}}}},Ul=In({unsortedSegmentSum_:function(t,e,n){const s=$n(t,"x","unsortedSegmentSum"),r=$n(e,"segmentIds","unsortedSegmentSum","int32");ae(de(n),(()=>"numSegments must be of dtype int"));const i={x:s,segmentIds:r},a={numSegments:n};return mn.runKernelFunc(((t,e)=>{const i=t.unsortedSegmentSum(s,r,n);return e([r]),i}),i,null,Vt,a)}}),Vl={kernelName:K,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:i}=n,a=ye(i,s.shape)[0];return{x:()=>{const e=s.shape,n=r.size,o=e.slice(0,a),l=o.length,u=e.slice(i,e.length).slice(1),h=u.length,c=Gl(0,l),d=Gl(l+1,l+1+h),p=Hl([o,[n],u]),f=Qs(t,p),g=Qs(r,[n]),m=Hl([[l],c,d]),y=tr(f,m);let b=Ul(y,g,s.shape[a]);const x=Js(m);return b=tr(b,x),b},indices:()=>r}}};function Gl(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function Hl(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}const jl={kernelName:X,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Ri(n),b:()=>Ri(s)}}},ql={kernelName:Y,gradFunc:t=>({x:()=>as(t,"float32")})},Kl={kernelName:J,gradFunc:t=>({x:()=>Ri(t)})},Xl={kernelName:Z,gradFunc:t=>({x:()=>Ri(t)})},Yl={kernelName:Q,gradFunc:t=>({x:()=>Ri(t)})},Jl={kernelName:tt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Br(t,Gs(n,1))}}},Zl={kernelName:"Log",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Br(t,as(n,"float32"))}}},Ql={kernelName:et,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const e=ui(s);return ci(t,ai(di(t,r,!0),e))}}}},tu=In({localResponseNormalizationBackprop_:function(t,e,n,s=5,r=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:a};return mn.runKernelFunc((o=>o.LRNGrad(n,t,e,s,r,i,a)),o,null,"LRNBackprop",l)}}),eu={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>tu(s,r,t,i,a,o,l)}}};function nu(t,e,n,s,r){return e.rank<n.rank&&(e=Qs(e,Ks(e.shape,s))),t.rank<n.rank&&(t=Qs(t,Ks(t.shape,s))),{x:()=>{const s=ai(t,as(Gr(n,e),t.dtype));return null==r?s:tr(s,r)}}}const su={kernelName:nt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,[i,a]=e,o=ye(r,i.shape),l=Ys(o,i.rank),u=nu(t,a,i,o,l);return{x:()=>{let t=u.x();return null!=l&&(t=tr(t)),t}}}},ru=In({less_:function(t,e){let n=$n(t,"a","less"),s=$n(e,"b","less");[n,s]=un(n,s),Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc((t=>t.less(n,s)),r,null,"Less")}}),iu={kernelName:st,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>ai(t,as(si(n,s),"float32")),b:()=>ai(t,as(ru(n,s),"float32"))}}},au=In({maxPool3dBackprop_:function(t,e,n,s,r,i=[1,1,1],a,o){const l=$n(t,"dy","maxPool3dBackprop"),u=$n(e,"input","maxPool3dBackprop"),h=$n(n,"output","maxPool3dBackprop");let c=l,d=u,p=h,f=!1;4===u.rank&&(f=!0,c=Qs(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Qs(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Qs(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),ae(5===c.rank,(()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${c.rank}.`)),ae(5===d.rank,(()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${d.rank}.`)),ae(5===p.rank,(()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${p.rank}.`)),ae(gr(r,i),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),null!=o&&ae(de(a),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const g={dy:c,input:d,output:p},m={filterSize:s,strides:r,dilations:i,pad:a,dimRoundingMode:o},y=mn.runKernelFunc((t=>{const e=ar(d.shape,s,r,i,a,o);return t.maxPool3dBackprop(c,d,p,e)}),g,null,"MaxPool3DBackprop",m);return f?Qs(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),ou={kernelName:it,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,dilations:o,pad:l,dimRoundingMode:u}=n,h=null==o?[1,1,1]:o;return{x:()=>au(t,s,r,i,a,h,l,u)}}},lu=In({maxPoolBackprop_:function(t,e,n,s,r,i,a){const o=$n(t,"dy","maxPoolBackprop"),l=$n(e,"input","maxPoolBackprop"),u=$n(n,"output","maxPoolBackprop");ae(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),ae(4===o.rank,(()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${o.rank}.`)),ae(4===l.rank,(()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${l.rank}.`)),null!=a&&ae(de(i),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const h={dy:o,input:l,output:u},c={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return mn.runKernelFunc((t=>{const e=ir(l.shape,s,r,1,i,a);return t.maxPoolBackprop(o,l,u,e)}),h,null,"MaxPoolBackprop",c)}}),uu={kernelName:rt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>lu(t,s,r,i,a,o)}}},hu={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[i,a]=e,o=ye(r,i.shape),l=Ys(o,i.rank),u=nu(t,a,i,o,l);return{x:()=>{let t=u.x();return null!=l&&(t=tr(t)),t}}}},cu={kernelName:ot,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>ai(t,as(Wa(n,s),"float32")),b:()=>ai(t,as(ni(n,s),"float32"))}}},du={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Vr(n.shape,s.shape);return{a:()=>{const e=Ur(n.shape,r);return e.length>0?Qs(di(t,e),n.shape):t},b:()=>{const e=ai(t,ki(Xr(Br(n,s)))),i=Ur(s.shape,r);return i.length>0?Qs(di(e,i),s.shape):e}}}},pu={kernelName:lt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Vr(n.shape,s.shape);return{a:()=>{const e=ai(t,as(s,"float32")),i=Ur(n.shape,r);return i.length>0?Qs(di(e,i),n.shape):e},b:()=>{const e=ai(t,as(n,"float32")),i=Ur(s.shape,r);return i.length>0?Qs(di(e,i),s.shape):e}}}},fu={kernelName:ut,gradFunc:t=>({x:()=>ki(t)})},gu={kernelName:ft,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>yi(n.shape,"float32")}}},mu={kernelName:pt,gradFunc:t=>({x:()=>Ri(t)})},yu={kernelName:gt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,i=r.map((t=>t[0]));return{x:()=>Gi(t,i,s.shape)}}},bu={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,i=n,a=s,o=Vr(i.shape,a.shape);return{a:()=>{const e=as(a,"float32");let n=ai(t,ai(e,Va(i,ci(e,Ws(1)))));const s=Ur(i.shape,o);return s.length>0&&(n=di(n,s)),Qs(n,i.shape)},b:()=>{const e=ni(i,0),n=la(e,li(i),Ri(i));let s=ai(t,ai(r,n));const l=Ur(a.shape,o);return l.length>0&&(s=di(s,l)),Qs(s,a.shape)}}}},xu={kernelName:mt,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=ni(n,0);return{x:()=>la(r,t,ai(t,s)),alpha:()=>{let e=la(r,Ri(t),ai(t,n));const i=Ur(s.shape,t.shape);return i.length>0&&(e=di(e,i)),Qs(e,s.shape)}}}},wu={kernelName:yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Br(t,ki(Ci(n)))}}},vu={kernelName:Ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=ai(Wa(n,6),ma(n));return{x:()=>ai(t,as(s,"float32"))}}},Cu={kernelName:bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(t,as(ma(n),"float32"))}}},$u={kernelName:xt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(t,n.shape)}}},ku={kernelName:vt,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r=e=>{const{alignCorners:r}=n;return e.resizeBilinearBackprop(t,s,r)},i={images:s};return{images:()=>mn.runKernelFunc(r,i,null,"ResizeBilinearGrad",n)}}},Iu={kernelName:wt,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r=e=>{const{alignCorners:r}=n;return e.resizeNearestNeighborBackprop(t,s,r)},i={images:s};return{images:()=>mn.runKernelFunc(r,i,null,"ResizeNearestNeighborGrad",n)}}},Su={kernelName:$t,gradFunc:(t,e,n)=>{const{dims:s}=n,r=ye(s,t.shape);return{x:()=>Pi(t,r)}}},Eu={kernelName:kt,gradFunc:t=>({x:()=>Ri(t)})},Ru={kernelName:It,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ki(Br(t,ai(Va(n,1.5),2)))}}},Au=In({logicalNot_:function(t){const e=$n(t,"x","logicalNot","bool"),n={x:e};return mn.runKernelFunc((t=>t.logicalNot(e)),n,null,"LogicalNot")}}),Nu={kernelName:St,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>as(Ri(n),"float32"),t:()=>ai(t,as(n,t.dtype)),e:()=>ai(t,as(Au(n),t.dtype))}}},Tu={kernelName:Et,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=ni(n,Ws(0)),s=Ws($o),r=Ws(ko),i=ai(t,r),a=ai(ai(t,s),ui(as(n,"float32")));return la(e,i,a)}}}},Du={kernelName:Tt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(t,ai(n,ci(Ws(1),n)))}}},Fu={kernelName:Nt,gradFunc:t=>({x:()=>Ri(t)})},_u=In({cos_:function(t){const e=$n(t,"x","cos"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.cos(e);return n([e]),s}),n,null,O)}}),Ou={kernelName:"Sin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(_u(as(n,"float32")),t)}}},Mu=In({cosh_:function(t){const e=$n(t,"x","cosh"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.cosh(e);return n([e]),s}),n,null,M)}}),Lu={kernelName:At,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(Mu(as(n,"float32")),t)}}},zu={kernelName:Rt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:i}=n,a=s.shape,[o,l]=As(s,r,i),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>Ni(t,u)}}},Bu={kernelName:Mt,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,i=ai(t,s);return{logits:()=>ci(i,ai(di(i,[r],!0),s))}}},Pu={kernelName:Dt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(t,Vi(n))}}},Wu=In({batchToSpaceND_:function(t,e,n){const s=$n(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));ae(s.rank>=1+e.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`)),ae(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),ae(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`));const i={x:s},a={blockShape:e,crops:n};return mn.runKernelFunc((t=>t.batchToSpaceND(s,e,n)),i,null,S,a)}}),Uu={kernelName:_t,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Wu(t,s,r)}}},Vu={kernelName:Ot,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>Er(t,s)}}},Gu=[Jo,Zo,Qo,tl,{kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,s)=>{n[s]=()=>t.clone()})),n}},el,nl,sl,rl,il,al,ol,ul,cl,dl,fl,gl,ml,yl,bl,xl,vl,wl,kl,Sl,Rl,Nl,Tl,Dl,Fl,_l,Ol,Ml,Ll,Bl,zl,Wl,Vl,jl,ql,Kl,Xl,Yl,Jl,Zl,Ql,eu,su,su,iu,ou,uu,hu,cu,du,pu,fu,gu,mu,yu,yu,bu,xu,wu,vu,Cu,$u,ku,Iu,Su,Eu,Ru,Nu,Tu,Du,Fu,Ou,Lu,zu,Bu,Pu,Uu,Uu,Vu,Vu,{kernelName:Ft,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Br(t,ai(Qi(as(n,"float32")),2))}}},{kernelName:Lt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ws(2);return{a:()=>ai(t,ai(r,ci(n,s))),b:()=>ai(t,ai(r,ci(s,n)))}}},{kernelName:zt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(t,ai(as(n,"float32"),2))}}},{kernelName:Ht,gradFunc:t=>({x:()=>Ri(t)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Vr(n.shape,s.shape);return{a:()=>{let e=t;const s=Ur(n.shape,r);return s.length>0&&(e=di(e,s)),Qs(e,n.shape)},b:()=>{let e=t;const n=Ur(s.shape,r);return n.length>0&&(e=di(e,n)),Qs(ki(e),s.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:i}=n;ye(i,s.shape).forEach((t=>{r[t]=1}));const a=Qs(t,r),o=ai(a,bi(s.shape,"float32"));return{x:()=>o}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Br(t,Ci(_u(n)))}}},{kernelName:Bt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ai(ci(Ws(1),Ci(n)),t)}}},{kernelName:Pt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let e=Ri(s);if(1===s.rank)for(let n=0;n<r[0];++n)e=Gs(e,Gi(t,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)e=Gs(e,Gi(t,[n*s.shape[0],i*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)e=Gs(e,Gi(t,[n*s.shape[0],i*s.shape[1],a*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)for(let o=0;o<r[3];++o)e=Gs(e,Gi(t,[n*s.shape[0],i*s.shape[1],a*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return e}}}},{kernelName:Wt,gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,i=Js(r);return{x:()=>tr(t,i)}}},{kernelName:Ut,gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>ea(t,r)}}},{kernelName:Vt,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=ii(e,Ri(e)),s=ei(t,n);let r=si(e,Ws(0,"int32"));const i=s.rank-r.rank;for(let t=0;t<i;++t)r=Hr(r,t+1);r=fi(r,bi(s.shape,"bool"));const a=Ri(s);return la(r,s,a)}(t,n)}}},{kernelName:Gt,gradFunc:t=>({x:()=>Ri(t)})}];for(const t of Gu)ee(t);Ze.prototype.abs=function(){return this.throwIfDisposed(),Vs(this)};const Hu=In({acos_:function(t){const e=$n(t,"x","acos"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.acos(e);return n([e]),s}),n,null,p)}});Ze.prototype.acos=function(){return this.throwIfDisposed(),Hu(this)};const ju=In({acosh_:function(t){const e=$n(t,"x","acosh"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.acosh(e);return n([e]),s}),n,null,f)}});Ze.prototype.acosh=function(){return this.throwIfDisposed(),ju(this)};const qu=In({mod_:function(t,e){let n=$n(t,"a","mod"),s=$n(e,"b","mod");[n,s]=un(n,s);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.mod(n,s);return e([n,s]),r}),r,null,"Mod")}}),Ku=In({addStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","addStrict"),s=$n(e,"b","addStrict");return oe(n.shape,s.shape,"Error in addStrict: "),Gs(n,s)}}),Xu=In({divStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","div"),s=$n(e,"b","div");return oe(n.shape,s.shape,"Error in divideStrict: "),Br(n,s)}}),Yu=In({maximumStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","maximumStrict"),s=$n(e,"b","maximumStrict");return oe(n.shape,s.shape,"Error in maximumStrict: "),ii(n,s)}}),Ju=In({minimumStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","minimumStrict"),s=$n(e,"b","minimumStrict");return oe(n.shape,s.shape,"Error in minimumStrict: "),vi(n,s)}}),Zu=In({modStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","modStrict"),s=$n(e,"b","modStrict");return oe(n.shape,s.shape,"Error in modStrict: "),qu(n,s)}}),Qu=In({mulStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","mul"),s=$n(e,"b","mul");return oe(n.shape,s.shape,"Error in multiplyStrict: "),ai(n,s)}}),th=In({powStrict_:function(t,e){return Fs("strict variants of ops have been deprecated and will be removed in future"),oe(t.shape,e.shape,"Error in powStrict: "),Va(t,e)}}),eh=In({squaredDifferenceStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","squaredDifferenceStrict"),s=$n(e,"b","squaredDifferenceStrict");return oe(n.shape,s.shape,"Error in squaredDifferenceStrict: "),Ja(n,s)}}),nh=In({subStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","subStrict"),s=$n(e,"b","subStrict");return oe(n.shape,s.shape,"Error in subStrict: "),ci(n,s)}});Ze.prototype.addStrict=function(t){return this.throwIfDisposed(),Ku(this,t)},Ze.prototype.add=function(t){return this.throwIfDisposed(),Gs(this,t)},Ze.prototype.all=function(t,e){return this.throwIfDisposed(),er(this,t,e)},Ze.prototype.any=function(t,e){return this.throwIfDisposed(),nr(this,t,e)},Ze.prototype.argMax=function(t){return this.throwIfDisposed(),sr(this,t)};const sh=In({argMin_:function(t,e=0){let n=$n(t,"x","argMin");const s={x:n},r={axis:e};return mn.runKernelFunc(((t,s)=>{s([n]),null==e&&(e=0);let r=ye(e,n.shape);const i=Ys(r,n.rank);return null!=i&&(n=tr(n,i),r=Zs(r.length,n.rank)),t.argMin(n,r[0])}),s,null,y,r)}});Ze.prototype.argMin=function(t){return this.throwIfDisposed(),sh(this,t)},Ze.prototype.asScalar=function(){return this.throwIfDisposed(),ae(1===this.size,(()=>"The array must have only 1 element.")),Qs(this,[])},Ze.prototype.asType=function(t){return this.throwIfDisposed(),as(this,t)},Ze.prototype.as1D=function(){return this.throwIfDisposed(),Qs(this,[this.size])},Ze.prototype.as2D=function(t,e){return this.throwIfDisposed(),Qs(this,[t,e])},Ze.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Qs(this,[t,e,n])},Ze.prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),Qs(this,[t,e,n,s])},Ze.prototype.as5D=function(t,e,n,s,r){return this.throwIfDisposed(),Qs(this,[t,e,n,s,r])};const rh=In({asin_:function(t){const e=$n(t,"x","asin"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.asin(e);return n([e]),s}),n,null,b)}});Ze.prototype.asin=function(){return this.throwIfDisposed(),rh(this)};const ih=In({asinh_:function(t){const e=$n(t,"x","asinh"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.asinh(e);return n([e]),s}),n,null,x)}});Ze.prototype.asinh=function(){return this.throwIfDisposed(),ih(this)};const ah=In({atan_:function(t){const e=$n(t,"x","atan"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.atan(e);return n([e]),s}),n,null,w)}});Ze.prototype.atan=function(){return this.throwIfDisposed(),ah(this)};const oh=In({atan2_:function(t,e){let n=$n(t,"a","atan2"),s=$n(e,"b","atan2");[n,s]=un(n,s);const r={a:n,b:s};return mn.runKernelFunc(((t,e)=>{const r=t.atan2(n,s);return e([n,s]),r}),r,null,C)}});Ze.prototype.atan2=function(t){return this.throwIfDisposed(),oh(this,t)};const lh=In({atanh_:function(t){const e=$n(t,"x","atanh"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.atanh(e);return n([e]),s}),n,null,v)}});Ze.prototype.atanh=function(){return this.throwIfDisposed(),lh(this)},Ze.prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),yr(this,t,e,n,s)},Ze.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Wu(this,t,e)},Ze.prototype.batchNorm=function(t,e,n,s,r){return this.throwIfDisposed(),wr(this,t,e,n,s,r)},Ze.prototype.broadcastTo=function(t){return this.throwIfDisposed(),oa(this,t)},Ze.prototype.cast=function(t){return this.throwIfDisposed(),as(this,t)};const uh=In({ceil_:function(t){const e=$n(t,"x","ceil"),n={x:e};return mn.runKernelFunc((t=>t.ceil(e)),n,null,A)}});Ze.prototype.ceil=function(){return this.throwIfDisposed(),uh(this)},Ze.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),kr(this,t,e)},Ze.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Ze&&(t=[t]),Er([this,...t],e)},Ze.prototype.conv1d=function(t,e,n,s,r,i){return this.throwIfDisposed(),Fr(this,t,e,n,s,r,i)},Ze.prototype.conv2dTranspose=function(t,e,n,s,r){return this.throwIfDisposed(),Or(this,t,e,n,s,r)},Ze.prototype.conv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),Dr(this,t,e,n,s,r,i)},Ze.prototype.cos=function(){return this.throwIfDisposed(),_u(this)},Ze.prototype.cosh=function(){return this.throwIfDisposed(),Mu(this)},Ze.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Al(this,t,e,n)};const hh=In({depthToSpace_:function(t,e,n="NHWC"){const s=$n(t,"x","depthToSpace"),r="NHWC"===n?s.shape[1]:s.shape[2],i="NHWC"===n?s.shape[2]:s.shape[3],a="NHWC"===n?s.shape[3]:s.shape[1];ae(r*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${e}  for depthToSpace with input shape\n    ${s.shape}`)),ae(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${s.shape}`)),ae(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:e,dataFormat:n};return mn.runKernelFunc((t=>t.depthToSpace(s,e,n)),o,null,"DepthToSpace",l)}});Ze.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),hh(this,t,e)},Ze.prototype.depthwiseConv2D=function(t,e,n,s,r,i){return Fs("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Lr(this,t,e,n,s,r,i)},Ze.prototype.depthwiseConv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),Lr(this,t,e,n,s,r,i)};const ch=In({dilation2d_:function(t,e,n,s,r=[1,1],i="NHWC"){const a=$n(t,"x","dilation2d"),o=$n(e,"filter","dilation2d");ae(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),ae(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ae("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=Qs(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const h={x:l,filter:o},c={strides:n,pad:s,dilations:r},d=mn.runKernel(B,h,c);return u?Qs(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Ze.prototype.dilation2d=function(t,e,n,s,r){return this.throwIfDisposed(),ch(this,t,e,n,s,r)};const dh=In({divNoNan_:function(t,e){let n=$n(t,"a","div"),s=$n(e,"b","div");[n,s]=un(n,s);const r=Br(n,s),i=Ri(r),a=Gr(s,i);return la(a,i,r)}});Ze.prototype.divNoNan=function(t){return this.throwIfDisposed(),dh(this,t)},Ze.prototype.divStrict=function(t){return this.throwIfDisposed(),Xu(this,t)},Ze.prototype.div=function(t){return this.throwIfDisposed(),Br(this,t)};const ph=In({dot_:function(t,e){const n=$n(t,"t1","dot"),s=$n(e,"t2","dot");ae(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],i=1===s.rank?s.size:s.shape[0];if(ae(r===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`)),1===n.rank&&1===s.rank){const t=Qs(n,[1,-1]),e=Qs(s,[-1,1]),r=ka(t,e);return Qs(r,[])}if(1===n.rank&&2===s.rank){const t=Qs(n,[1,-1]),e=Qs(s,[s.shape[0],s.shape[1]]),r=ka(t,e);return Qs(r,[r.size])}if(2===n.rank&&1===s.rank){const t=Qs(s,[-1,1]),e=ka(n,t);return Qs(e,[e.size])}{const t=Qs(s,[s.shape[0],s.shape[1]]);return ka(n,t)}}});Ze.prototype.dot=function(t){return this.throwIfDisposed(),ph(this,t)},Ze.prototype.elu=function(){return this.throwIfDisposed(),Pr(this)};const fh=In({equalStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","equalStrict"),s=$n(e,"b","equalStrict");return oe(n.shape,s.shape,"Error in equalStrict: "),Gr(n,s)}}),gh=In({greaterEqualStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","greaterEqualStrict"),s=$n(e,"b","greaterEqualStrict");return oe(n.shape,s.shape,"Error in greaterEqualStrict: "),si(n,s)}}),mh=In({greaterStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","greaterStrict"),s=$n(e,"b","greaterStrict");return oe(n.shape,s.shape,"Error in greaterStrict: "),ni(n,s)}}),yh=In({lessEqualStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","lessEqualStrict"),s=$n(e,"b","lessEqualStrict");return oe(n.shape,s.shape,"Error in lessEqualStrict: "),Wa(n,s)}}),bh=In({lessStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","lessStrict"),s=$n(e,"b","lessStrict");return oe(n.shape,s.shape,"Error in lessStrict: "),ru(n,s)}}),xh=In({notEqualStrict_:function(t,e){Fs("strict variants of ops have been deprecated and will be removed in future");const n=$n(t,"a","notEqualStrict"),s=$n(e,"b","notEqualStrict");return oe(n.shape,s.shape,"Error in notEqualStrict: "),Ii(n,s)}});Ze.prototype.equalStrict=function(t){return this.throwIfDisposed(),fh(this,t)},Ze.prototype.equal=function(t){return this.throwIfDisposed(),Gr(this,t)};const wh=In({erf_:function(t){let e=$n(t,"x","erf");ae("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=as(e,"float32"));const n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.erf(e);return n([e]),s}),n,null,"Erf")}});Ze.prototype.erf=function(){return this.throwIfDisposed(),wh(this)},Ze.prototype.exp=function(){return this.throwIfDisposed(),ui(this)},Ze.prototype.expandDims=function(t){return this.throwIfDisposed(),Hr(this,t)};const vh=In({expm1_:function(t){const e=$n(t,"x","expm1"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.expm1(e);return n([e]),s}),n,null,V)}});Ze.prototype.expm1=function(){return this.throwIfDisposed(),vh(this)},Ze.prototype.fft=function(){return this.throwIfDisposed(),ha(this)},Ze.prototype.flatten=function(){return this.throwIfDisposed(),Qs(this,[this.size])},Ze.prototype.floor=function(){return this.throwIfDisposed(),Xr(this)},Ze.prototype.floorDiv=function(t){return this.throwIfDisposed(),zr(this,t)},Ze.prototype.gather=function(t,e){return this.throwIfDisposed(),ei(this,t,e)},Ze.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),gh(this,t)},Ze.prototype.greaterEqual=function(t){return this.throwIfDisposed(),si(this,t)},Ze.prototype.greaterStrict=function(t){return this.throwIfDisposed(),mh(this,t)},Ze.prototype.greater=function(t){return this.throwIfDisposed(),ni(this,t)},Ze.prototype.ifft=function(){return this.throwIfDisposed(),da(this)},Ze.prototype.irfft=function(){return this.throwIfDisposed(),pa(this)};const Ch=In({isFinite_:function(t){const e=$n(t,"x","isFinite"),n={x:e};return mn.runKernelFunc((t=>t.isFinite(e)),n,null,J)}});Ze.prototype.isFinite=function(){return this.throwIfDisposed(),Ch(this)};const $h=In({isInf_:function(t){const e=$n(t,"x","isInf"),n={x:e};return mn.runKernelFunc((t=>t.isInf(e)),n,null,Z)}});Ze.prototype.isInf=function(){return this.throwIfDisposed(),$h(this)};const kh=In({isNaN_:function(t){const e=$n(t,"x","isNaN"),n={x:e};return mn.runKernelFunc((t=>t.isNaN(e)),n,null,Q)}});Ze.prototype.isNaN=function(){return this.throwIfDisposed(),kh(this)},Ze.prototype.leakyRelu=function(t){return this.throwIfDisposed(),oi(this,t)},Ze.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),yh(this,t)},Ze.prototype.lessEqual=function(t){return this.throwIfDisposed(),Wa(this,t)},Ze.prototype.lessStrict=function(t){return this.throwIfDisposed(),bh(this,t)},Ze.prototype.less=function(t){return this.throwIfDisposed(),ru(this,t)};const Ih=In({localResponseNormalization_:function(t,e=5,n=1,s=1,r=.5){const i=$n(t,"x","localResponseNormalization");ae(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),ae(de(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=Qs(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:s,beta:r},h=mn.runKernelFunc(((t,i)=>{const o=t.localResponseNormalization4D(a,e,n,s,r);return i([a,o]),o}),l,null,"LRN",u);return o?Qs(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Ze.prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),Ih(this,t,e,n,s)};const Sh=In({logSigmoid_:function(t){const e=$n(t,"x","logSigmoid");return Ps((t=>({value:ki(Yi(ki(t))),gradFunc:e=>ai(e,Vi(ki(t)))})))(e)}});Ze.prototype.logSigmoid=function(){return this.throwIfDisposed(),Sh(this)},Ze.prototype.logSoftmax=function(t){return this.throwIfDisposed(),pi(this,t)},Ze.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Qa(this,t,e)},Ze.prototype.log=function(){return this.throwIfDisposed(),li(this)},Ze.prototype.log1p=function(){return this.throwIfDisposed(),Za(this)},Ze.prototype.logicalAnd=function(t){return this.throwIfDisposed(),fi(this,t)},Ze.prototype.logicalNot=function(){return this.throwIfDisposed(),Au(this)};const Eh=In({logicalOr_:function(t,e){const n=$n(t,"a","logicalOr","bool"),s=$n(e,"b","logicalOr","bool");Vr(n.shape,s.shape);const r={a:n,b:s};return mn.runKernelFunc((t=>t.logicalOr(n,s)),r,null,"LogicalOr")}});Ze.prototype.logicalOr=function(t){return this.throwIfDisposed(),Eh(this,t)};const Rh=In({logicalXor_:function(t,e){const n=$n(t,"a","logicalXor","bool"),s=$n(e,"b","logicalXor","bool");return Vr(n.shape,s.shape),fi(Eh(t,e),Au(fi(t,e)))}});Ze.prototype.logicalXor=function(t){return this.throwIfDisposed(),Rh(this,t)},Ze.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),ka(this,t,e,n)},Ze.prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),gi(this,t,e,n,s)},Ze.prototype.max=function(t,e){return this.throwIfDisposed(),hi(this,t,e)},Ze.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Yu(this,t)},Ze.prototype.maximum=function(t){return this.throwIfDisposed(),ii(this,t)},Ze.prototype.mean=function(t,e){return this.throwIfDisposed(),xi(this,t,e)},Ze.prototype.min=function(t,e){return this.throwIfDisposed(),wi(this,t,e)},Ze.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Ju(this,t)},Ze.prototype.minimum=function(t){return this.throwIfDisposed(),vi(this,t)},Ze.prototype.modStrict=function(t){return this.throwIfDisposed(),Zu(this,t)},Ze.prototype.mod=function(t){return this.throwIfDisposed(),qu(this,t)},Ze.prototype.mulStrict=function(t){return this.throwIfDisposed(),Qu(this,t)},Ze.prototype.mul=function(t){return this.throwIfDisposed(),ai(this,t)},Ze.prototype.neg=function(){return this.throwIfDisposed(),ki(this)},Ze.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Ha(this,t,e,n)},Ze.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),xh(this,t)},Ze.prototype.notEqual=function(t){return this.throwIfDisposed(),Ii(this,t)},Ze.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Si(this,t,e,n)},Ze.prototype.onesLike=function(){return this.throwIfDisposed(),Ai(this)},Ze.prototype.pad=function(t,e){return this.throwIfDisposed(),Ni(this,t,e)};const Ah=In({pool_:function(t,e,n,s,r,i){null==r&&(r=[1,1]),null==i&&(i=1),0===s&&(s="valid");const a=$n(t,"x","maxPool");let o=a,l=!1;3===a.rank&&(l=!0,o=Qs(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ae(gr(i,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`));const u=ir(o.shape,e,i,r,s),h=[u.dilationHeight,u.dilationWidth];let c;c="same"===s?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),s=n.map((t=>Math.floor(t/2))),r=n.map(((t,e)=>t-s[e]));return n.map(((t,e)=>[s[e],r[e]]))}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[p,f]=function(t,e,n){const s=n.map((t=>t[0])),r=n.map((t=>t[1])),i=t.concat(s,r),a=e.map(((t,e)=>(t-i[e]%t)%t)),o=r.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[s[e],o[e]])),e.map(((t,e)=>[0,a[e]]))]}([u.inHeight,u.inWidth],h,c),g=d?s:"valid",m=d?o:pl(o,h,p),y=("avg"===n?()=>yr(m,e,i,g):()=>gi(m,e,i,g))(),b=d?y:Wu(y,h,f);return l?Qs(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});Ze.prototype.pool=function(t,e,n,s,r){return this.throwIfDisposed(),Ah(this,t,e,n,s,r)},Ze.prototype.powStrict=function(t){return this.throwIfDisposed(),th(this,t)},Ze.prototype.pow=function(t){return this.throwIfDisposed(),Va(this,t)},Ze.prototype.prelu=function(t){return this.throwIfDisposed(),Ti(this,t)};const Nh=In({prod_:function(t,e=null,n=!1){let s=$n(t,"x","prod");const r={x:s},i={axis:e,keepDims:n};return mn.runKernelFunc((t=>{"bool"===s.dtype&&(s=as(s,"int32"));const r=ye(e,s.shape),i=Ys(r,s.rank);let a=r,o=s;null!=i&&(o=tr(s,i),a=Zs(a.length,s.rank));let l=t.prod(o,a);if(n){const t=Ks(l.shape,r);l=Qs(l,t)}return l}),r,null,"Prod",i)}});Ze.prototype.prod=function(t,e){return this.throwIfDisposed(),Nh(this,t,e)};const Th=In({reciprocal_:function(t){const e=$n(t,"x","reciprocal"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.reciprocal(e);return n([e]),s}),n,null,yt)}});Ze.prototype.reciprocal=function(){return this.throwIfDisposed(),Th(this)},Ze.prototype.relu=function(){return this.throwIfDisposed(),Bi(this)},Ze.prototype.relu6=function(){return this.throwIfDisposed(),ga(this)},Ze.prototype.reshapeAs=function(t){return this.throwIfDisposed(),Qs(this,t.shape)},Ze.prototype.reshape=function(t){return this.throwIfDisposed(),Qs(this,t)},Ze.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),Ba(this,t,e)},Ze.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),Pa(this,t,e)},Ze.prototype.reverse=function(t){return this.throwIfDisposed(),Pi(this,t)},Ze.prototype.rfft=function(){return this.throwIfDisposed(),ca(this)};const Dh=In({round_:function(t){const e=$n(t,"x","round"),n={x:e};return mn.runKernelFunc((t=>t.round(e)),n,null,kt)}});Ze.prototype.round=function(){return this.throwIfDisposed(),Dh(this)},Ze.prototype.rsqrt=function(){return this.throwIfDisposed(),Pl(this)},Ze.prototype.selu=function(){return this.throwIfDisposed(),Wi(this)},Ze.prototype.separableConv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),Ui(this,t,e,n,s,r,i)},Ze.prototype.sigmoid=function(){return this.throwIfDisposed(),Vi(this)};const Fh=In({sign_:function(t){const e=$n(t,"x","sign"),n={x:e};return mn.runKernelFunc((t=>t.sign(e)),n,null,Nt)}});Ze.prototype.sign=function(){return this.throwIfDisposed(),Fh(this)},Ze.prototype.sin=function(){return this.throwIfDisposed(),Il(this)},Ze.prototype.sinh=function(){return this.throwIfDisposed(),El(this)},Ze.prototype.slice=function(t,e){return this.throwIfDisposed(),Gi(this,t,e)},Ze.prototype.softmax=function(t){return this.throwIfDisposed(),Xi(this,t)},Ze.prototype.softplus=function(){return this.throwIfDisposed(),Yi(this)},Ze.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),pl(this,t,e)},Ze.prototype.split=function(t,e){return this.throwIfDisposed(),Zi(this,t,e)},Ze.prototype.sqrt=function(){return this.throwIfDisposed(),Qi(this)},Ze.prototype.square=function(){return this.throwIfDisposed(),Ci(this)},Ze.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Ja(this,t)},Ze.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),eh(this,t)},Ze.prototype.squeeze=function(t){return this.throwIfDisposed(),ta(this,t)},Ze.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Ze?[this,t]:[this,...t];return ea(n,e)},Ze.prototype.step=function(t){return this.throwIfDisposed(),ma(this,t)};const _h=In({stridedSlice_:function(t,e,n,s,r=0,i=0,a=0,o=0,l=0){let u=$n(t,"x","stridedSlice");const h={x:u},c={begin:e,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return mn.runKernelFunc((t=>{null==s&&(s=new Array(e.length));const h=ms(a);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const c=u.rank-e.length,d=ms(o),p=u.shape.slice();d.forEach((t=>{e[t]=0,n[t]=1,p.splice(t,0,1)})),u=Qs(u,p);const{begin:f,end:g,strides:m}=vs(u.shape,h,c,e,n,s,r,i,a);e=f,n=g,s=m;const y=ms(l);y.forEach((t=>{n[t]=e[t]+1,s[t]=1}));const b=ys(e,n,s),x=b.filter(((t,e)=>-1===y.indexOf(e)));if(s.every((t=>1===t)))return Qs(Gi(u,e,b),x);const w=t.stridedSlice(u,e,n,s);return Qs(w,x)}),h,null,"StridedSlice",c)}});Ze.prototype.stridedSlice=function(t,e,n,s,r,i,a,o){return this.throwIfDisposed(),_h(this,t,e,n,s,r,i,a,o)},Ze.prototype.subStrict=function(t){return this.throwIfDisposed(),nh(this,t)},Ze.prototype.sub=function(t){return this.throwIfDisposed(),ci(this,t)},Ze.prototype.sum=function(t,e){return this.throwIfDisposed(),di(this,t,e)};const Oh=In({tan_:function(t){const e=$n(t,"x","tan"),n={x:e};return mn.runKernelFunc(((t,n)=>{const s=t.tan(e);return n([e]),s}),n,null,"Tan")}});Ze.prototype.tan=function(){return this.throwIfDisposed(),Oh(this)},Ze.prototype.tanh=function(){return this.throwIfDisposed(),na(this)},Ze.prototype.tile=function(t){return this.throwIfDisposed(),jr(this,t)},Ze.prototype.toBool=function(){return this.throwIfDisposed(),as(this,"bool")},Ze.prototype.toFloat=function(){return this.throwIfDisposed(),as(this,"float32")},Ze.prototype.toInt=function(){return this.throwIfDisposed(),as(this,"int32")};const Mh=In({topk_:function(t,e=1,n=!0){const s=$n(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const i={x:s},a={k:e,sorted:n},[o,l]=mn.runKernelFunc((t=>t.topk(s,e,n)),i,null,"TopK",a);return{values:o,indices:l}}});let Lh;function zh(){return null==Lh&&(Lh=mn.backend.epsilon()),Lh}Ze.prototype.topk=function(t,e){return this.throwIfDisposed(),Mh(this,t,e)},Ze.prototype.transpose=function(t){return this.throwIfDisposed(),tr(this,t)},Ze.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Ul(this,t,e)},Ze.prototype.unstack=function(t){return this.throwIfDisposed(),aa(this,t)},Ze.prototype.where=function(t,e){return this.throwIfDisposed(),la(t,this,e)},Ze.prototype.zerosLike=function(){return this.throwIfDisposed(),Ri(this)};class Bh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Bh.prototype)}}class Ph extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ph.prototype)}}class Wh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Wh.prototype)}}class Uh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Uh.prototype)}}class Vh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Vh.prototype)}}class Gh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Gh.prototype)}}function Hh(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function jh(t,e){if(!t)throw new Vh(e)}function qh(t,e){let n=0;for(const s of t)s===e&&n++;return n}function Kh(t){return 1===t.length?t[0]:t}function Xh(t){return Array.isArray(t)?t:[t]}function Yh(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Jh(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let Zh={};function Qh(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function tc(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>tc(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?tc(e):t[n]=e.value)}}}function ec(t,e={},n={},s="object",r=!1){if("string"==typeof t){const r=t;let i;if(r in n)i=n[r];else if(r in Zh)i=Zh[r];else if(i=e[r],null==i)throw new Wh(`Unknown ${s}: ${t}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new Wh(`${s}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in Zh?[o,l]=Zh.className:a in e&&([o,l]=e[a]),null==o)throw new Wh(`Unknown ${s}: ${a}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(Zh))t[e]=Zh[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},Zh);for(const t of Object.keys(n))Zh[t]=n[t];tc(i.config);const s=l(o,i.config,n,r);return Zh=Object.assign({},e),s}{const t=Object.assign({},Zh);for(const t of Object.keys(n))Zh[t]=n[t];const e=new o(i.config);return Zh=Object.assign({},t),e}}}function nc(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function sc(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function rc(t){if(null==t)throw new Wh(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function ic(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Wh(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function ac(t,e,n=0,s=1/0){return jh(n>=0),jh(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every((t=>typeof t===e))}function oc(t,e){Array.isArray(t)?(ae(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>oc(t,`element ${n+1} of ${e}`)))):ae(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${lc(t)}.`))}function lc(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>lc(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function uc(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function hc(t,e){return Ms((()=>Qi(di(ai(t,t),e,!0))))}class cc extends Ns{getConfig(){return{}}}class dc extends cc{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Ms((()=>{const e=hc(t,this.axis),n=kr(e,0,this.maxValue);return ai(t,Br(n,Gs(zh(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}dc.className="MaxNorm",Ds(dc);class pc extends cc{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Ms((()=>Br(t,Gs(zh(),hc(t,this.axis)))))}getConfig(){return{axis:this.axis}}}pc.className="UnitNorm",Ds(pc);class fc extends cc{apply(t){return Bi(t)}}fc.className="NonNeg",Ds(fc);class gc extends cc{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Ms((()=>{const e=hc(t,this.axis),n=Gs(ai(this.rate,kr(e,this.minValue,this.maxValue)),ai(1-this.rate,e));return ai(t,Br(n,Gs(zh(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}gc.className="MinMaxNorm",Ds(gc);const mc={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function yc(t){return Qh(t)}function bc(t,e={}){return ec(t,Ts.getMap().classNameMap,e,"constraint")}function xc(t){return null==t?null:"string"==typeof t?bc({className:t in mc?mc[t]:t,config:{}}):t instanceof cc?t:bc(t)}const wc=["channelsFirst","channelsLast"],vc=["valid","same","causal"],Cc=["max","avg"],$c=["sum","mul","concat","ave"],kc=new Map;function Ic(t){ic(wc,"DataFormat",t)}function Sc(t){ic(vc,"PaddingMode",t)}function Ec(t){ic(Cc,"PoolMode",t)}const Rc=[];function Ac(t,e){Rc.push(t);try{const t=e();return Rc.pop(),t}catch(t){throw Rc.pop(),t}}function Nc(t){if(!Fc(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Rc.length?"":Rc.join("/")+"/")+t}function Tc(t){if(!Fc(t))throw new Error("Not a valid tensor name: '"+t+"'");kc.has(t)||kc.set(t,0);const e=kc.get(t);if(kc.set(t,kc.get(t)+1),e>0){const n=`${t}_${e}`;return kc.set(n,1),n}return t}const Dc=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Fc(t){return!!t.match(Dc)}function _c(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function Oc(t){return Li(t=Array.isArray(t)?new Float32Array(t):t)}function Mc(t){return wi(Oc(t)).dataSync()[0]}function Lc(t){return hi(Oc(t)).dataSync()[0]}function zc(t,e){if(e<t)throw new Wh(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}function Bc(t,e){return t.asType(e)}function Pc(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function Wc(t,e,n){return Ms((()=>{switch(t.rank){case 1:return Hi(t,e,n);case 2:return ji(t,[e,0],[n,t.shape[1]]);case 3:return qi(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Ki(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Gi(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Gi(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Wh(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Uc(t,e,n){return Ms((()=>{switch(t.rank){case 1:return Hi(t,e,n);case 2:return ji(t,[0,e],[t.shape[0],n]);case 3:return qi(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Ki(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Wh(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Vc(t,e,n,s){return Ms((()=>{switch(t.rank){case 1:return Hi(t,e,n);case 2:switch(s){case 1:return Wc(t,e,n);case 2:return Uc(t,e,n);default:throw new Wh(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Wc(t,e,n);case 2:return qi(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Uc(t,e,n);default:throw new Wh(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Wc(t,e,n);case 2:return Ki(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Ki(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Uc(t,e,n);default:throw new Wh(`The axis is not within the rank of the tensor ${s}`)}default:throw new Wh(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Gc(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Er(t,e)}function Hc(t,e){switch(t.rank){case 1:return Rr([t,e]);case 2:return Ar([t,e],0);case 3:return Nr([t,e],0);case 4:return Tr([t,e],0);default:throw new Wh(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function jc(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Wh(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return jr(t,e)}function qc(t,e=0,n=1,s,r){return Oi(t,e,n,s,r)}function Kc(t,e,n,s){if(t.rank<2||e.rank<2)throw new Uh(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Uh(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return Ia({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Jc(t.rank,s,"channelsLast"):null,activation:n});{const r=t.shape.slice(),i=r.pop();t=t.reshape([-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],h=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(h).reshape([l,-1]);const c=[...r,...u];return Ia({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Jc(t.rank,s,"channelsLast"):null,activation:n}).reshape(c)}}function Xc(t,e,n){return Ms((()=>(e=Array.isArray(e)?Li(e,"int32"):e.toInt(),ei(t,e,n))))}function Yc(t){return ai(t,t)}function Jc(t,e,n){const s=e.shape;if(1!==e.rank&&e.rank!==t)throw new Wh(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1,1]):e.reshape([1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,1,s[0]]):e.reshape([1].concat(s))}else if(4===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1]):e.reshape([1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,s[0]]):e.reshape([1].concat(s))}else if(3===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1]):e.reshape([1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,s[0]]):e.reshape([1].concat(s))}else if(t<3)return e;throw new Wh(`Unsupported input rank by biasAdd: ${e.rank}`)}function Zc(t,e,n){return Ms((()=>(null==n&&(n="channelsLast"),Ic(n),t.add(Jc(t.rank,e,n)))))}function Qc(t,e,n,s){return Ms((()=>ua(t,e,n,s)))}function td(t,e,n=!1){return n?t():e()}const ed=["fanIn","fanOut","fanAvg"],nd=["normal","uniform","truncatedNormal"];class sd extends Ns{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class rd extends sd{apply(t,e){return yi(t,e)}}rd.className="Zeros",Ds(rd);class id extends sd{apply(t,e){return bi(t,e)}}id.className="Ones",Ds(id);class ad extends sd{constructor(t){if(super(),"object"!=typeof t)throw new Wh(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new Wh(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Ms((()=>ai(Ws(this.value),bi(t,e))))}getConfig(){return{value:this.value}}}ad.className="Constant",Ds(ad);class od extends sd{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Mi(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}od.className="RandomUniform",Ds(od);class ld extends sd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Uh(`randomNormal does not support dType ${e}.`);return qc(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ld.className="RandomNormal",Ds(ld);class ud extends sd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Uh(`truncatedNormal does not support dType ${e}.`);return ia(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ud.className="TruncatedNormal",Ds(ud);class hd extends sd{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Ms((()=>{if(2!==t.length||t[0]!==t[1])throw new Wh("Identity matrix initializer can only be used for 2D square matrices.");return ai(this.gain,qr(t[0]))}))}getConfig(){return{gain:this.gain}}}hd.className="Identity",Ds(hd);class cd extends sd{constructor(t){if(super(),t.scale<0)throw new Wh(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,ic(ed,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){ic(nd,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,s;if(Ic(e),2===t.length)n=t[0],s=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=_c(t,2);n=t[1]*e,s=t[0]*e}else if("channelsLast"===e){const e=_c(t,0,t.length-2);n=t[t.length-2]*e,s=t[t.length-1]*e}}else{const e=_c(t);n=Math.sqrt(e),s=Math.sqrt(e)}return[n,s]}(t),s=n[0],r=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,r):i/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Uh(`${this.getClassName()} does not support dType ${e}.`);return ia(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return Mi(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}cd.className="VarianceScaling",Ds(cd);class dd extends cd{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return cd.className}}dd.className="GlorotUniform",Ds(dd);class pd extends cd{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return cd.className}}pd.className="GlorotNormal",Ds(pd);class fd extends cd{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return cd.className}}fd.className="HeNormal",Ds(fd);class gd extends cd{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return cd.className}}gd.className="HeUniform",Ds(gd);class md extends cd{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return cd.className}}md.className="LeCunNormal",Ds(md);class yd extends cd{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return cd.className}}yd.className="LeCunNormal",Ds(yd);class bd extends sd{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Uh("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Ms((()=>{if(t.length<2)throw new Uh("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=qc(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=to.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),ai(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}bd.className="Orthogonal",Ds(bd);const xd={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function wd(t,e={}){return ec(t,Ts.getMap().classNameMap,e,"initializer")}function vd(t){return Qh(t)}function Cd(t){if("string"==typeof t){const e=t in xd?xd[t]:t;if("GlorotNormal"===e)return new pd;if("GlorotUniform"===e)return new dd;if("HeNormal"===e)return new fd;if("HeUniform"===e)return new gd;if("LeCunNormal"===e)return new md;if("LeCunUniform"===e)return new yd;{const t={};return t.className=e,t.config={},wd(t)}}return t instanceof sd?t:wd(t)}let $d=0;function kd(){return $d++}const Id={};function Sd(t=""){return t in Id||(Id[t]=0),Id[t]+=1,t+Id[t].toString()}function Ed(t){return Array.isArray(t)&&Array.isArray(t[0])}function Rd(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Ad(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Wh(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Nd(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new Wh(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Td(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const Dd="Variable";class Fd{constructor(t,e="float32",n=Dd,s=!0,r=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=kd(),n=null==n?Dd:n,this.originalName=Nc(n),this.name=Tc(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(t,e=!0,n,s){return mn.makeVariable(t,e,n,s)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function _d(t){return t.map((t=>t.read()))}function Od(t){t.forEach((t=>{t[0].write(t[1])}))}class Md{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Ld{constructor(t,e,n,s,r,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=a,this.id=kd(),null!=i&&(this.originalName=Nc(i),this.name=Tc(this.originalName)),this.rank=e.length}}let zd=0;class Bd{constructor(t,e){this.callArgs=e,this.id=zd++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Pd=0;class Wd extends Ns{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Pd++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Yh(t)+"_"+Sd(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Ph(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Wh(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Kh(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Kh(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Bh(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Bh(`Layer ${this.name} is not connected, no input to return.`);return Kh(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Bh(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Bh(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Kh(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Xh(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Xh(this.inputSpec);if(t.length!==e.length)throw new Wh(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const s=t[n],r=e[n];if(null==r)continue;const i=s.rank;if(null!=r.ndim&&i!==r.ndim)throw new Wh(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(null!=r.maxNDim&&i>r.maxNDim)throw new Wh(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(null!=r.minNDim&&i<r.minNDim)throw new Wh(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new Wh(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const t=s.shape;for(const e in r.axes){const s=Number(e),i=r.axes[e],a=s>=0?t[s]:t[t.length+s];if(null!=i&&-1===[i,null].indexOf(a))throw new Wh(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const e=r.shape[t],i=s.shape[t];if(null!=e&&null!=i&&e!==i)throw new Wh(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Xh(t);let s=!0;for(const t of n)if(!(t instanceof Ld)){s=!1;break}let r=!0;for(const t of n)if(t instanceof Ld){r=!1;break}if(s===r)throw new Wh("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ac(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Xh(t))e.push(n.shape);this.build(Kh(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let s=this.call(t,e);const r=Xh(s),i=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(s=Kh(i),null!=this.activityRegularizer)throw new Uh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(t){t=Xh(t);const e=[];for(const n of t)e.push(n.shape);return Kh(e)}(t),s=this.computeOutputShape(n);let r;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new Ld(i,n,this,Xh(t),e,this.name,s))):new Ld(i,s,this,Xh(t),e,this.name),this.addInboundNode(t,r,null,null,n,s,e),this._refCount++,null!=this.activityRegularizer)throw new Uh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=t[s]&&t[s]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Bh(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Bh(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ph(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Td(this.weights)}build(t){this.built=!0}getWeights(t=!1){return _d(t?this.trainableWeights:this.weights)}setWeights(t){Ms((()=>{const e=this.weights;if(e.length!==t.length)throw new Wh(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],s=_d(e);for(let r=0;r<s.length;++r){const i=s[r],a=e[r],o=t[r];if(!ce(i.shape,o.shape))throw new Wh(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}Od(n)}))}addWeight(t,e,n,s,r,i,a){if(-1!==this._addedWeightNames.indexOf(t))throw new Wh(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=Cd("zeros"));const o=s.apply(e,n),l=new Fd(o,n,t,i,a);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Xh(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,s,r,i,a=null){const o=Xh(t);e=Xh(e),n=Xh(n),s=Xh(s),r=Rd(r),i=Rd(i);const l=[],u=[],h=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),h.push(t.tensorIndex);new Bd({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:i},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Ud(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const s=Ud(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of s)-1===e.indexOf(t)&&e.push(t)}return e}}}class Vd extends Wd{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Sd("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Wh("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Wh("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Wh("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const s=new Ld(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Bd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Wh(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Gd(t){if(null==t)return;const e=[],n=[],s=[];for(const r in t){const i=t[r];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(r),s.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];Ls(s)}}function Hd(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var jd;Vd.className="InputLayer",Ds(Vd),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(jd||(jd={}));class qd{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Kd{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Xd extends qd{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const s=e[t];if("number"==typeof s)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+s*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const r=Ms((()=>Gs(this.totals[t],ai(s,n))));this.totals[t]=r,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Ms((()=>{const n=ai(Br(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),zs(e[t])})))}}class Yd extends qd{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!=typeof r[i]){const a=r[i];t.push(a.data()),e.push(s),n.push(i)}}const s=await Promise.all(t);for(let t=0;t<s.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=s[t][0]}}class Jd extends qd{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ke(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,s=Oe();return(...r)=>{const i=Oe();return i-s<e||(s=i,n=t(...r)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const s=[];null!=this.yield&&(await Gd(n),s.push(this.yield(t,e,n))),s.push(co()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Gd(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Gd(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(co()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Gd(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Gd(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(co()):ke(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Gd(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Gd(t),await this.trainEnd(t))}}function Zd(t,e){return null==t&&(t={}),t instanceof qd?[t]:Array.isArray(t)&&t[0]instanceof qd?t:Xh(t).map((t=>new Jd(t,e)))}class Qd{constructor(){}static registerCallbackConstructor(t,e){ae(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Qd.checkForDuplicate(e),null==Qd.constructors[t]&&(Qd.constructors[t]=[]),Qd.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Qd.constructors)Qd.constructors[+e].forEach((e=>{if(e===t)throw new Wh("Duplicate callback constructor.")}))}static clear(){Qd.constructors={}}static createCallbacks(t){const e=[];for(const n in Qd.constructors){const s=+n;t>=s&&e.push(...Qd.constructors[s])}return e.map((t=>new t))}}function tp(t,e,n,s,r,i,a,o,l){const u=new Yd,h=[new Xd,...Qd.createCallbacks(e)];null!=t&&h.push(...t),h.push(u);const c=new Kd(h);return c.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:c,history:u}}function ep(t,e={},n=!1){return ec(t,Ts.getMap().classNameMap,e,"layer",n)}function np(t,e){return Ms((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=di(Yc(t),e,!0),s=Kr(n.shape,zh()),r=Qi(ii(n,s));return Br(t,r)}))}function sp(t,e){return Ms((()=>xi(Yc(ci(e,t)),-1)))}function rp(t,e){return Ms((()=>xi(Vs(ci(e,t)),-1)))}function ip(t,e){return Ms((()=>{const n=ci(t,e),s=kr(Vs(t),zh(),Number.MAX_VALUE),r=Vs(Br(n,s));return ai(100,xi(r,-1))}))}function ap(t,e,n=!1){return Ms((()=>{if(n)e=Xi(e);else{const t=di(e,e.shape.length-1,!0);e=Br(e,t)}return e=kr(e,zh(),1-zh()),ki(di(ai(t.toFloat(),li(e)),e.shape.length-1))}))}function op(t,e,n=!1){return Ms((()=>{const s=Xr(function(t){const e=[_c(t.shape)];return t.reshape(e)}(t)).toInt(),r=(e=kr(e,zh(),1-zh())).shape;return ap(Si(s,r[r.length-1]).reshape(r),e,n)}))}function lp(t,e){return Ms((()=>{let n;return n=kr(e,zh(),1-zh()),n=li(Br(n,ci(1,n))),xi(function(t,e){if(!ce(t.shape,e.shape))throw new Wh(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Ms((()=>{const n=e.relu(),s=e.abs().neg();return n.sub(e.mul(t)).add(s.exp().log1p())}))}(t,n),-1)}))}function up(t,e){return Ms((()=>{const n=np(t,-1),s=np(e,-1),r=ai(n,s);return ki(di(r,-1))}))}Qd.constructors={};const hp={meanSquaredError:sp,meanAbsoluteError:rp,meanAbsolutePercentageError:ip,meanSquaredLogarithmicError:function(t,e){return Ms((()=>{const n=kr(e,zh(),Number.MAX_VALUE),s=li(Gs(1,n)),r=kr(t,zh(),Number.MAX_VALUE),i=li(Gs(1,r));return xi(Yc(ci(s,i)),-1)}))},squaredHinge:function(t,e){return Ms((()=>{const n=ii(0,ci(1,ai(t,e)));return xi(Yc(n),-1)}))},hinge:function(t,e){return Ms((()=>{const n=ii(0,ci(1,ai(t,e)));return xi(n,-1)}))},categoricalHinge:function(t,e){return Ms((()=>{const n=di(ai(t,e),-1),s=hi(ai(ci(1,t),e),-1);return ii(0,Gs(1,ci(s,n)))}))},logcosh:function(t,e){return Ms((()=>{const n=Math.log(2),s=ci(e,t),r=ci(Gs(s,Yi(ai(-2,s))),n);return xi(r,-1)}))},categoricalCrossentropy:ap,sparseCategoricalCrossentropy:op,binaryCrossentropy:lp,kullbackLeiblerDivergence:function(t,e){return Ms((()=>{const n=kr(t,zh(),1),s=kr(e,zh(),1);return di(ai(t,li(Br(n,s))),-1)}))},poisson:function(t,e){return Ms((()=>{const n=li(Gs(zh(),e));return xi(ci(e,ai(t,n)),-1)}))},cosineProximity:up};function cp(t){if("string"==typeof t){if(t in hp)return hp[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Wh(e)}return t}function dp(t,e){return Ms((()=>{const n=ai(.5,Ai(e)),s=Bc(ni(e,n),t.dtype);return xi(Gr(t,s),-1)}))}function pp(t,e){return Ms((()=>Bc(Gr(sr(t,-1),sr(e,-1)),"float32")))}function fp(t,e){return lp(t,e)}function gp(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),Gr(t,e).asType("float32")}const mp=ap,yp=op,bp={binaryAccuracy:dp,categoricalAccuracy:pp,precision:function(t,e){return Ms((()=>{const n=function(t,e){return Ms((()=>fi(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),s=function(t,e){return Ms((()=>fi(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),r=n.add(s);return la(ni(r,0),n.div(r),0).cast("float32")}))},categoricalCrossentropy:mp,sparseCategoricalCrossentropy:yp,mse:sp,MSE:sp,mae:rp,MAE:rp,mape:ip,MAPE:ip,cosine:up};function xp(t){if("string"==typeof t&&t in bp)return bp[t];if("string"!=typeof t&&null!=t)return t;throw new Wh(`Unknown metric ${t}`)}function wp(t){if(jh(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(hp))if(hp[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(bp))if(bp[n]===t){e=n;break}return void 0!==e?e:t.name}}function vp(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Cp(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Cp(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Cp(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Cp(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function $p(t,e,n=console.log){let s="";for(let n=0;n<t.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=t[n],s=s.slice(0,e[n]),s+=" ".repeat(e[n]-s.length);n(s)}function kp(t,e,n){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}$p([`${t.name} (${t.getClassName()})`,s,t.countParams().toString()],e,n)}function Ip(t,e,n,s){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}const i=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,s=e.nodeIndices[t],r=e.tensorIndices[t];i.push(`${n}[${s}][${r}]`)}const a=t.name,o=t.getClassName(),l=0===i.length?"":i[0];$p([`${a} (${o})`,r,t.countParams().toString(),l],e,s);for(let t=1;t<i.length;++t)$p(["","","",i[t]],e,s)}function Sp(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Ep(t,e){if(null===t)return null;if("string"==typeof t)return Jh(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];Sp(e,r,s)?n.push(s):n.push(Ep(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];if("name"===n&&"string"==typeof s)e[n]=s;else{const t=Jh(n);e[t]=Ep(s,t)}}return e}}function Rp(t,e){if(null==t)return null;if("string"==typeof t)return Yh(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];Sp(e,r,s)?n.push(s):n.push(Rp(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];e[Yh(n)]="name"!==n&&"className"!==n||"string"!=typeof s?Rp(s,n):s}return e}}const Ap="2.4.0";class Np{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Np)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Wh(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return as(e,t.dtype)}catch(n){throw new Wh(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ld){if(null==this.id2Value[t.id])throw new Wh(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Wh(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Ld){if(null==this.id2Value[t.id])throw new Wh(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Wh(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Ls(this.id2Mask)}}const Tp={},Dp={};function Fp(t,e,n,s){const r=null!=n&&n.training,i=Array.isArray(t),a=i?t:[t],o=a.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=o.join(",")+"|"+e.names().join(",");let c,d;if(null==Tp[h]){const t=function(t,e){ae(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===t.length){const r=Op(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of t){const{sorted:t,recipientMap:a}=Op(i,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const t in a)null==s[t]&&(s[t]=new Set),a[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:_p(s)}}(a,e);c=t.sorted,d=t.recipientCounts,Tp[h]=c,Dp[h]=d}c=Tp[h],d={},r||Object.assign(d,Dp[h]);const p=new Np(e);for(let t=0;t<c.length;++t){if(null!=s){const t=Os().numTensors;t>s.maxNumTensors&&(s.maxNumTensors=t),t<s.minNumTensors&&(s.minNumTensors=t)}const i=c[t],a=i.sourceLayer;if(a instanceof Vd)continue;const u=[],h=[],f=[];let g=!1;for(const t of i.inputs){const n=p.getValue(t),s=p.getMask(t);u.push(n),h.push(s),null!=s&&(g=!0),r||(d[t.name]--,0!==d[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=h[0]);const m=Xh(a.apply(u,n));let y=null;a.supportsMasking&&(y=a.computeMask(u,h));const b=Mp(i),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],m[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=m[t])}r||Ls(f)}return p.disposeMasks(),i?l:l[0]}function _p(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Op(t,e){const n=new Set,s=[],r={};for(const t of e.names())n.add(t);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),s.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:s,recipientMap:r}}function Mp(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const s of t.sourceLayer.inboundNodes[e].outputTensors)if(s.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class Lp extends Wd{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Sd(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],sc(this.inputs).length!==this.inputs.length)throw new Wh(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);sc(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;jh(0===n,"input layer has >1 nodes"),jh(0===s,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Vd))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},s={},r={},i={},a=[],o=(t,e,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=t.sourceLayer,r=t.nodeIndex,l=t.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new Ph(`The tensor ${t.name} at layer "${s.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(Lp.nodeKey(s,r)),s.id in i||(i[s.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const h=u.inboundLayers.length;for(let t=0;t<h;t++){const s=u.inputTensors[t],r=u.inboundLayers[t],i=u.nodeIndices[t],a=u.tensorIndices[t];o(s,e,n,r,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const h=a.slice().reverse();for(const t of h){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const a=null==s[t.outboundLayer.id]?0:s[t.outboundLayer.id];i=Math.max(i,a),s[t.outboundLayer.id]=i,r[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let s=0;s<t.inboundLayers.length;s++){const r=t.inboundLayers[s],a=t.nodeIndices[s],o=r.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(i+1,l),n[o.id]=o}}const c={};for(const t in e){const s=e[t];s in c||(c[s]=[]),c[s].push(n[t])}const d={};for(const t in s){const e=s[t];e in d||(d[e]=[]),d[e].push(r[t])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(nc);this.layers=[];for(const t of p){const e=d[t];e.sort(((t,e)=>{const n=i[t.id],s=i[e.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof Lp&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(c).map((t=>parseInt(t,10))).sort(nc);const f=this.inputs.slice(),g=[];for(const t of p)for(const e of c[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ph(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${g}`);for(const t of e.outputTensors)f.push(t);g.push(t.name)}}this.nodesByDepth=c;const m=this.layers.map((t=>t.name));for(const t of m){const e=m.filter((e=>e===t)).length;if(1!==e)throw new Ph(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Bd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Wh("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let s=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new Wh(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,s++}const r=[];for(const s in t){let i=s;if(null==n[s]){const t=s.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])r.push([n[i],t[s]]);else if(e)throw new Wh(`Provided weight data has no target variable: ${s}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Wh(`${t.length} of ${s} weights are not set: ${t}`)}Od(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${Ap}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Rp(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Ms((()=>{t=Xh(t);const n=new Np;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Fp(this.outputs,n,e)}))}computeMask(t,e){return Ms((()=>{let n;return t=Xh(t),n=null==e?Hh(null,t.length):Xh(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Rd(t);if(e.length!==this.inputLayers.length)throw new Wh(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const s=this.inputLayers[t],r=e[t];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(nc);if(s.length>1)for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const s=[];for(let e=0;e<t.inboundLayers.length;e++){const r=t.inboundLayers[e],i=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${r.name}_${i}_${a}`];s.push(o)}const r=Rd(e.computeOutputShape(Kh(s))),i=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++)n[`${e.name}_${i}_${t}`]=r[t]}}const r=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],s=this.outputLayersTensorIndices[t],r=`${e.name}_${n}_${s}`;i.push(r)}for(let t=0;t<i.length;t++){const e=i[t];jh(e in n),r.push(n[e])}return Kh(r)}runInternalGraph(t,e){null==e&&(e=Hh(null,t.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],i=t[s],a=e[s];n[r.id]=[i,a]}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(nc);for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,i=new Array;for(const t of s)t.id in n&&i.push(n[t.id]);if(i.length===s.length){let s,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=Xh(e.call(t,u)),l=Xh(e.computeMask(t,n)),s=[t],a=[n]}else s=i.map((t=>t[0])),a=i.map((t=>t[1])),null==u.mask&&(u.mask=a),o=Xh(e.call(s,u)),l=Xh(e.computeMask(s,a));if(e.activityRegularizer)throw new Uh("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],s=o[t],i=l[t];n[e.id]=[s,i]}}}}const r=[],i=[],a=[];for(const t of this.outputs){jh(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,s]=n[t.id];a.push(e.shape),r.push(e),i.push(s)}return[r,i,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Lp?1:0;for(let s=0;s<t.inboundNodes.length;s++){const r=Lp.nodeKey(t,s);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Wh(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Wh("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new Wh(`No such layer: ${t}`)}calculateLosses(){return Ms((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const s=Lp.nodeKey(e,n);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const s=t.getClassName(),r=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const s=t.inboundNodes[n],r=Lp.nodeKey(t,n);let a={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),a=s.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(s.inboundLayers.length>0){const t=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],i=s.nodeIndices[n],o=s.tensorIndices[n];let l=e[Lp.nodeKey(r,i)];null==l&&(l=0),t.push([r.name,l,o,a])}i.push(t)}}}const a={};a.name=t.name,a.className=s,a.config=r,a.inboundNodes=i,n.push(a)}t.layers=n;const s=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],r=this.inputLayersNodeIndices[t],i=Lp.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];s.push([n.name,a,o])}t.inputLayers=s;const r=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],s=this.outputLayersNodeIndices[t],i=Lp.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];r.push([n.name,a,o])}return t.outputLayers=r,t}static fromConfig(t,e,n={},s=!1){const r={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let s;for(const i of e){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(t,e);const h=r[o];if(h.inboundNodes.length<=l)return void a(t,e);const c=h.inboundNodes[l];n.push(c.outputTensors[u])}n.length>0&&t.apply(Kh(n),s)}function l(t){const n=t.name,i=ep(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(s),r[n]=i,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Wh(`Corrupted configuration, expected array for nodeData: ${t}`);a(i,t)}))}const u=e.name,h=e.layers;for(const t of h)l(t);for(;!rc(i);)for(const t of h){const e=r[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const c=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],s=t[2];jh(e in r);const i=r[e].inboundNodes[n].outputTensors;c.push(i[s])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],s=t[2];jh(e in r);const i=r[e].inboundNodes[n].outputTensors;d.push(i[s])}return new t({inputs:c,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Wh("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Ms((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function zp(t,e){return function(t,e,n){const s=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===s)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function Bp(t,e,n,s){if(null!=e||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Ms((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await e.data());Ls(e);const r=[];return s.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);r.push(n[t])})),Li(r,"float32")}return null}function Pp(t,e){return ai(t,e)}function Wp(t,e){let n,s;const r=e;n=r.xs,s=r.ys,ae(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const i=Up("input",t.inputNames,n),a=Up("output",t.outputNames,s),o=i[0].shape[0];ae(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),ae(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<i.length;e++)ae(i[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)ae(a[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:i,ys:a}}function Up(t,e,n){if(n instanceof Ze)return[n];if(Array.isArray(n))return ae(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const s=[];for(const r of e){if(null==n[r])throw new Wh(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(n[r])}return s}}function Vp(t){return"function"==typeof t.iterator}function Gp(t){ae(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function Hp(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Wc(t,e,n-e))):Wc(t,e,n-e)}function jp(t,e){return Ms((()=>null==t?null:Array.isArray(t)?t.map((t=>jp(t,e))):Xc(t,"int32"===e.dtype?e:e.toInt())))}function qp(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function Kp(t){const e=[];t instanceof Ze&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(1===s.rank)e.push(Pc(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Xp(t,e){if(null==t)return;const n=[];if(e instanceof Ze)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const s=e[t];n.push(s.id)}const s=[];if(t instanceof Ze)-1===n.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&s.push(t)}));else if(null!=t)for(const e in t){const r=t[e];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((t=>{t.isDisposed||t.dispose()}))}function Yp(t){return Array.isArray(t)}function Jp(t){return!function(t){return t instanceof Ze}(t)&&!Yp(t)}function Zp(t,e,n,s=!0,r=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Yp(t)&&t.length>0)e=!0;else if(Jp(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Wh(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let i;if(Jp(t)){i=[];for(const n of e){if(null==t[n])throw new Wh(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(Yp(t)){if(t.length!==e.length)throw new Wh(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(e.length>1)throw new Wh(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=Kp(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new Wh(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${a.shape}`);for(let i=0;i<n[t].length;++i){if(0===i&&!s)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l>=0&&o!==l)throw new Wh(`Error when checking ${r}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${a.shape}].`)}}return i}function Qp(t,e,n,s=!0,r=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new Wh(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new Wh(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new Wh(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[t].length;++i){if(0===i&&!s)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l!==o)throw new Wh(`Error when checking ${r}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class tf extends Lp{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Wh("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,s=console.log){const r=function(t){let e=!0;const n=[],s=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}s.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Output shape","Param #"];let a;if(r?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!r){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}s("_".repeat(e)),$p(i,n,s),s("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)r?kp(o[t],n,s):Ip(o[t],n,a,s),s((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?Td(t.collectedTrainableWeights):Td(t.trainableWeights),e}(t),u=Td(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>uo.adagrad(.01),Adadelta:()=>uo.adadelta(1,.95,zh()),Adam:()=>uo.adam(.001,.9,.999,zh()),Adamax:()=>uo.adamax(.002,.9,.999,zh(),0),RMSProp:()=>uo.rmsprop(.001,.9,0,zh()),SGD:()=>uo.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Wh(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Us))throw new Wh("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Wh(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>cp(t)))}else{const n=cp(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Wh(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(cp(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ac("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const s=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const s of e){let e=n.hasOwnProperty(s)?n[s]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Ac("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,s,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===lp?-1!==["accuracy","acc"].indexOf(a)?s=dp:-1!==["crossentropy","ce"].indexOf(a)&&(s=fp):this.lossFunctions[t]===op?-1!==["accuracy","acc"].indexOf(a)?s=gp:-1!==["crossentropy","ce"].indexOf(a)&&(s=yp):-1!==["accuracy","acc"].indexOf(a)?s=pp:-1!==["crossentropy","ce"].indexOf(a)&&(s=mp),-1!==["accuracy","acc"].indexOf(a)?r="acc":-1!==["crossentropy","ce"].indexOf(a)&&(r="ce"),i=s,n=""+r}else{const t=xp(a);i=t,n=""+wp(a)}let e;Ac(n,(()=>{e=i})),r(t,n,e)}})(s[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const s=null==n.batchSize?32:n.batchSize;Gp(s);const r=this.standardizeUserDataXY(t,e,!0,s);try{const i=r[0].concat(r[1]);this.makeTestFunction();const a=this.testFunction;return Kh(this.testLoop(a,i,s,n.verbose,n.steps))}finally{Xp(r[0],t),Xp(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const s=null!=(n=n||{}).batches,r=t.testFunction;let i=[];if(n.verbose>0)throw new Uh("Verbose mode is not implemented yet.");ae(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!s||l<n.batches;){const e=await a.next();if(i=Ms((()=>{if(e.value){const{xs:n,ys:s}=Wp(t,e.value),a=n.concat(s),u=Ms((()=>r(a)));if(Ls(a),0===l)for(let t=0;t<u.length;++t)i.push(Ws(0));const h=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=Ms((()=>Gs(i[t],ai(h,e)))),l>0&&Ls(n)}Ls(u),o+=h,++l}return i})),e.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=Br(i[t],o),Ls(e)}return Kh(i)}(this,t,e)}checkNumSamples(t,e,n,s="steps"){let r;if(null!=n){if(r=null,null!=e)throw new Wh(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new Wh(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Wh("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),s=n?e:[e],r=this.retrieveSymbolicTensors(s),i=new Np;if(t instanceof Ze&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Wh(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new Wh(`No value is provided for the model's input ${e.name}`);i.add(e,n)}const a=Fp(r,i);return n?a:a[0]}retrieveSymbolicTensors(t){const e=Hh(null,t.length);let n=t.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],i=r.map((t=>t.name));for(let s=0;s<t.length;++s){const a=i.indexOf(t[s]);if(-1!==a&&(e[s]=r[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,s)=>{null==e&&n.push(t[s])})),new Wh(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return Ms((()=>{const s=this.checkNumSamples(t);if(n)throw new Uh("Verbose predictLoop() is not implemented yet.");const r=qp(s,e),i=this.outputs.map((t=>[]));for(let e=0;e<r.length;++e)Ms((()=>{const n=r[e][0],s=r[e][1],i=Hp(t,n,s),a=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)a.push({key:this.inputs[t],value:i[t]});else a.push({key:this.inputs[0],value:i});const o=new Np(a);return Fp(this.outputs,o)})).forEach(((t,e)=>i[e].push(t)));return Kh(i.map((t=>Er(t,0))))}))}predict(t,e={}){const n=Kp(t);Qp(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==e.batchSize?32:e.batchSize;return Gp(s),this.predictLoop(n,s)}finally{Xp(n,t)}}predictOnBatch(t){Qp(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,s){if(null==this.optimizer_)throw new Ph("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===op?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(t,e,n){const s=sc(t.map((t=>t.shape[0])));s.sort();const r=sc(e.map((t=>t.shape[0])));if(r.sort(),s.length>1)throw new Wh(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(r.length>1)throw new Wh(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(s.length>0&&r.length>0&&!ce(s,r))throw new Wh(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(t=Zp(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Zp(e,this.feedOutputNames,r,!1,"target")),function(t,e,n){const s=[sp,lp,ap];for(let r=0;r<t.length;++r){const i=t[r],a=e[r],o=n[r];if(null!=a){if(a===ap&&1===i.shape[i.shape.length-1])throw new Wh(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const s=t[n],r=e[n];if(null!=r&&s!==r)throw new Wh(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&t[0].shape[0]%s!=0)throw new Wh(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,s,r=!0,i){const[a,o]=this.standardizeUserDataXY(t,e,r,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const t=zp(s,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await Bp(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,s=0,r){return Ms((()=>{const i=this.checkNumSamples(e,n,r,"steps"),a=[];if(s>0)throw new Uh("Verbose mode is not implemented yet.");if(null!=r)throw new Uh("steps mode in testLoop() is not implemented yet");{const s=qp(i,n),r=Li(zc(0,i));for(let n=0;n<s.length;++n){const i=s[n][0],o=s[n][1],l=Wc(r,i,o-i),u=jp(e,l),h=t(u);if(0===n)for(let t=0;t<h.length;++t)a.push(Ws(0));for(let t=0;t<h.length;++t){const e=h[t];a[t]=Gs(a[t],ai(o-i,e))}}for(let t=0;t<a.length;++t)a[t]=Br(a[t],i)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const s=t[n];let r=s;qh(t,s)>1&&(r+=`_${qh(t.slice(0,n),s)}`),e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new Np(t),o=Fp(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(s[t],o[t]);null!=r[t]&&(n=Pp(n,r[t]));const i=xi(n);e.push(i),l=0===t?n:Gs(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],r=this.metricsTensors[t][1];n=xi(e(s[r],o[r]))}zs(n),i.push(n)}return l=xi(l),this.calculateLosses().forEach((t=>{l=Gs(l,t)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>Ms((()=>{const e=[];let n;const s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:s[t]});const a=new Np(i),o=Fp(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const s=this.lossFunctions[t],i=xi(s(r[t],o[t]));n=0===t?i:Gs(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],s=this.metricsTensors[t][1],i=xi(n(r[s],o[s]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,s={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,i,a,o,l,u,h;t.isTraining=!0;try{const c=null==s.batchSize?32:s.batchSize;Gp(c);const d=!1,p=await t.standardizeUserData(e,n,s.sampleWeight,s.classWeight,d,c);r=p[0],i=p[1],h=p[2];let f,g=!1;if(null!=s.validationData&&s.validationData.length>0){if(g=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Uh("validationData including sample weights is not supported yet."):new Wh(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);a=s.validationData[0],o=s.validationData[1];const e=!0,n=await t.standardizeUserData(a,o,null,null,e,c);l=n[0],u=n[1],f=l.concat(u)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){g=!0;const t=Math.floor(r[0].shape[0]*(1-s.validationSplit)),e=r[0].shape[0];l=Hp(r,t,e),r=Hp(r,0,t),u=Hp(i,t,e),i=Hp(i,0,t),f=l.concat(u)}else null!=s.validationSteps&&(g=!0);const m=r.concat(i).concat(h);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let x,w;g?(t.makeTestFunction(),x=t.testFunction,w=b.slice().concat(b.map((t=>"val_"+t)))):(x=null,f=[],w=b.slice());const v=Zd(s.callbacks,s.yieldEvery),C=await async function(t,e,n,s,r,i,a,o,l,u,h,c,d,p,f){null==r&&(r=32),null==i&&(i=1),null==h&&(h=!0),null==d&&(d=0);let g=!1;null!=l&&null!=u&&(g=!0);const m=t.checkNumSamples(n,r,p,"steps_per_epoch");let y;null!=m&&(y=zc(0,m)),null==a&&(a=1);const{callbackList:b,history:x}=tp(o,a,i,d,m,p,r,g,c);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let a=d;a<i;++a){await b.onEpochBegin(a);const i={};{if("batch"===h)throw new Uh("batch shuffling is not implemneted yet");h&&se(y);const a=Li(y),o=qp(m,r);for(let h=0;h<o.length;++h){const c={};if(await b.onBatchBegin(h,c),Ms((()=>{const d=o[h][0],p=o[h][1],f=Wc(a,d,p-d);c.batch=h,c.size=p-d;const m=jp(n,f),y=e(m);for(let t=0;t<s.length;++t){const e=s[t],n=y[t];c[e]=n,zs(n)}if(h===o.length-1&&g){const e=t.testLoop(l,u,r);for(let t=0;t<s.length;++t){const n=s[t],r=e[t];zs(r),i["val_"+n]=r}}})),await b.onBatchEnd(h,c),Hd(c),t.stopTraining_)break}a.dispose()}if(await b.onEpochEnd(a,i),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,m,b,c,s.epochs,s.verbose,v,x,f,s.shuffle,w,s.initialEpoch,null);return C}finally{t.isTraining=!1,Xp(r,e),Xp(i,n),Xp(l,a),Xp(u,o),null!=h&&Ls(h)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const s=null!=n.batchesPerEpoch;if(ae(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ae(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ae(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ae(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ae(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=n.validationData;let i,a;if(r)if(Vp(n.validationData))ae(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new Uh("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const h=Zd(n.callbacks,n.yieldEvery),c=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=tp(h,c,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,r,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let h=0,c=0;for(s||(g=await e.iterator());!s||h<n.batchesPerEpoch;){const e=await g.next();if(s&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:s,ys:r}=Wp(t,e.value),i={};i.batch=c,i.size=s[0].shape[0],await d.onBatchBegin(c,i);const a=[];if(null!=n.classWeight){const e=zp(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await Bp(r[t],null,e[t]))}const u=s.concat(r).concat(a),p=o(u);Ls(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];i[e]=n,zs(n)}await d.onBatchEnd(c,i),Hd(i),c++,h++}if(s?h>=n.batchesPerEpoch:e.done){if(r){let e;e=Vp(n.validationData)?Xh(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Xh(t.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),s=n[0],r=n[1],i=this.makeTrainFunction()(s.concat(r)),a=[];for(const t of i){const e=await t.data();a.push(e[0])}return Ls(i),Kh(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let t=0;t<s.length;++t)n&&!s[t].trainable||e.push({name:s[t].originalName,tensor:r[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Os().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Os().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Yh(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Yh(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const s of e){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");t[s]=Yh(n[s])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Yh(wp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Yh(wp(t))));{const t={};for(const e in this.metrics)t[e]=Yh(wp(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=ep(Ep(t.optimizer_config));let n,s;if("string"==typeof t.loss)n=Jh(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Jh(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Jh(t.loss[e])}if(Array.isArray(t.metrics))s=t.metrics.map((t=>Jh(t)));else if(null!=t.metrics){s={};for(const e in t.metrics)s[e]=Jh(t.metrics[e])}this.compile({loss:n,metrics:s,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,On.getSaveHandlers(n));if(0===e.length)throw new Wh(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Wh(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new Wh("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await An(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Ap}`,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await An(await this.optimizer.getWeights(),t);s.specs.push(...n),s.data=Fn([s.data,e])}if(null!=this.userDefinedMetadata){const t=!0;vp(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=s.data,r.weightSpecs=s.specs,t.save(r)}setUserDefinedMetadata(t){vp(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}tf.className="Model",Ds(tf);class ef extends tf{}ef.className="Functional",Ds(ef);class nf extends tf{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Sd("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Wh(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof nf||t instanceof tf;let n;if(e){if(n=t,1!==n.outputs.length)throw new Wh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Wh("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Wh("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Wh("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Vd({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Wh(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Wh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Ud(this.outputs[0])}this.inboundNodes=[],new Bd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Hh(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Nd(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new tf({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Ph("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Ph("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Ph("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Ph("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},s=!1){let r,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Wh("Legacy serialization format not supported yet.");r=e}else ae(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=e.layers,delete e.layers,i=e;const a=new t(i);if(!(a instanceof nf))throw new Uh(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const t of r){const e=ep(t,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new Wh("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Wh("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}nf.className="Sequential",Ds(nf);class sf extends Ns{getConfig(){return{}}}class rf extends sf{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Uh(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Pr(t)}(t,e)}}rf.className="elu",Ds(rf);class af extends sf{apply(t){return Wi(t)}}af.className="selu",Ds(af);class of extends sf{apply(t){return Bi(t)}}of.className="relu",Ds(of);class lf extends sf{apply(t){return Ms((()=>vi(6,Bi(t))))}}lf.className="relu6",Ds(lf);class uf extends sf{apply(t){return t}}uf.className="linear",Ds(uf);class hf extends sf{apply(t){return Vi(t)}}hf.className="sigmoid",Ds(hf);class cf extends sf{apply(t){return function(t){return Ms((()=>{const e=Gs(.5,ai(.2,t));return kr(e,0,1)}))}(t)}}cf.className="hardSigmoid",Ds(cf);class df extends sf{apply(t){return Yi(t)}}df.className="softplus",Ds(df);class pf extends sf{apply(t){return function(t){return Ms((()=>Br(t,Vs(t).add(1))))}(t)}}pf.className="softsign",Ds(pf);class ff extends sf{apply(t){return na(t)}}ff.className="tanh",Ds(ff);class gf extends sf{apply(t,e=-1){return Xi(t,e)}}gf.className="softmax",Ds(gf);class mf extends sf{apply(t,e=-1){return pi(t,e)}}function yf(t){return t.getClassName()}function bf(t,e={}){return ec(t,Ts.getMap().classNameMap,e,"activation")}function xf(t){if(null==t){return bf({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},bf(e)}return t instanceof sf?t:bf(t)}mf.className="logSoftmax",Ds(mf);class wf extends Ns{}class vf extends wf{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Ms((()=>{let e=yi([1]);return this.hasL1&&(e=Gs(e,di(ai(this.l1,Vs(t))))),this.hasL2&&(e=Gs(e,di(ai(this.l2,Yc(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}vf.className="L1L2",Ds(vf);const Cf={l1l2:"L1L2"};function $f(t){return Qh(t)}function kf(t,e={}){return ec(t,Ts.getMap().classNameMap,e,"regularizer")}function If(t){return null==t?null:"string"==typeof t?kf({className:t in Cf?Cf[t]:t,config:{}}):t instanceof wf?t:kf(t)}class Sf extends Wd{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Ad(t);let n=Bi(t);return null!=this.maxValue&&(n=kr(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Sf.className="ReLU",Ds(Sf);class Ef extends Wd{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Ad(t);return oi(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Ef.className="LeakyReLU",Ds(Ef);class Rf extends Wd{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Cd(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=If(t.alphaRegularizer),this.alphaConstraint=xc(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Wh(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Nd(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new Md({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Ad(t),Ti(t,this.alpha.read())}getConfig(){const t={alphaInitializer:vd(this.alphaInitializer),alphaRegularizer:$f(this.alphaRegularizer),alphaConstraint:yc(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Rf.className="PReLU",Ds(Rf);class Af extends Wd{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Uh(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Ad(t);return Pr(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Af.className="ELU",Ds(Af);class Nf extends Wd{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Ad(t);return n.mul(Bc(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Nf.className="ThresholdedReLU",Ds(Nf);class Tf extends Wd{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new gf).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Ad(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Df(t,e,n){if("number"==typeof t)return Hh(t,e);if(t.length!==e)throw new Wh(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const i=t[r];if((s=i)!==parseInt(s.toString(),10))throw new Wh(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${i}`)}return t;var s}function Ff(t,e,n,s,r=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(r-1))+1,Math.floor((i+s-1)/s)}function _f(t,e,n,s){if(null==t)return null;if("valid"===s)t=t*e+Lc([n-e,0]);else{if("same"!==s)throw new Wh(`Unsupport padding mode: ${s}.`);t*=e}return t}function Of(t,e){return Ms((()=>(Ic(e),"channelsFirst"===e?tr(t,[0,2,3,1]):t)))}function Mf(t,e){return Ms((()=>(Ic(e),"channelsFirst"===e?tr(t,[0,2,3,4,1]):t)))}function Lf(t,e,n,s=[1,1],r="valid",i,a,o=null){return Ms((()=>{if(null==i&&(i="channelsLast"),Ic(i),3!==t.rank&&4!==t.rank)throw new Wh(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Wh(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=Of(t,i);if("causal"===r)throw new Uh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=va({x:l,filter:e,strides:s,pad:"same"===r?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=tr(l,[0,3,1,2])),l}))}Tf.className="Softmax",Ds(Tf);class zf extends Wd{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",zf.verifyArgs(e),this.rank=t,oc(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Uh(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Df(e.kernelSize,t,"kernelSize"),this.strides=Df(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Sc(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ic(this.dataFormat),this.activation=xf(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Cd(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=xc(e.biasConstraint),this.biasRegularizer=If(e.biasRegularizer),this.activityRegularizer=If(e.activityRegularizer),this.dilationRate=Df(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Wh(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Wh(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Wh(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(jh("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!ac(t.kernelSize,"number",1,3))throw new Wh(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:yf(this.activation),useBias:this.useBias,biasInitializer:vd(this.biasInitializer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),biasConstraint:yc(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Bf extends zf{constructor(t,e){super(t,e),this.kernel=null,Bf.verifyArgs(e),this.filters=e.filters,oc(this.filters,"filters"),this.kernelInitializer=Cd(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=xc(e.kernelConstraint),this.kernelRegularizer=If(e.kernelRegularizer)}build(t){t=Nd(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Wh(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Ms((()=>{let e;t=Ad(t);const n=null==this.bias?null:this.bias.read(),s=uc(this.activation.getClassName());if(null!=s&&2===this.rank)e=Lf(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)e=function(t,e,n,s=1,r="valid",i,a=1){return Ms((()=>{if(null==i&&(i="channelsLast"),Ic(i),3!==t.shape.length)throw new Wh(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new Wh(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Wh(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=tr(t,[0,2,1])),"causal"===r)throw new Uh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Fr(t,e,s,"same"===r?"same":"valid","NWC",a);return null!=n&&(o=Zc(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Lf(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Uh("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,s=[1,1,1],r="valid",i,a){return Ms((()=>{if(null==i&&(i="channelsLast"),Ic(i),4!==t.rank&&5!==t.rank)throw new Wh(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new Wh(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=Mf(t,i);if("causal"===r)throw new Uh("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Mr(o,e,s,"same"===r?"same":"valid","NDHWC",a),null!=n&&(o=Zc(o,n)),"channelsFirst"===i&&(o=tr(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Nd(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const s=Ff(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(s)}let s=[t[0]];return"channelsLast"===this.dataFormat?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){const t={filters:this.filters,kernelInitializer:vd(this.kernelInitializer),kernelRegularizer:$f(this.kernelRegularizer),kernelConstraint:yc(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Wh(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Pf extends Bf{constructor(t){super(2,t),Pf.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!ac(t.kernelSize,"number",1,2))throw new Wh(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Pf.className="Conv2D",Ds(Pf);class Wf extends Bf{constructor(t){super(3,t),Wf.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Wh(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Wf.className="Conv3D",Ds(Wf);class Uf extends Pf{constructor(t){if(super(t),this.inputSpec=[new Md({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Wh(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Nd(t)).length)throw new Wh("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Wh("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Md({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Ms((()=>{let e=Ad(t);if(4!==e.shape.length)throw new Wh(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,s=n[0];let r,i;"channelsFirst"===this.dataFormat?(r=2,i=3):(r=1,i=2);const a=n[r],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],c=this.strides[1],d=[s,_f(a,h,l,this.padding),_f(o,c,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=tr(e,[0,2,3,1]));let p=Or(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=tr(p,[0,3,1,2])),null!=this.bias&&(p=Zc(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=Nd(t)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[s]=_f(e[s],o,i,this.padding),e[r]=_f(e[r],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Uf.className="Conv2DTranspose",Ds(Uf);class Vf extends Bf{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Wh("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Wh("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Wh(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Cd(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=If(e.depthwiseRegularizer),this.depthwiseConstraint=xc(e.depthwiseConstraint),this.pointwiseInitializer=Cd(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=If(e.pointwiseRegularizer),this.pointwiseConstraint=xc(e.pointwiseConstraint)}build(t){if((t=Nd(t)).length<this.rank+2)throw new Wh(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Wh(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let t=0;t<this.rank;++t)r.push(1);r.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Md({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Ms((()=>{let e;if(t=Ad(t),1===this.rank)throw new Uh("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=tr(t,[0,2,3,1])),e=Ui(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Zc(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=tr(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=vd(this.depthwiseInitializer),t.pointwiseInitializer=vd(this.pointwiseInitializer),t.depthwiseRegularizer=$f(this.depthwiseRegularizer),t.pointwiseRegularizer=$f(this.pointwiseRegularizer),t.depthwiseConstraint=yc(this.depthwiseConstraint),t.pointwiseConstraint=yc(this.pointwiseConstraint),t}}Vf.className="SeparableConv";class Gf extends Vf{constructor(t){super(2,t)}}Gf.className="SeparableConv2D",Ds(Gf);class Hf extends Bf{constructor(t){super(1,t),Hf.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!ac(t.kernelSize,"number",1,1))throw new Wh(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Hf.className="Conv1D",Ds(Hf);class jf extends Wd{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Ms((()=>{if(t=Ad(t),"channelsLast"===this.dataFormat){const e=Vc(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Vc(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Vc(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Vc(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}jf.className="Cropping2D",Ds(jf);class qf extends Wd{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Ms((()=>{let e=Ad(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=tr(e,[0,2,3,1]);const t=this.size[0]*n[2],s=this.size[1]*n[3],r=e.resizeNearestNeighbor([t,s]);return tr(r,[0,3,1,2])}{const t=this.size[0]*n[1],s=this.size[1]*n[2];return e.resizeNearestNeighbor([t,s])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}qf.className="UpSampling2D",Ds(qf);class Kf extends zf{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Cd(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=xc(t.depthwiseConstraint),this.depthwiseRegularizer=If(t.depthwiseRegularizer)}build(t){if((t=Nd(t)).length<4)throw new Wh(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Wh(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Ms((()=>{let e=function(t,e,n=[1,1],s="valid",r,i){return Ms((()=>{null==r&&(r="channelsLast"),Ic(r);let a=Of(t,r);if(4!==t.rank)throw new Wh(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new Wh(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Lr(a,e,n,"same"===s?"same":"valid","NHWC",i),"channelsFirst"===r&&(a=tr(a,[0,3,1,2])),a}))}(t=Ad(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Zc(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Nd(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Ff(e,this.kernelSize[0],this.padding,this.strides[0]),i=Ff(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],s,r,i]:[t[0],r,i,s]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=vd(this.depthwiseInitializer),t.depthwiseRegularizer=$f(this.depthwiseRegularizer),t.depthwiseConstraint=yc(this.depthwiseRegularizer),t}}function Xf(t,e,n,s){if(Array.isArray(t)){if(null!=e||null!=n)throw new Wh("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function Yf(t,e,n,s=!1,r,i,a=!1,o=!1){return Ms((()=>{const l=e.shape.length;if(l<3)throw new Wh(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(zc(2,l));if(e=tr(e,u),null!=i)throw new Uh("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=r.asType("bool").asType("float32")).rank===l-1&&(r=Hr(r,-1)),r=tr(r,u)),s&&(e=Pi(e,0),null!=r&&(r=Pi(r,0)));const h=[];let c,d=n;const p=e.shape[0],f=aa(e);let g,m;null!=r&&(g=aa(r));for(let e=0;e<p;++e){const n=f[e],s=Ms((()=>t(n,d)));if(null==r)c=s[0],d=s[1];else{const t=Ms((()=>{const t=g[e],n=Ai(t).sub(t);return{output:s[0].mul(t).add(d[0].mul(n)),newStates:d.map(((e,r)=>s[1][r].mul(t).add(e.mul(n))))}}));c=t.output,d=t.newStates}o&&h.push(c)}return o&&(m=ea(h,1)),[c,m,d]}))}Kf.className="DepthwiseConv2D",Ds(Kf);class Jf extends Wd{constructor(t){let e;if(super(t),null==t.cell)throw new Wh("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new ig({cells:t.cell}):t.cell,null==e.stateSize)throw new Wh("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Md({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?zc(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){Ed(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let s;if(s=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const s of e)n.push([t[0],s]);return[s].concat(n)}return s}computeMask(t,e){return Ms((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Uh("Constants support is not implemented in RNN yet.");Ed(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Md({shape:[e,null,...n]});const s=[t[0]].concat(t.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ce(this.stateSpec.map((t=>t.shape[t.shape.length-1])),r))throw new Wh(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((t=>new Md({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Ms((()=>{if(!this.stateful)throw new Bh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Wh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>yi([n,t]))):this.states_=[yi([n,this.cell.stateSize])];else if(null==t)Ls(this.states_),null!=this.keptStates&&(Ls(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>yi([n,t]))):this.states_[0]=yi([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Wh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Ls(this.states_);for(let e=0;e<this.states_.length;++e){const s=t[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,r];if(!ce(s.shape,i))throw new Wh(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[e]=s}}this.states_=this.states_.map((t=>zs(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=Xf(t,n,s,this.numConstants);t=r.inputs,n=r.initialState,s=r.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Md({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=s&&(e.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof Ld){const n=[t].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return Ms((()=>{const n=null==e?null:e.mask,s=null==e?null:e.training;let r=null==e?null:e.initialState;t=Ad(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new Wh(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:s},o=Yf(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,s);const c=this.returnSequences?u:l;return this.returnState?[c].concat(h):c}))}getInitialState(t){return Ms((()=>{let e=yi(t.shape);return e=di(e,[1,2]),e=Pc(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?jc(e,[1,t]):e)):this.cell.stateSize>1?[jc(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const e=this.cell.getConfig();t.cell={className:this.cell.getClassName(),config:e};const n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,e,n={}){const s=ep(e.cell,n);return new t(Object.assign(e,{cell:s}))}}Jf.className="RNN",Ds(Jf);class Zf extends Wd{}class Qf extends Zf{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,oc(this.units,"units"),this.activation=xf(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Cd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=If(t.kernelRegularizer),this.recurrentRegularizer=If(t.recurrentRegularizer),this.biasRegularizer=If(t.biasRegularizer),this.kernelConstraint=xc(t.kernelConstraint),this.recurrentConstraint=xc(t.recurrentConstraint),this.biasConstraint=xc(t.biasConstraint),this.dropout=Mc([1,Lc([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Mc([1,Lc([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Nd(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Ms((()=>{if(2!==t.length)throw new Wh(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const s=null!=e.training&&e.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ag({ones:()=>Ai(t),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ag({ones:()=>Ai(n),rate:this.recurrentDropout,training:s}));const i=this.dropoutMask,a=this.recurrentDropoutMask;r=Kc(null!=i?ai(t,i):t,this.kernel.read()),null!=this.bias&&(r=Zc(r,this.bias.read())),null!=a&&(n=ai(n,a));let o=Gs(r,Kc(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t={units:this.units,activation:yf(this.activation),useBias:this.useBias,kernelInitializer:vd(this.kernelInitializer),recurrentInitializer:vd(this.recurrentInitializer),biasInitializer:vd(this.biasInitializer),kernelRegularizer:$f(this.kernelRegularizer),recurrentRegularizer:$f(this.recurrentRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:yc(this.kernelConstraint),recurrentConstraint:yc(this.recurrentConstraint),biasConstraint:yc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return Object.assign(t,e),t}}Qf.className="SimpleRNNCell",Ds(Qf);class tg extends Jf{constructor(t){t.cell=new Qf(t),super(t)}call(t,e){return Ms((()=>{null!=this.cell.dropoutMask&&(Ls(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ls(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}get units(){return this.cell.units}get activation(){return this.cell.activation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}getConfig(){const t={units:this.units,activation:yf(this.activation),useBias:this.useBias,kernelInitializer:vd(this.kernelInitializer),recurrentInitializer:vd(this.recurrentInitializer),biasInitializer:vd(this.biasInitializer),kernelRegularizer:$f(this.kernelRegularizer),recurrentRegularizer:$f(this.recurrentRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:yc(this.kernelConstraint),recurrentConstraint:yc(this.recurrentConstraint),biasConstraint:yc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return new t(e)}}tg.className="SimpleRNN",Ds(tg);class eg extends Zf{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Wh("GRUCell does not support reset_after parameter set to true.");this.units=t.units,oc(this.units,"units"),this.activation=xf(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=xf(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Cd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=If(t.kernelRegularizer),this.recurrentRegularizer=If(t.recurrentRegularizer),this.biasRegularizer=If(t.biasRegularizer),this.kernelConstraint=xc(t.kernelConstraint),this.recurrentConstraint=xc(t.recurrentConstraint),this.biasConstraint=xc(t.biasConstraint),this.dropout=Mc([1,Lc([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Mc([1,Lc([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Nd(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Ms((()=>{if(2!==t.length)throw new Wh(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ag({ones:()=>Ai(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ag({ones:()=>Ai(s),rate:this.recurrentDropout,training:n,count:3}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=ai(t,r[0]));let u=Kc(t,this.kernel.read());this.useBias&&(u=Zc(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ai(s,i[0]));const h=this.recurrentKernel.read(),[c,d]=Zi(h,[2*this.units,this.units],h.rank-1),p=Kc(s,c),[f,g,m]=Zi(u,3,u.rank-1),[y,b]=Zi(p,2,p.rank-1);a=this.recurrentActivation.apply(Gs(f,y)),o=this.recurrentActivation.apply(Gs(g,b));const x=Kc(ai(o,s),d);l=this.activation.apply(Gs(m,x));const w=Gs(ai(a,s),ai(Gs(1,ki(a)),l));return[w,w]}))}getConfig(){const t={units:this.units,activation:yf(this.activation),recurrentActivation:yf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vd(this.kernelInitializer),recurrentInitializer:vd(this.recurrentInitializer),biasInitializer:vd(this.biasInitializer),kernelRegularizer:$f(this.kernelRegularizer),recurrentRegularizer:$f(this.recurrentRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:yc(this.kernelConstraint),recurrentConstraint:yc(this.recurrentConstraint),biasConstraint:yc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return Object.assign(t,e),t}}eg.className="GRUCell",Ds(eg);class ng extends Jf{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new eg(t),super(t)}call(t,e){return Ms((()=>{null!=this.cell.dropoutMask&&(Ls(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ls(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:yf(this.activation),recurrentActivation:yf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vd(this.kernelInitializer),recurrentInitializer:vd(this.recurrentInitializer),biasInitializer:vd(this.biasInitializer),kernelRegularizer:$f(this.kernelRegularizer),recurrentRegularizer:$f(this.recurrentRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:yc(this.kernelConstraint),recurrentConstraint:yc(this.recurrentConstraint),biasConstraint:yc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}ng.className="GRU",Ds(ng);class sg extends Zf{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,oc(this.units,"units"),this.activation=xf(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=xf(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Cd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=If(t.kernelRegularizer),this.recurrentRegularizer=If(t.recurrentRegularizer),this.biasRegularizer=If(t.biasRegularizer),this.kernelConstraint=xc(t.kernelConstraint),this.recurrentConstraint=xc(t.recurrentConstraint),this.biasConstraint=xc(t.biasConstraint),this.dropout=Mc([1,Lc([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Mc([1,Lc([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Nd(t))[t.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;s=new((e=class extends sd{apply(e,s){const r=t.apply([n]),i=(new id).apply([n]),a=t.apply([2*n]);return Hc(Hc(r,i),a)}}).className="CustomInit",e)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Ms((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new Wh(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ag({ones:()=>Ai(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ag({ones:()=>Ai(s),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,h;0<this.dropout&&this.dropout<1&&(t=ai(t,i[0]));let c=Kc(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ai(s,a[0])),c=Gs(c,Kc(s,this.recurrentKernel.read())),this.useBias&&(c=Zc(c,this.bias.read()));const[d,p,f,g]=Zi(c,4,c.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Gs(ai(l,r),ai(o,this.activation.apply(f))),h=this.recurrentActivation.apply(g);const m=ai(h,this.activation.apply(u));return[m,m,u]}))}getConfig(){const t={units:this.units,activation:yf(this.activation),recurrentActivation:yf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vd(this.kernelInitializer),recurrentInitializer:vd(this.recurrentInitializer),biasInitializer:vd(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:$f(this.kernelRegularizer),recurrentRegularizer:$f(this.recurrentRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:yc(this.kernelConstraint),recurrentConstraint:yc(this.recurrentConstraint),biasConstraint:yc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return Object.assign(t,e),t}}sg.className="LSTMCell",Ds(sg);class rg extends Jf{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new sg(t),super(t)}call(t,e){return Ms((()=>{null!=this.cell.dropoutMask&&(Ls(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ls(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get unitForgetBias(){return this.cell.unitForgetBias}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:yf(this.activation),recurrentActivation:yf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vd(this.kernelInitializer),recurrentInitializer:vd(this.recurrentInitializer),biasInitializer:vd(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:$f(this.kernelRegularizer),recurrentRegularizer:$f(this.recurrentRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:yc(this.kernelConstraint),recurrentConstraint:yc(this.recurrentConstraint),biasConstraint:yc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}rg.className="LSTM",Ds(rg);class ig extends Zf{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Ms((()=>{let n=t.slice(1);const s=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?s.push(n.splice(0,t.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=s[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),r.push(i.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;Ed(t)&&(t=t[0]),this.cells.forEach(((n,s)=>{Ac(`RNNCell_${s}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=[];for(const e of this.cells)t.push({className:e.getClassName(),config:e.getConfig()});const e={cells:t},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(t,e,n={}){const s=[];for(const t of e.cells)s.push(ep(t,n));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return _d(t)}setWeights(t){const e=[];for(const n of this.cells){const s=n.weights.length,r=t.splice(s);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}Od(e)}}function ag(t){const{ones:e,rate:n,training:s=!1,count:r=1}=t,i=()=>Qc(e(),n),a=()=>td(i,e,s);return!r||r<=1?zs(a().clone()):Array(r).fill(void 0).map(a).map((t=>zs(t.clone())))}ig.className="StackedRNNCells",Ds(ig);var og,lg,ug,hg,cg=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]])}return n};class dg extends Jf{constructor(t){if(t.unroll)throw new Uh("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Uh("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Md({ndim:5})]}call(t,e){return Ms((()=>{if(null!=this.cell.dropoutMask&&(Ls(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ls(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Wh("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Ms((()=>{const{stateSize:e}=this.cell,n=t.shape,s=this.computeSingleOutputShape(n),r=yi([s[0],...s.slice(2)]);return Array.isArray(e)?Array(e.length).fill(r):[r]}))}resetStates(t,e=!1){Ms((()=>{if(!this.stateful)throw new Bh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new Wh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>yi(r))):this.states_=[yi(r)];else if(null==t)Ls(this.states_),null!=this.keptStates&&(Ls(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>yi(r))):this.states_[0]=yi(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Wh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Ls(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],s=r;if(!ce(n.shape,s))throw new Wh(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>zs(t.clone())))}))}getConfig(){const t=super.getConfig(),{cell:e}=t,n=cg(t,["cell"]),s=this.cell.getConfig();return Object.assign({},s,n)}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:s,padding:r,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],h=Ff(l,s[0],r,i[0],a[0]),c=Ff(u,s[1],r,i[1],a[1]);return[...t.slice(0,2),...o?[n,h,c]:[h,c,n]]}}dg.className="ConvRNN2D";class pg extends sg{constructor(t){const{filters:e,kernelSize:n,strides:s,padding:r,dataFormat:i,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,oc(this.filters,"filters"),this.kernelSize=Df(n,2,"kernelSize"),this.kernelSize.map((t=>oc(t,"kernelSize"))),this.strides=Df(s||1,2,"strides"),this.strides.map((t=>oc(t,"strides"))),this.padding=r||"valid",Sc(this.padding),this.dataFormat=i||"channelsLast",Ic(this.dataFormat),this.dilationRate=Df(a||1,2,"dilationRate"),this.dilationRate.map((t=>oc(t,"dilationRate")))}build(t){var e;t=Nd(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Wh(`The channel dimension of the input should be defined. Found ${t[n]}`);const s=t[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;t=new((e=class extends sd{apply(t,e){return Gc([n.apply([s]),bi([s]),n.apply([2*s])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Ms((()=>{if(3!==t.length)throw new Wh(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,s=t[0],r=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ag({ones:()=>Ai(s),rate:this.dropout,training:n,count:4}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?ai(e[n],t):t;let l=o(s,a,0),u=o(s,a,1),h=o(s,a,2),c=o(s,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ag({ones:()=>Ai(r),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),g=o(r,d,2),m=o(r,d,3);const[y,b,x,w]=Zi(this.kernel.read(),4,3),[v,C,$,k]=this.useBias?Zi(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,C,this.padding),h=this.inputConv(h,x,$,this.padding),c=this.inputConv(c,w,k,this.padding);const[I,S,E,R]=Zi(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,I),f=this.recurrentConv(f,S),g=this.recurrentConv(g,E),m=this.recurrentConv(m,R);const A=this.recurrentActivation.apply(Gs(l,p)),N=this.recurrentActivation.apply(Gs(u,f)),T=Gs(ai(N,i),ai(A,this.activation.apply(Gs(h,g)))),D=ai(this.recurrentActivation.apply(Gs(c,m)),this.activation.apply(T));return[D,D,T]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=cg(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate};return Object.assign({},n,s)}inputConv(t,e,n,s){const r=Dr(t,e,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Zc(r,n,this.dataFormat):r}recurrentConv(t,e){return Dr(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}pg.className="ConvLSTM2DCell",Ds(pg);class fg extends dg{constructor(t){const e=new pg(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}fg.className="ConvLSTM2D",Ds(fg);class gg extends Wd{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Ms((()=>{this.invokeCallHook(t,e);const n=Ad(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,s=this.getNoiseShape(n);return td((()=>Qc(n,this.rate,s,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}gg.className="Dropout",Ds(gg);class mg extends gg{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}mg.className="SpatialDropout1D",Ds(mg);class yg extends Wd{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,oc(this.units,"units"),this.activation=xf(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Cd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Cd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=xc(t.kernelConstraint),this.biasConstraint=xc(t.biasConstraint),this.kernelRegularizer=If(t.kernelRegularizer),this.biasRegularizer=If(t.biasRegularizer),this.activityRegularizer=If(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Nd(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Nd(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Ms((()=>{this.invokeCallHook(t,e);const n=Ad(t),s=uc(this.activation.getClassName());let r;return null!=s?r=Kc(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Kc(n,this.kernel.read()),null!=this.bias&&(r=Zc(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const t={units:this.units,activation:yf(this.activation),useBias:this.useBias,kernelInitializer:vd(this.kernelInitializer),biasInitializer:vd(this.biasInitializer),kernelRegularizer:$f(this.kernelRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:yc(this.kernelConstraint),biasConstraint:yc(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}yg.className="Dense",Ds(yg);class bg extends Wd{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Nd(t);for(const e of t.slice(1))if(null==e)throw new Wh(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],_c(t,1)]}call(t,e){return Ms((()=>{this.invokeCallHook(t,e);let n=Ad(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new Wh(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],_c(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}bg.className="Flatten",Ds(bg);class xg extends Wd{constructor(t){super(t),this.supportsMasking=!0,this.activation=xf(t.activation)}call(t,e){return Ms((()=>{this.invokeCallHook(t,e);const n=Ad(t);return this.activation.apply(n)}))}getConfig(){const t={activation:yf(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}xg.className="Activation",Ds(xg);class wg extends Wd{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Ms((()=>{return t=Ad(t),e=t,n=this.n,Ms((()=>{if(2!==e.shape.length)throw new Wh(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return jc(Pc(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}wg.className="RepeatVector",Ds(wg);class vg extends Wd{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",s=e.slice();let r=1,i=null;for(let t=0;t<s.length;++t){const e=s[t];if(this.isUnknown(e)){if(null!==i)throw new Wh("Can only specifiy one unknown dimension.");i=t}else r*=e}const a=_c(t);if(null!==i){if(0===r||a%r!=0)throw new Wh(n);s[i]=a/r}else if(a!==r)throw new Wh(n);return s}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Ms((()=>{this.invokeCallHook(t,e);const n=Ad(t),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}vg.className="Reshape",Ds(vg);class Cg extends Wd{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=zc(1,t.dims.length+1);if(!ce(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Md({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Nd(t)).slice();return this.dims.forEach(((n,s)=>{e[s+1]=t[n]})),e}call(t,e){return tr(Ad(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Cg.className="Permute",Ds(Cg);class $g extends Wd{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Ad(t);return nr(Ii(n,this.maskValue),-1)}call(t,e){return Ms((()=>{this.invokeCallHook(t,e);const n=Ad(t),s=nr(Ii(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}$g.className="Masking",Ds($g);class kg extends Wd{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Xh(t.inputLength))}this.inputDim=t.inputDim,oc(this.inputDim,"inputDim"),this.outputDim=t.outputDim,oc(this.outputDim,"outputDim"),this.embeddingsInitializer=Cd(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=If(t.embeddingsRegularizer),this.activityRegularizer=If(t.activityRegularizer),this.embeddingsConstraint=xc(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Ms((()=>this.maskZero?(t=Ad(t),Ii(t,Ri(t))):null))}computeOutputShape(t){if(t=Nd(t),null==this.inputLength)return[...t,this.outputDim];const e=Xh(this.inputLength);if(e.length!==t.length-1)throw new Wh(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let s=0;s<e.length;++s){const r=e[s],i=t[s+1];if(null!=r&&null!=i&&r!==i)throw new Wh(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==r&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Ms((()=>{this.invokeCallHook(t,e);let n=Ad(t);return"int32"!==n.dtype&&(n=Bc(n,"int32")),Xc(this.embeddings.read(),n.as1D()).reshape(Nd(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:vd(this.embeddingsInitializer),embeddingsRegularizer:$f(this.embeddingsRegularizer),activityRegularizer:$f(this.activityRegularizer),embeddingsConstraint:yc(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}kg.className="Embedding",Ds(kg);class Ig extends Wd{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Uh}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){const r=t[t.length-e.length+s],i=e[s];if(null==r||null==i||r<0||i<0)n.push(null);else if(1===r)n.push(i);else if(1===i)n.push(r);else{if(r!==i)throw new Wh("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Nd(t)]),t.length<2)throw new Wh(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=sc(e),e.length>1)throw new Wh(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const s=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=t.map((t=>t.length));-1===t.indexOf(null)&&1===sc(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Ms((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const s=Lc(n);for(let n of t){const t=n.rank;for(let e=0;e<s-t;++e)n=Pc(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],i=t.slice(1).concat([r]);let a=s.reshape([r].concat(_c(t.slice(1))));a=tr(a,[1,0]),a=a.reshape(i),e.push(a),n=!0}else if(t>1){const r=zc(1,t).concat([0]);e.push(tr(s,r)),n=!0}else e.push(s)}let s=this.mergeFunction(e);const r=s.rank;if(n)if(null==r){const t=s.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));s=tr(s.reshape([-1,e]),[1,0]).reshape(n)}else if(r>1){const t=[r-1].concat(zc(0,r-1));s=tr(s,t)}return s}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const s=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=sc(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Ms((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Wh("`mask` should be an Array");if(!Array.isArray(t))throw new Wh("`inputs` should be an Array");if(e.length!==t.length)throw new Wh(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:Hr(t,0))))[0];for(let t=1;t<e.length-1;++t)n=fi(n,e[t]);return n}))}}class Sg extends Ig{constructor(t){super(t)}mergeFunction(t){return Ms((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Gs(e,t[n]);return e}))}}Sg.className="Add",Ds(Sg);class Eg extends Ig{constructor(t){super(t)}mergeFunction(t){return Ms((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ai(e,t[n]);return e}))}}Eg.className="Multiply",Ds(Eg);class Rg extends Ig{constructor(t){super(t)}mergeFunction(t){return Ms((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Gs(e,t[n]);return ai(1/t.length,e)}))}}Rg.className="Average",Ds(Rg);class Ag extends Ig{constructor(t){super(t)}mergeFunction(t){return Ms((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ii(e,t[n]);return e}))}}Ag.className="Maximum",Ds(Ag);class Ng extends Ig{constructor(t){super(t)}mergeFunction(t){return Ms((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=vi(e,t[n]);return e}))}}Ng.className="Minimum",Ds(Ng);class Tg extends Ig{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Wh("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const s=t[e].slice();s.splice(this.axis,1);let r=!1;for(const t of n)if(ce(t,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new Wh("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Ms((()=>Gc(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Wh("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[s]||null==t[s]){n[s]=null;break}n[s]+=t[s]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Wh("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Wh("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Wh(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Ms((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const s=[];for(let n=0;n<t.length;++n)null==e[n]?s.push(Ai(t[n]).asType("bool")):e[n].rank<t[n].rank?s.push(Hr(e[n],-1)):s.push(e[n]);const r=Er(s,this.axis);return er(r,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Dg(t,e){for(;t<0;)t+=e;return t}Tg.className="Concatenate",Ds(Tg);class Fg extends Ig{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){ae(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Uh("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);if(e[s[0]]!==n[s[1]])throw new Wh(`Dimension incompatibility: ${e[s[0]]} !== ${n[s[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Wh(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>Dg(e,t[n].shape.length))):[Dg(this.axes,n.shape.length),Dg(this.axes,s.shape.length)],this.normalize&&(n=np(n,e[0]),s=np(s,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Uh("batchDot is not implemented for tensors of 4D or higher rank yet");if(ae(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),ae(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Uh("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=e.shape.length;null==n&&(n=[s-1,r-2]);const i=n;return Ms((()=>{let n,a;if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,s=i[1]===e.shape.length-1;a=t.matMul(e,n,s)}if(n>0){let t;t=s>r?s+r-3:s-1;const e=[];for(let s=t;s<t+n;++s)e.push(s);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a}))}(n,s,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Dg(this.axes,t.length),Dg(this.axes,e.length)],n}computeOutputShape(t){ae(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Uh("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);e.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=e.concat(n);return 1===r.length&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Fg.className="Dot",Ds(Fg);class _g extends Wd{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Ms((()=>{this.invokeCallHook(t,e);const n=Ad(t);return td((()=>qc(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}_g.className="GaussianNoise",Ds(_g);class Og extends Wd{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Ms((()=>{this.invokeCallHook(t,e);const n=Ad(t);return this.rate>0&&this.rate<1?td((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(qc(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}Og.className="GaussianDropout",Ds(Og);class Mg extends Wd{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Ad(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Ms((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return td((()=>{const e=Ad(t),s=-1.7580993408473766;let r=si(Mi(n),this.rate);r=Bc(r,"float32");const i=((1-this.rate)*(1+this.rate*s**2))**-.5,a=-i*s*this.rate;return e.mul(r).add(r.add(-1).mul(s)).mul(i).add(a)}),(()=>Ad(t)),e.training||!1)}return t}))}}function Lg(t,e,n,s,r,i=.001){let a;if(2===t.rank)a=vr(t,e,n,s,r,i);else if(3===t.rank)a=Cr(t,e,n,s,r,i);else{if(4!==t.rank)throw new Uh(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=$r(t,e,n,s,r,i)}return a}Mg.className="AlphaDropout",Ds(Mg);class zg extends Wd{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Cd(t.betaInitializer||"zeros"),this.gammaInitializer=Cd(t.gammaInitializer||"ones"),this.movingMeanInitializer=Cd(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Cd(t.movingVarianceInitializer||"ones"),this.betaConstraint=xc(t.betaConstraint),this.gammaConstraint=xc(t.gammaConstraint),this.betaRegularizer=If(t.betaRegularizer),this.gammaRegularizer=If(t.gammaRegularizer)}build(t){t=Nd(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Wh(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Md({ndim:t.length,axes:{[e]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Ms((()=>{const n=null!=e.training&&e.training,s=Ad(t),r=s.shape,i=r.length,a=zc(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=Hh(1,i);l[o]=r[o];const u=a.slice();u.sort();const h=!ce(u,zc(0,i).slice(0,i-1));if(!n)return(()=>{if(h){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,r=this.scale?this.gamma.read().reshape(l):null;return Lg(s,t,e,n,r,this.epsilon)}return Lg(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[c,d,p]=function(t,e,n,s,r=.001){return ce(s.slice().sort(),zc(0,t.rank-1))?function(t,e,n,s,r=.001){return Ms((()=>{const i=$i(t,s),a=i.mean,o=i.variance;return[Lg(t,a,o,n,e,r),a,o]}))}(t,e,n,s,r):function(t,e,n,s,r=.001){return Ms((()=>{const i=$i(t,s),a=i.mean,o=i.variance,l=[];for(const e of zc(0,t.rank))-1!==s.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=a.reshape(l),h=o.reshape(l),c=null==e?null:e.reshape(l),d=null==n?null:n.reshape(l);return[Lg(t,u,h,d,c,r),a,o]}))}(t,e,n,s,r)}(s,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{Ms((()=>{const s=1-n,r=t.read(),i=r.sub(e).mul(s);t.write(r.sub(i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),c}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vd(this.betaInitializer),gammaInitializer:vd(this.gammaInitializer),movingMeanInitializer:vd(this.movingMeanInitializer),movingVarianceInitializer:vd(this.movingVarianceInitializer),betaRegularizer:$f(this.betaRegularizer),gammaRegularizer:$f(this.gammaRegularizer),betaConstraint:yc(this.betaConstraint),gammaConstraint:yc(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}zg.className="BatchNormalization",Ds(zg);class Bg extends Wd{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Cd(t.betaInitializer||"zeros"),this.gammaInitializer=Cd(t.gammaInitializer||"ones"),this.betaRegularizer=If(t.betaRegularizer),this.gammaRegularizer=If(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Nd(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==sc(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Ad(t),s=n.shape,r=s.length;return Ms((()=>{let{mean:t,variance:e}=$i(n,this.axis,!0);const i=Hh(1,r);for(const t of this.axis)i[t]=s[t];const a=t=>null!=t&&t.shape.length!==r&&this.axis!==[r-1]?t.reshape(i):t;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],h=[];for(let t=0;t<r;++t)-1!==this.axis.indexOf(t)?(u.push(s[t]),h.push(1)):(u.push(1),h.push(s[t]));return t=t.tile(u),e=e.tile(u),o=o.tile(h),l=l.tile(h),Lg(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vd(this.betaInitializer),gammaInitializer:vd(this.gammaInitializer),betaRegularizer:$f(this.betaRegularizer),gammaRegularizer:$f(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Bg.className="LayerNormalization",Ds(Bg);class Pg extends Wd{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Wh(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Wh(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Wh(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Md({ndim:4})]}computeOutputShape(t){let e,n;return t=Nd(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Ms((()=>{return e=Ad(t),n=this.padding,s=this.dataFormat,Ms((()=>{if(4!==e.rank)throw new Wh(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Wh("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new Wh(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Ni(e,t)}));var e,n,s}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Wg(t,e,n,s,r,i){return Ms((()=>{let a;Ic(r),Ec(i),Sc(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==i&&(i="max"),t=Of(t,r);const o="same"===s?"same":"valid";return a="max"===i?gi(t,e,n,o):yr(t,e,n,o),"channelsFirst"===r&&(a=tr(a,[0,3,1,2])),a}))}function Ug(t,e,n,s,r,i){return Ms((()=>{let a;Ic(r),Ec(i),Sc(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==i&&(i="max"),t=Mf(t,r);const o="same"===s?"same":"valid";return a="max"===i?mi(t,e,n,o):br(t,e,n,o),"channelsFirst"===r&&(a=tr(a,[0,4,1,2,3])),a}))}Pg.className="ZeroPadding2D",Ds(Pg);class Vg extends Wd{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Wh(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(oc(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Wh(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}oc(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Sc(this.padding),this.inputSpec=[new Md({ndim:3})]}computeOutputShape(t){const e=Ff((t=Nd(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Ms((()=>{this.invokeCallHook(t,e),t=Pc(Ad(t),2);const n=this.poolingFunction(Ad(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ta(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Gg extends Vg{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ic(r),Sc(s),Wg(t,e,n,s,r,"max")}}Gg.className="MaxPooling1D",Ds(Gg);class Hg extends Vg{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ic(r),Sc(s),Wg(t,e,n,s,r,"avg")}}Hg.className="AveragePooling1D",Ds(Hg);class jg extends Wd{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Wh(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];oc(this.poolSize,"poolSize"),oc(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ic(this.dataFormat),Sc(this.padding),this.inputSpec=[new Md({ndim:4})]}computeOutputShape(t){t=Nd(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Ff(e,this.poolSize[0],this.padding,this.strides[0]),n=Ff(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Ms((()=>(this.invokeCallHook(t,e),this.poolingFunction(Ad(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class qg extends jg{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ic(r),Sc(s),Wg(t,e,n,s,r,"max")}}qg.className="MaxPooling2D",Ds(qg);class Kg extends jg{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ic(r),Sc(s),Wg(t,e,n,s,r,"avg")}}Kg.className="AveragePooling2D",Ds(Kg);class Xg extends Wd{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Wh(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];oc(this.poolSize,"poolSize"),oc(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ic(this.dataFormat),Sc(this.padding),this.inputSpec=[new Md({ndim:5})]}computeOutputShape(t){t=Nd(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Ff(e,this.poolSize[0],this.padding,this.strides[0]),n=Ff(n,this.poolSize[1],this.padding,this.strides[1]),s=Ff(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,s]:[t[0],e,n,s,t[4]]}call(t,e){return Ms((()=>(this.invokeCallHook(t,e),this.poolingFunction(Ad(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Yg extends Xg{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ic(r),Sc(s),Ug(t,e,n,s,r,"max")}}Yg.className="MaxPooling3D",Ds(Yg);class Jg extends Xg{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Ic(r),Sc(s),Ug(t,e,n,s,r,"avg")}}Jg.className="AveragePooling3D",Ds(Jg);class Zg extends Wd{constructor(t){super(t),this.inputSpec=[new Md({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Uh}}class Qg extends Zg{constructor(t){super(t||{})}call(t,e){return Ms((()=>{const e=Ad(t);return xi(e,1)}))}}Qg.className="GlobalAveragePooling1D",Ds(Qg);class tm extends Zg{constructor(t){super(t||{})}call(t,e){return Ms((()=>{const e=Ad(t);return hi(e,1)}))}}tm.className="GlobalMaxPooling1D",Ds(tm);class em extends Wd{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ic(this.dataFormat),this.inputSpec=[new Md({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Uh}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class nm extends em{call(t,e){return Ms((()=>{const e=Ad(t);return"channelsLast"===this.dataFormat?xi(e,[1,2]):xi(e,[2,3])}))}}nm.className="GlobalAveragePooling2D",Ds(nm);class sm extends em{call(t,e){return Ms((()=>{const e=Ad(t);return"channelsLast"===this.dataFormat?hi(e,[1,2]):hi(e,[2,3])}))}}sm.className="GlobalMaxPooling2D",Ds(sm);class rm extends Wd{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const s=ep(e.layer,n);delete e.layer;const r={layer:s};return Object.assign(r,e),new t(r)}}class im extends rm{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Nd(t)).length<3)throw new Wh(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Nd(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),s=t[1];return[n[0],s].concat(n.slice(1))}call(t,e){return Ms((()=>Yf(((t,n)=>[Ad(this.layer.call(t,e)),[]]),t=Ad(t),[],!1,null,null,!1,!0)[1]))}}im.className="TimeDistributed",Ds(im);class am extends rm{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=ep(n),e.goBackwards=!0!==e.goBackwards;const s={};var r;if(s.className=t.layer.getClassName(),s.config=e,this.backwardLayer=ep(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,ic($c,"BidirectionalMergeMode",r),t.weights)throw new Uh("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,s,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),e=r[0]):e=r[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[e].concat(s).concat(s.slice()):Kh(n)}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=Xf(t,n,s,this.numConstants);if(t=r.inputs,n=r.initialState,s=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==s)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new Wh("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const s=n.map((t=>new Md({shape:t.shape})));this.forwardLayer.stateSpec=s.slice(0,t/2),this.backwardLayer.stateSpec=s.slice(t/2),a.push(...s)}if(null!=s)throw new Uh("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof Ld;for(const t of i)if(t instanceof Ld!==o)throw new Wh("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return Ms((()=>{const n=e.initialState;let s,r,i,a;if(null==n)s=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Pi(r,1)),"concat"===this.mergeMode?a=Gc([s,r]):"sum"===this.mergeMode?a=Gs(s,r):"ave"===this.mergeMode?a=ai(.5,Gs(s,r)):"mul"===this.mergeMode?a=ai(s,r):null==this.mergeMode&&(a=[s,r]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Ac(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Ac(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=ep(e.layer);if(delete e.layer,null!=e.numConstants)throw new Uh("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=e;return s.layer=n,new t(s)}}function om(t,e,n=new Map,s=new Set){if(null==t)return null;if(s.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(cm(t)){const r=Array.isArray(t)?[]:{};s.add(t);for(const i in t){const a=om(t[i],e,n,s);r[i]=a}return s.delete(t),r}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,r.value),r.value}function lm(t,e=hm){return um(t,e)}function um(t,e,n=new Set){const s=t[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(cm(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const i in s){const s=um(t.map((t=>t[i])),e,n);r[i]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function hm(t){return null===t?null:cm(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function cm(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Ze))}function dm(t){return om(t,pm)}function pm(t){return t instanceof Ze?{value:t.clone(),recurse:!1}:cm(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}am.className="Bidirectional",Ds(am),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(og||(og={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(lg||(lg={}));class fm{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class gm extends fm{constructor(){super(gm.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}gm.INITIAL_CAPACITY=32;class mm{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Im(this,t)}filter(t){return new $m(this,t)}map(t){return new km(this,t)}mapAsync(t){return new Sm(this,t)}serialMapAsync(t){return new Sm(this,t).serial()}flatmap(t){return new Rm(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new Cm(this,t,e)}columnMajorBatch(t,e=!0,n=hm){return this.rowMajorBatch(t,e).map((t=>lm(t,n)))}concatenate(t,e){return new Am(new ym([this,t]),e)}take(t){return t<0||null==t?this:new vm(this,t)}skip(t){return t<0||null==t?this:new wm(this,t)}prefetch(t){return new Nm(this,t)}shuffle(t,e){return new Tm(this,t,e)}serial(){return new xm(this)}}class ym extends mm{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:dm(t),done:!1}}}class bm extends mm{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class xm extends mm{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class wm extends mm{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Ls(t.value)}return this.upstream.next()}}class vm extends mm{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Cm extends mm{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class $m extends mm{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Ls(t.value)}}}class km extends mm{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=cn(t.value),n=this.transform(t.value),s=cn(n);for(const t of e)hn(t,s)||t.dispose();return{value:n,done:!1}}}class Im extends mm{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Sm extends mm{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=cn(t.value),n=await this.transform(t.value),s=cn(n);for(const t of e)hn(t,s)||t.dispose();return{value:n,done:!1}}}class Em extends mm{constructor(){super(),this.outputQueue=new gm,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Rm extends Em{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=cn(t.value),n=this.transform(t.value),s=cn(n);this.outputQueue.pushAll(n);for(const t of e)hn(t,s)||t.dispose();return!0}}class Am extends mm{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(hg=ug||(ug={}))[hg.FAIL=0]="FAIL",hg[hg.SHORTEST=1]="SHORTEST",hg[hg.LONGEST=2]="LONGEST";class Nm extends mm{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new fm(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class Tm extends Nm{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Di.alea(n||Oe().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Dm{constructor(){this.size=null}batch(t,e=!0){const n=this;let s;return ae(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),s=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Fm((async()=>(await n.iterator()).columnMajorBatch(t,e,_m)),s)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Fm((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Fm((async()=>(await e.iterator()).filter((e=>Ms((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Fm((async()=>(await e.iterator()).map((e=>Ms((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Fm((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Fm((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Fm((async()=>{return n=(r=async()=>({value:await e.iterator(),done:!1}),new bm(r)).take(t),new Am(n,s);var n,s,r}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Fm((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=Di.alea(e||Oe().toString());return Fm((async()=>{let e=r.int32();return n&&(e+=r.int32()),(await s.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Fm((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Fm(t,e=null){return new class extends Dm{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function _m(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof Ze||ve(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Ze?ea(t):Rn(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function Om(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&ae("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}function Mm(t,e,n,s,r,i){const a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,h=r.effectiveFilterHeight,c=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=is(r.outShape,n),m=g.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let e=0;e<r.batchSize;++e){const n=e*y,g=e*s[0];for(let e=0;e<r.inChannels;++e)for(let y=0;y<r.outHeight;++y){const w=y*a-d,v=Math.max(0,w),C=Math.min(r.inHeight,h+w),$=n+y*b;for(let n=0;n<r.outWidth;++n){const a=n*o-p,h=Math.max(0,a),d=Math.min(r.inWidth,c+a);let y=f,b=0,w=0;for(let n=v;n<C;n+=l){const r=g+n*s[1];for(let n=h;n<d;n+=u){const a=t[r+n*s[2]+e];"max"===i&&a>y?y=a:"avg"===i&&(b+=a,w++)}if(isNaN(y))break}m[$+n*x+e]="avg"===i?b/w:y}}}return g}function Lm(t,e,n,s,r=!1,i=!1){const a=is(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,h=s.dilationWidth,c=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=is(e,n,t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.outHeight;++n){const m=n*o-p;let y=m;for(;y<0;)y+=u;const b=Math.min(s.inHeight,c+m);for(let o=0;o<s.outWidth;++o){const c=o*l-f;let p=c;for(;p<0;)p+=h;const x=Math.min(s.inWidth,d+c);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){const a=n-m;for(let o=p;o<x;o+=h){const l=o-c,u=g.get(t,n,o,e);u>w&&(w=u,v=r?i?((t*s.inHeight+n)*s.inWidth+o)*s.inChannels+e:(n*s.inWidth+o)*s.inChannels+e:a*d+l)}}a.set(v,t,n,o,e)}}return a}Dm.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const zm=Da,Bm=Go,Pm=Ho,Wm=jo,Um=qo;function Vm(t,e,n,s){if("linear"===n)return t.linear(e);if("relu"===n)return t.relu(e);if("elu"===n)return t.elu(e);if("relu6"===n)return t.relu6(e);if("prelu"===n)return t.prelu(e,s);throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}class Gm extends Xo{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Ko(this,_s())}write(t,e,n){this.firstUse&&(this.firstUse=!1,l().get("IS_NODE")&&To("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={};return this.data.set(s,{values:t,dtype:n,refCount:1}),s}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,s){this.data.set(t,{values:e,dtype:s,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensors:n}=this.data.get(t);return"complex64"===e?Fo(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>Le(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return is(t.shape,t.dtype,n)}makeOutput(t,e,n){const s=this.write(t,e,n);return _s().makeTensorFromDataId(s,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensors:e}=this.data.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=Oe();return t(),{kernelMs:Oe()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}complex(t,e){const n=this.makeOutput(null,t.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:_s().keep(t.clone()),imag:_s().keep(e.clone())},n}real(t){return this.data.get(t.dataId).complexTensors.real.clone()}imag(t){return this.data.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(Om(t,"slice"),Es(t.shape,e,n)){const s=Rs(e,t.strides),r=he(n);return Rn(this.readSync(t.dataId).subarray(s,s+r),n,t.dtype)}const s=is(n,t.dtype),r=this.bufferSync(t);for(let t=0;t<s.size;++t){const n=s.indexToLoc(t).map(((t,n)=>t+e[n]));s.values[t]=r.get(...n)}return s.toTensor()}stridedSlice(t,e,n,s){Om(t,"stridedSlice");const r=ys(e,n,s);if(r.some((t=>0===t)))return Rn([],r);const i=is(r,t.dtype),a=this.bufferSync(t);for(let t=0;t<i.size;t++){const n=i.indexToLoc(t),r=new Array(n.length);for(let t=0;t<r.length;t++)r[t]=n[t]*s[t]+e[t];i.set(a.get(...r),...n)}return i.toTensor()}diag(t){const e=this.readSync(t.dataId),n=is([t.size,t.size],t.dtype),s=n.values;for(let n=0;n<e.length;n++)s[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],s=new Array(t.rank-1);let r=0;for(let n=0;n<t.rank;n++)n!==e&&(s[r++]=t.shape[n]);const i=new Array(t.rank).fill(0),a=t.shape.slice();a[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)i[e]=n,o[n]=this.slice(t,i,a).reshape(s);return o}reverse(t,e){Om(t,"reverse");const n=is(t.shape,t.dtype),s=this.bufferSync(t);for(let r=0;r<n.size;r++){const i=n.indexToLoc(r),a=i.slice();e.forEach((e=>a[e]=t.shape[e]-1-a[e])),n.set(s.get(...a),...i)}return n.toTensor()}concat(t,e){if("complex64"===t[0].dtype){const n=t.map((t=>Ei(t))),s=t.map((t=>ri(t)));return Sn(this.concat(n,e),this.concat(s,e))}const n=t.map((t=>{const n=he(t.shape.slice(e));return t.as2D(-1,n)})),s=Sr(n.map((t=>t.shape)),1),r=is(s,t[0].dtype).values;if(1===n[0].shape[0]){let t=0;n.forEach((e=>{r.set(this.readSync(e.dataId),t),t+=e.size}))}else{let t=0;n.forEach((e=>{const n=this.readSync(e.dataId);let i=0;for(let a=0;a<e.shape[0];++a){const o=a*s[1]+t;for(let t=0;t<e.shape[1];++t)r[o+t]=n[i++]}t+=e.shape[1]}))}const i=Sr(t.map((t=>t.shape)),e);return Rn(r,i,t[0].dtype)}neg(t){return Om(t,"neg"),this.multiply(Ws(-1),t)}add(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),((t,e,n,s)=>({real:t+n,imag:e+s}))):this.broadcastedBinaryOp(t,e,on(t.dtype,e.dtype),((t,e)=>t+e))}addN(t){Om(t,"addN");const e=t.map((t=>this.readSync(t.dataId))),n=is(t[0].shape,t[0].dtype),s=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<s.length;e++)s[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=ye([e],t.shape),s=hi(t,n),r=Ks(s.shape,n),i=this.subtract(t,s.reshape(r)),a=this.exp(i),o=this.sum(a,n).reshape(r);return Br(a,o)}subtract(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),((t,e,n,s)=>({real:t-n,imag:e-s}))):this.broadcastedBinaryOp(t,e,on(t.dtype,e.dtype),((t,e)=>t-e))}pow(t,e){return Om([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.pow(t,e)))}batchMatMul(t,e,n,s){Om([t,e],"matMul");const r=n?t.shape[1]:t.shape[2],i=n?t.shape[2]:t.shape[1],a=s?e.shape[1]:e.shape[2],o=t.shape[0],l=this.readSync(t.dataId),u=this.readSync(e.dataId),[h,c,d]=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],[p,f,g]=s?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],m=i*a,y=is([o,i,a],t.dtype),b=y.values,x=this.blockSize;for(let t=0;t<o;t++)for(let e=0;e<i;e+=x)for(let n=0;n<a;n+=x)for(let s=0;s<r;s+=x){const o=Math.min(e+x,i),y=Math.min(n+x,a),w=Math.min(s+x,r);for(let r=e;r<o;r++)for(let e=n;e<y;e++){let n=0;for(let i=s;i<w;i++)n+=l[t*h+r*c+i*d]*u[i*p+e*f+t*g];b[t*m+(r*a+e)]+=n}}return y.toTensor()}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:s,bias:r,activation:i,preluActivationWeights:a}){let o=this.batchMatMul(t,e,n,s);return r&&(o=this.add(o,r)),i&&(o=Vm(this,o,i,a)),o}multiply(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n}))):this.broadcastedBinaryOp(t,e,on(t.dtype,e.dtype),((t,e)=>t*e))}floorDiv(t,e){return Om([t,e],"floorDiv"),this.broadcastedBinaryOp(t,e,"int32",((t,e)=>Math.floor(t/e)))}sum(t,e){Om(t,"sum"),Xs("sum",e,t.rank);const[n,s]=qs(t.shape,e),r=yi(n,on(t.dtype,"int32")),i=he(s),a=this.readSync(r.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=0;for(let t=0;t<i;++t)n+=o[e+t];a[t]=n}return r}prod(t,e){Om(t,"sum");const[n,s]=qs(t.shape,e),r=yi(n,on(t.dtype,"int32")),i=he(s),a=this.readSync(r.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=1;for(let t=0;t<i;++t)n*=o[e+t];a[t]=n}return r}unsortedSegmentSum(t,e,n){Om(t,"unsortedSegmentSum");const s=[],r=t.rank-e.rank;for(let t=0;t<r;++t)e=e.expandDims(t+1);for(let r=0;r<n;++r){const n=Ws(r,"int32"),i=Gr(n,e).asType("float32").mul(t).sum(0);s.push(i)}return ea(s)}argMin(t,e){Om(t,"argMin");const n=[e];Xs("argMin",n,t.rank);const[s,r]=qs(t.shape,n),i=yi(s,"int32"),a=he(r),o=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*a;let n=l[e],s=0;for(let t=0;t<a;++t){const r=l[e+t];r<n&&(n=r,s=t)}o[t]=s}return i}argMax(t,e){Om(t,"argMax");const n=[e];Xs("argMax",n,t.rank);const[s,r]=qs(t.shape,n),i=yi(s,"int32"),a=he(r),o=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*a;let n=l[e],s=0;for(let t=0;t<a;++t){const r=l[e+t];r>n&&(n=r,s=t)}o[t]=s}return i}cumsum(t,e,n,s){if(Om(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=${e}`);const r=on(t.dtype,"int32"),i=yi(t.shape,r),a=this.readSync(i.dataId),o=this.readSync(t.dataId),l=t.shape[t.rank-1],u=s?(t,e)=>t+l-e-1:(t,e)=>t+e;for(let t=0;t<o.length;t+=l)for(let e=0;e<l;e++){const s=u(t,e);if(0===e)a[s]=n?0:o[s];else{const r=u(t,e-1);a[s]=n?o[r]+a[r]:o[s]+a[r]}}return i}equal(t,e){return Om([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t===e?1:0))}notEqual(t,e){return Om([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t!==e?1:0))}less(t,e){return Om([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<e?1:0))}lessEqual(t,e){return Om([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<=e?1:0))}greater(t,e){return Om([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>e?1:0))}greaterEqual(t,e){return Om([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>=e?1:0))}logicalNot(t){Om(t,"logicalNot");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n[t]=e[t]?0:1;return this.makeOutput(n,t.shape,"bool")}logicalAnd(t,e){return Om([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t&&e))}logicalOr(t,e){return Om([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t||e))}select(t,e,n){Om([t,e,n],"select");const s=this.readSync(t.dataId),r=this.readSync(e.dataId),i=this.readSync(n.dataId),a=yi(e.shape,on(e.dtype,n.dtype)),o=this.readSync(a.dataId);let l=0;const u=0===t.rank||t.rank>1||1===e.rank?1:he(e.shape.slice(1));for(let t=0;t<s.length;t++)for(let e=0;e<u;e++)1===s[t]?o[l++]=r[t]:o[l++]=i[t];return a}where(t){Om([t],"where");const e=this.readSync(t.dataId);return Um(t.shape,e)}topk(t,e,n){Om(t,"topk");const s=this.readSync(t.dataId);return Wm(s,t.shape,t.dtype,e,n)}min(t,e){Om(t,"min"),Xs("min",e,t.rank);const[n,s]=qs(t.shape,e),r=yi(n,t.dtype),i=he(s),a=this.readSync(r.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const s=o[e+t];s<n&&(n=s)}a[t]=n}return r}minimum(t,e){return Om([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.min(t,e)))}mod(t,e){return Om([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}))}maximum(t,e){return Om([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.max(t,e)))}all(t,e){Om(t,"all"),Xs("all",e,t.rank);const[n,s]=qs(t.shape,e),r=yi(n,t.dtype),i=he(s),a=this.readSync(r.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const s=o[e+t];n=n&&s}a[t]=n}return r}any(t,e){Om(t,"any"),Xs("any",e,t.rank);const[n,s]=qs(t.shape,e),r=yi(n,t.dtype),i=he(s),a=this.readSync(r.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const s=o[e+t];n=n||s}a[t]=n}return r}squaredDifference(t,e){return Om([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t-e;return n*n}))}ceil(t){Om(t,"ceil");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.ceil(e[t]);return this.makeOutput(n,t.shape,"float32")}floor(t){Om(t,"floor");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.floor(e[t]);return this.makeOutput(n,t.shape,"float32")}sign(t){Om(t,"x");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)e[t]<0?n[t]=-1:e[t]>0?n[t]=1:n[t]=0;return this.makeOutput(n,t.shape,"float32")}isNaN(t){Om(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Number.isNaN(e[t])&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}isInf(t){Om(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Math.abs(e[t])===1/0&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}isFinite(t){Om(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Number.isFinite(e[t])&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}round(t){Om(t,"round");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const s=Math.floor(e[t]);e[t]-s<.5?n[t]=Math.floor(e[t]):e[t]-s>.5?n[t]=Math.ceil(e[t]):n[t]=s%2==0?s:s+1}return this.makeOutput(n,t.shape,"float32")}exp(t){Om(t,"exp");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.exp(e[t]);return this.makeOutput(n,t.shape,"float32")}expm1(t){Om(t,"expm1");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.expm1(e[t]);return this.makeOutput(n,t.shape,"float32")}log(t){Om(t,"log");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const s=e[t];n[t]=Math.log(s)}return this.makeOutput(n,t.shape,"float32")}log1p(t){Om(t,"log1p");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const s=e[t];n[t]=Math.log1p(s)}return this.makeOutput(n,t.shape,"float32")}sqrt(t){Om(t,"sqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const s=e[t];n[t]=Math.sqrt(s)}return this.makeOutput(n,t.shape,"float32")}rsqrt(t){Om(t,"rsqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const s=e[t];n[t]=1/Math.sqrt(s)}return this.makeOutput(n,t.shape,"float32")}reciprocal(t){Om(t,"reciprocal");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=1/e[t];return this.makeOutput(n,t.shape,"float32")}linear(t){return t}relu(t){Om(t,"relu");const e=yi(t.shape,t.dtype),n=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t)n[t]=Math.max(0,s[t]);return e}relu6(t){Om(t,"relu");const e=yi(t.shape,t.dtype),n=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t)n[t]=Math.min(Math.max(0,s[t]),6);return e}prelu(t,e){return Om([t,e],"prelu"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>t<0?e*t:t))}elu(t){Om(t,"elu");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t){const s=n[t];e[t]=s>=0?s:Math.exp(s)-1}return this.makeOutput(e,t.shape,"float32")}eluDer(t,e){Om([t,e],"eluDer");const n=new Float32Array(e.size),s=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<s.length;++t){const e=s[t];n[t]=e>=1?r[t]:r[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}selu(t){Om(t,"selu");const e=$o,n=ko,s=new Float32Array(t.size),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const i=r[t];s[t]=i>=0?n*i:e*(Math.exp(i)-1)}return this.makeOutput(s,t.shape,"float32")}clip(t,e,n){Om(t,"clip");const s=new Float32Array(t.size),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const i=r[t];s[t]=i>n?n:i<e?e:i}return this.makeOutput(s,t.shape,t.dtype)}abs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return this.makeOutput(e,t.shape,"float32")}complexAbs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let s=0;s<t.size;++s){const t=n[2*s],r=n[2*s+1];e[s]=Math.hypot(t,r)}return this.makeOutput(e,t.shape,"float32")}int(t){Om(t,"int");const e=new Int32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=n[t];return this.makeOutput(e,t.shape,"int32")}sigmoid(t){Om(t,"sigmoid");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=1/(1+Math.exp(-n[t]));return this.makeOutput(e,t.shape,"float32")}softplus(t){Om(t,"softplus");const e=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(t.size),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t){const r=s[t]>-e,i=s[t]<e,a=Math.exp(s[t]);let o;o=i?a:r?s[t]:Math.log(1+a),n[t]=o}return this.makeOutput(n,t.shape,"float32")}sin(t){Om(t,"sin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.sin(n[t]);return this.makeOutput(e,t.shape,"float32")}tan(t){Om(t,"tan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.tan(n[t]);return this.makeOutput(e,t.shape,"float32")}asin(t){Om(t,"asin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.asin(n[t]);return this.makeOutput(e,t.shape,"float32")}acos(t){Om(t,"acos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.acos(n[t]);return this.makeOutput(e,t.shape,"float32")}atan(t){Om(t,"atan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.atan(n[t]);return this.makeOutput(e,t.shape,"float32")}atan2(t,e){return Om([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.atan2(t,e)))}sinh(t){Om(t,"sinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.sinh(n[t]);return this.makeOutput(e,t.shape,"float32")}cosh(t){Om(t,"cosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.cosh(n[t]);return this.makeOutput(e,t.shape,"float32")}tanh(t){Om(t,"tanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=pe(n[t]);return this.makeOutput(e,t.shape,"float32")}asinh(t){Om(t,"asinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.asinh(n[t]);return this.makeOutput(e,t.shape,"float32")}acosh(t){Om(t,"acosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.acosh(n[t]);return this.makeOutput(e,t.shape,"float32")}atanh(t){Om(t,"atanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.atanh(n[t]);return this.makeOutput(e,t.shape,"float32")}erf(t){Om(t,"erf");const e=new Float32Array(t.size),n=this.readSync(t.dataId),s=Io,r=So,i=Eo,a=Ro,o=Ao,l=No;for(let t=0;t<n.length;++t){const u=Math.sign(n[t]),h=Math.abs(n[t]),c=1/(1+s*h);e[t]=u*(1-((((l*c+o)*c+a)*c+i)*c+r)*c*Math.exp(-h*h))}return this.makeOutput(e,t.shape,"float32")}step(t,e=0){Om(t,"step");const n=new Float32Array(t.size),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t){const r=s[t];isNaN(r)?n[t]=NaN:n[t]=r>0?1:e}return this.makeOutput(n,t.shape,"float32")}fusedConv2d({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){let a=this.conv2d(t,e,n);return s&&(a=this.add(a,s)),r&&(a=Vm(this,a,r,i)),a}conv2d(t,e,n){Om([t,e],"conv2d");const s=n.filterHeight,r=n.filterWidth,i=n.dilationHeight,a=n.dilationWidth,o=n.padInfo.left,l=n.padInfo.top,u="channelsLast"===n.dataFormat,h=is(n.outShape,t.dtype),c=t.strides[0],d=u?t.strides[1]:t.strides[2],p=u?t.strides[2]:1,f=u?1:t.strides[1],g=h.strides[0],m=u?h.strides[1]:h.strides[2],y=u?h.strides[2]:1,b=u?1:h.strides[1],x=this.readSync(t.dataId),w=this.readSync(e.dataId),v=h.values;for(let t=0;t<n.batchSize;++t){const u=t*c,h=t*g;for(let t=0;t<n.outHeight;++t){const c=h+t*m,g=t*n.strideHeight-l;for(let t=0;t<s;t++){const s=g+t*i;if(s<0||s>=n.inHeight)continue;const l=t*e.strides[0],h=u+s*d;for(let t=0;t<n.outWidth;++t){const s=c+t*y,i=t*n.strideWidth-o;for(let t=0;t<r;t++){const r=i+t*a;if(r<0||r>=n.inWidth)continue;const o=h+r*p;let u=l+t*e.strides[1];for(let t=0;t<n.inChannels;++t){const e=x[o+t*f];for(let t=0;t<n.outChannels;++t)v[s+t*b]+=e*w[u+t];u+=n.outChannels}}}}}}return h.toTensor()}conv3d(t,e,n){const s=n.filterDepth,r=n.filterHeight,i=n.filterWidth,a=n.dilationDepth,o=n.dilationHeight,l=n.dilationWidth,u=n.padInfo.front,h=n.padInfo.left,c=n.padInfo.top,d=is(n.outShape,t.dtype),p=this.readSync(t.dataId),f=this.readSync(e.dataId),g=d.values;for(let m=0;m<n.batchSize;++m){const y=m*t.strides[0],b=m*d.strides[0];for(let m=0;m<n.outDepth;++m){const x=b+m*d.strides[1],w=m*n.strideDepth-u;for(let u=0;u<s;u++){const s=w+u*a;if(s<0||s>=n.inDepth)continue;const m=u*e.strides[0],b=y+s*t.strides[1];for(let s=0;s<n.outHeight;++s){const a=x+s*d.strides[2],u=s*n.strideHeight-c;for(let s=0;s<r;s++){const r=u+s*o;if(r<0||r>=n.inHeight)continue;const c=m+s*e.strides[1],d=b+r*t.strides[2];for(let t=0;t<n.outWidth;++t){const s=a+t*n.outChannels,r=t*n.strideWidth-h;for(let t=0;t<i;t++){const i=r+t*l;if(i<0||i>=n.inWidth)continue;const a=c+t*e.strides[2],o=d+i*n.inChannels;let u=a;for(let t=0;t<n.inChannels;++t){const e=p[o+t];for(let t=0;t<n.outChannels;++t)g[s+t]+=e*f[u+t];u+=n.outChannels}}}}}}}}return d.toTensor()}conv2dDerInput(t,e,n){Om([t,e],"conv2dDerInput");const s=is(n.inShape,"float32"),r=s.values,i=this.readSync(t.dataId),a=this.readSync(e.dataId),[o,l,u]=e.strides,{batchSize:h,filterHeight:c,filterWidth:d,inChannels:p,inHeight:f,inWidth:g,outChannels:m,outHeight:y,outWidth:b,strideHeight:x,strideWidth:w,dataFormat:v}=n,C=c-1-n.padInfo.top,$=d-1-n.padInfo.left,k="channelsLast"===v,I=s.strides[0],S=k?s.strides[1]:s.strides[2],E=k?s.strides[2]:1,R=k?1:s.strides[1],A=t.strides[0],N=k?t.strides[1]:t.strides[2],T=k?t.strides[2]:1,D=k?1:t.strides[1];for(let t=0;t<h;++t)for(let e=0;e<p;++e)for(let n=0;n<f;++n){const s=n-C,h=Math.max(0,Math.ceil(s/x)),p=Math.min(y,(c+s)/x);for(let f=0;f<g;++f){const g=f-$,y=Math.max(0,Math.ceil(g/w)),v=Math.min(b,(d+g)/w);let C=0;for(let n=h;n<p;++n){const r=n*x-s;for(let s=y;s<v;++s){const h=A*t+N*n+T*s,p=o*(c-1-r)+l*(d-1-(s*w-g))+u*e;for(let t=0;t<m;++t)C+=i[h+D*t]*a[p+t]}}r[I*t+S*n+E*f+R*e]=C}}return s.toTensor()}conv3dDerInput(t,e,n){const s=is(n.inShape,"float32"),r=s.values,[i,a,o,l]=s.strides,u=this.readSync(t.dataId),[h,c,d,p]=t.strides,f=this.readSync(e.dataId),[g,m,y,b]=e.strides,{batchSize:x,filterDepth:w,filterHeight:v,filterWidth:C,inChannels:$,inDepth:k,inHeight:I,inWidth:S,outChannels:E,outDepth:R,outHeight:A,outWidth:N,strideDepth:T,strideHeight:D,strideWidth:F}=n,_=w-1-n.padInfo.front,O=v-1-n.padInfo.top,M=C-1-n.padInfo.left;for(let t=0;t<x;++t)for(let e=0;e<$;++e)for(let n=0;n<k;++n){const s=n-_,x=Math.max(0,Math.ceil(s/T)),$=Math.min(R,(w+s)/T);for(let k=0;k<I;++k){const I=k-O,R=Math.max(0,Math.ceil(I/D)),_=Math.min(A,(v+I)/D);for(let A=0;A<S;++A){const S=A-M,O=Math.max(0,Math.ceil(S/F)),L=Math.min(N,(C+S)/F);let z=0;for(let n=x;n<$;++n){const r=n*T-s;for(let s=R;s<_;++s){const i=s*D-I;for(let a=O;a<L;++a){const o=h*t+c*n+d*s+p*a,l=g*(w-1-r)+m*(v-1-i)+y*(C-1-(a*F-S))+b*e;for(let t=0;t<E;++t)z+=u[o+t]*f[l+t]}}}r[i*t+a*n+o*k+l*A+e]=z}}}return s.toTensor()}conv2dDerFilter(t,e,n){Om([t,e],"conv2dDerFilter");const s=n.strideHeight,r=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o="channelsLast"===n.dataFormat,l=is(n.filterShape,"float32"),u=n.padInfo.left,h=n.padInfo.top,c=this.bufferSync(t),d=this.bufferSync(e);for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((h-t)/s)),i=Math.min(n.outHeight,(n.inHeight+h-t)/s);for(let p=0;p<a;++p){const a=Math.max(0,Math.ceil((u-p)/r)),f=Math.min(n.outWidth,(n.inWidth+u-p)/r);for(let g=0;g<n.inChannels;++g)for(let m=0;m<n.outChannels;++m){let y=0;for(let l=0;l<n.batchSize;++l)for(let n=e;n<i;++n){const e=t+n*s-h;for(let t=a;t<f;++t){const s=p+t*r-u;y+=o?c.get(l,e,s,g)*d.get(l,n,t,m):c.get(l,g,e,s)*d.get(l,m,n,t)}}l.set(y,t,p,g,m)}}}return l.toTensor()}conv3dDerFilter(t,e,n){const s=n.strideDepth,r=n.strideHeight,i=n.strideWidth,a=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=is(n.filterShape,"float32"),h=u.values,[c,d,p,f]=u.strides,g=this.readSync(e.dataId),[m,y,b,x]=e.strides,w=this.readSync(t.dataId),[v,C,$,k]=t.strides,I=n.padInfo.front,S=n.padInfo.left,E=n.padInfo.top;for(let t=0;t<a;++t){const e=Math.max(0,Math.ceil((I-t)/s)),a=Math.min(n.outDepth,(n.inDepth+I-t)/s),u=t*c;for(let c=0;c<o;++c){const o=Math.max(0,Math.ceil((E-c)/r)),R=Math.min(n.outHeight,(n.inHeight+E-c)/r),A=c*d+u;for(let u=0;u<l;++u){const l=Math.max(0,Math.ceil((S-u)/i)),d=Math.min(n.outWidth,(n.inWidth+S-u)/i),N=u*p+A;for(let p=0;p<n.inChannels;++p){const A=p*f+N;for(let f=0;f<n.outChannels;++f){let N=0;for(let h=0;h<n.batchSize;++h){const n=h*v,A=h*m;for(let h=e;h<a;++h){const e=(t+h*s-I)*C+n,a=h*y+A;for(let t=o;t<R;++t){const n=(c+t*r-E)*$+e,s=t*b+a;for(let t=l;t<d;++t){const e=t*x+s;N+=w[(u+t*i-S)*k+n+p]*g[e+f]}}}}h[A+f]=N}}}}}return u.toTensor()}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){let a=this.depthwiseConv2D(t,e,n);return s&&(a=this.add(a,s)),r&&(a=Vm(this,a,r,i)),a}depthwiseConv2D(t,e,n){Om([t,e],"depthwiseConv2D");const s=n.filterHeight,r=n.filterWidth,i=n.dilationHeight,a=n.dilationWidth,o=n.padInfo.left,l=n.padInfo.top,u=n.outChannels/n.inChannels,h=is(n.outShape,t.dtype),c=this.readSync(t.dataId),d=this.readSync(e.dataId),p=h.values;for(let f=0;f<n.batchSize;++f){const g=f*t.strides[0],m=f*h.strides[0];for(let f=0;f<n.outHeight;++f){const y=m+f*h.strides[1],b=f*n.strideHeight-o;for(let o=0;o<s;++o){const s=b+o*i;if(s<0||s>=n.inHeight)continue;const f=o*e.strides[0],m=g+s*t.strides[1];for(let t=0;t<n.outWidth;++t){const s=y+t*h.strides[2],i=t*n.strideWidth-l;for(let t=0;t<r;++t){const r=i+t*a;if(r<0||r>=n.inWidth)continue;const o=f+t*e.strides[1],l=m+r*n.inChannels;let h=s,g=o;for(let t=0;t<n.inChannels;++t){const e=c[l+t];for(let t=0;t<u;++t)p[h+t]+=e*d[g+t];h+=u,g+=u}}}}}}return h.toTensor()}depthwiseConv2DDerInput(t,e,n){Om([t,e],"depthwiseConv2DDerInput");const s=is(n.inShape,"float32"),r=s.values,[i,a,o]=s.strides,l=this.readSync(t.dataId),[u,h,c]=t.strides,d=this.readSync(e.dataId),[p,f,g]=e.strides,{batchSize:m,filterHeight:y,filterWidth:b,inChannels:x,inHeight:w,inWidth:v,outChannels:C,outHeight:$,outWidth:k,strideHeight:I,strideWidth:S}=n,E=y-1-n.padInfo.top,R=b-1-n.padInfo.left,A=C/x;for(let t=0;t<m;++t)for(let e=0;e<x;++e)for(let n=0;n<w;++n){const s=n-E,m=Math.max(0,Math.ceil(s/I)),x=Math.min($,(y+s)/I);for(let w=0;w<v;++w){const v=w-R,C=Math.max(0,Math.ceil(v/S)),$=Math.min(k,(b+v)/S);let E=0;for(let n=m;n<x;++n){const r=n*I-s;for(let s=C;s<$;++s){const i=u*t+h*n+c*s,a=p*(y-1-r)+f*(b-1-(s*S-v))+g*e;for(let t=0;t<A;++t)E+=l[i+(e*A+t)]*d[a+t]}}r[i*t+a*n+o*w+e]=E}}return s.toTensor()}depthwiseConv2DDerFilter(t,e,n){Om([t,e],"depthwiseConv2DDerFilter");const s=n.strideHeight,r=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o=is(n.filterShape,"float32"),l=n.padInfo.left,u=n.padInfo.top,h=n.outChannels/n.inChannels,c=this.bufferSync(t),d=this.bufferSync(e);for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((u-t)/s)),i=Math.min(n.outHeight,(n.inHeight+u-t)/s);for(let p=0;p<a;++p){const a=Math.max(0,Math.ceil((l-p)/r)),f=Math.min(n.outWidth,(n.inWidth+l-p)/r);for(let g=0;g<n.outChannels;++g){const m=Math.trunc(g/h),y=g%h;let b=0;for(let o=0;o<n.batchSize;++o)for(let n=e;n<i;++n){const e=t+n*s-u;for(let t=a;t<f;++t){const s=p+t*r-l;b+=c.get(o,e,s,m)*d.get(o,n,t,g)}}o.set(b,t,p,m,y)}}}return o.toTensor()}tile(t,e){return Om(t,"tile"),Pm(this.bufferSync(t),e)}gather(t,e,n){Om([t,e],"gather");const s=t.shape.slice(),r=this.readSync(e.dataId);s[n]=r.length;const i=is(s,t.dtype),a=this.bufferSync(t);for(let t=0;t<i.size;++t){const e=i.indexToLoc(t),s=e.slice();s[n]=r[e[n]];const o=a.locToIndex(s);i.values[t]=a.values[o]}return i.toTensor()}batchToSpaceND(t,e,n){Om([t],"batchToSpaceND");const s=e.reduce(((t,e)=>t*e)),r=fo(t.shape,e,s),i=go(r.length,e.length),a=mo(t.shape,e,s),o=yo(n,e.length),l=bo(a,n,e.length);return tr(t.reshape(r),i).reshape(a).slice(o,l)}maxPool(t,e){return Om(t,"maxPool"),Mm(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"max").toTensor()}maxPoolBackprop(t,e,n,s){Om([e,n],"maxPoolBackprop");const r=this.readSync(e.dataId),i=is(s.outShape,e.dtype,Lm(r,e.shape,e.dtype,s).values),a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,c=s.effectiveFilterWidth,d=c-1-s.padInfo.left,p=h-1-s.padInfo.top,f=is(e.shape,"float32"),g=this.bufferSync(t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.inHeight;++n)for(let r=0;r<s.inWidth;++r){const m=n-p,y=r-d;let b=0;for(let n=0;n<h;n+=l){const r=(m+n)/a;if(!(r<0||r>=s.outHeight||Math.floor(r)!==r))for(let a=0;a<c;a+=u){const l=(y+a)/o;if(l<0||l>=s.outWidth||Math.floor(l)!==l)continue;const u=h*c-1-i.get(t,r,l,e)===n*c+a?1:0;0!==u&&(b+=g.get(t,r,l,e)*u)}}f.set(b,t,n,r,e)}return f.toTensor()}avgPoolBackprop(t,e,n){Om([t,e],"avgPoolBackprop");const s=n.strideHeight,r=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o=n.dilationHeight,l=n.dilationWidth,u=n.effectiveFilterHeight,h=n.effectiveFilterWidth,c=h-1-n.padInfo.left,d=u-1-n.padInfo.top,p=is(e.shape,"float32"),f=1/(i*a),g=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let i=0;i<n.inHeight;++i)for(let a=0;a<n.inWidth;++a){const m=i-d,y=a-c;let b=0;for(let i=0;i<u;i+=o){const a=(m+i)/s;if(!(a<0||a>=n.outHeight||Math.floor(a)!==a))for(let s=0;s<h;s+=l){const i=(y+s)/r;i<0||i>=n.outWidth||Math.floor(i)!==i||(b+=g.get(t,a,i,e))}}p.set(b*f,t,i,a,e)}return p.toTensor()}pool3d(t,e,n){Om(t,"pool3d");const s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,g="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=this.readSync(t.dataId),y=is(e.outShape,t.dtype),b=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[3]*e.outShape[4],C=e.outShape[4];for(let y=0;y<e.batchSize;++y){const $=y*x,k=y*t.strides[0];for(let y=0;y<e.inChannels;++y)for(let x=0;x<e.outDepth;++x){const I=x*s-d;let S=I;for(;S<0;)S+=a;const E=Math.min(e.inDepth,u+I),R=$+x*w;for(let s=0;s<e.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const x=Math.min(e.inHeight,h+u),w=R+s*v;for(let s=0;s<e.outWidth;++s){const r=s*i-f;let u=r;for(;u<0;)u+=l;const h=Math.min(e.inWidth,c+r),p=w+s*C;let v=g,$=0,I=0;for(let e=S;e<E;e+=a){const s=k+e*t.strides[1];for(let e=d;e<x;e+=o){const r=s+e*t.strides[2];for(let e=u;e<h;e+=l){const s=m[r+e*t.strides[3]+y];if("max"===n&&s>v?v=s:"avg"===n&&($+=s,I++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}b[p+y]="avg"===n?$/I:v}}}}return y.toTensor()}avgPool3d(t,e){return Om(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){Om([t,e],"avgPool3dBackprop");const s=n.strideDepth,r=n.strideHeight,i=n.strideWidth,a=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=n.dilationDepth,h=n.dilationHeight,c=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,g=d-1-n.padInfo.front,m=f-1-n.padInfo.left,y=p-1-n.padInfo.top,b=is(e.shape,"float32"),x=1/(a*o*l),w=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let a=0;a<n.inDepth;++a)for(let o=0;o<n.inHeight;++o)for(let l=0;l<n.inWidth;++l){const v=a-g,C=o-y,$=l-m;let k=0;for(let a=0;a<d;a+=u){const o=(v+a)/s;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let s=0;s<p;s+=h){const a=(C+s)/r;if(!(a<0||a>=n.outHeight||Math.floor(a)!==a))for(let s=0;s<f;s+=c){const r=($+s)/i;r<0||r>=n.outWidth||Math.floor(r)!==r||(k+=w.get(t,o,a,r,e))}}}b.set(k*x,t,a,o,l,e)}return b.toTensor()}maxPool3d(t,e){return Om(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=is(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,g=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let m=0;m<e.inChannels;++m)for(let y=0;y<e.outDepth;++y){const b=y*s-d;let x=b;for(;x<0;)x+=a;const w=Math.min(e.inDepth,u+b);for(let s=0;s<e.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const v=Math.min(e.inHeight,h+u);for(let r=0;r<e.outWidth;++r){const p=r*i-f;let C=p;for(;C<0;)C+=l;const $=Math.min(e.inWidth,c+p);let k=Number.NEGATIVE_INFINITY,I=-1;for(let e=x;e<w;e+=a){const n=e-b;for(let s=d;s<v;s+=o){const r=s-u;for(let i=C;i<$;i+=l){const a=i-p,o=g.get(t,e,s,i,m);o>=k&&(k=o,I=n*h*c+r*h+a)}}}n.set(I,t,y,s,r,m)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,s){Om([e,n],"maxPool3dBackprop");const r=this.maxPool3dPositions(e,s),i=s.strideDepth,a=s.strideHeight,o=s.strideWidth,l=s.dilationDepth,u=s.dilationHeight,h=s.dilationWidth,c=s.effectiveFilterDepth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,f=c-1-s.padInfo.front,g=p-1-s.padInfo.left,m=d-1-s.padInfo.top,y=is(e.shape,"float32"),b=this.bufferSync(r),x=this.bufferSync(t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.inDepth;++n)for(let r=0;r<s.inHeight;++r)for(let w=0;w<s.inWidth;++w){const v=n-f,C=r-m,$=w-g;let k=0;for(let n=0;n<c;n+=l){const r=(v+n)/i;if(!(r<0||r>=s.outDepth||Math.floor(r)!==r))for(let i=0;i<d;i+=u){const l=(C+i)/a;if(!(l<0||l>=s.outHeight||Math.floor(l)!==l))for(let a=0;a<p;a+=h){const u=($+a)/o;if(u<0||u>=s.outWidth||Math.floor(u)!==u)continue;const h=c*d*p-1-b.get(t,r,l,u,e)===n*d*p+i*p+a?1:0;0!==h&&(k+=x.get(t,r,l,u,e)*h)}}}y.set(k,t,n,r,w,e)}return y.toTensor()}cast(t,e){return Wo(t,e,this)}avgPool(t,e){return Om(t,"avgPool"),Om(t,"maxPool"),Mm(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"avg").toTensor().toFloat()}resizeBilinear(t,e,n,s){Om(t,"resizeBilinear");const[r,i,a,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(he([r,e,n,o])),h=[s&&e>1?i-1:i,s&&n>1?a-1:a],c=[s&&e>1?e-1:e,s&&n>1?n-1:n];let d=0;const p=h[0]/c[0],f=h[1]/c[1];for(let s=0;s<r;s++)for(let r=0;r<e;r++){const e=p*r,h=Math.floor(e),c=e-h,g=Math.min(i-1,Math.ceil(e)),m=s*t.strides[0]+h*t.strides[1],y=s*t.strides[0]+g*t.strides[1];for(let e=0;e<n;e++){const n=f*e,s=Math.floor(n),r=n-s,i=Math.min(a-1,Math.ceil(n)),h=m+s*t.strides[2],p=y+s*t.strides[2],g=m+i*t.strides[2],b=y+i*t.strides[2];for(let t=0;t<o;t++){const e=l[h+t],n=l[p+t],s=e+(l[g+t]-e)*r,i=s+(n+(l[b+t]-n)*r-s)*c;u[d++]=i}}}return Rn(u,[r,e,n,o])}resizeBilinearBackprop(t,e,n){Om([t,e],"resizeBilinearBackprop");const[s,r,i,a]=e.shape,[,o,l]=t.shape,u=new Float32Array(s*r*i*a),h=[n&&o>1?r-1:r,n&&l>1?i-1:i],c=[n&&o>1?o-1:o,n&&l>1?l-1:l],d=h[0]/c[0],p=h[1]/c[1],f=this.readSync(t.dataId);let g=0;for(let t=0;t<s;t++){const n=t*e.strides[0];for(let t=0;t<o;t++){const s=t*d,o=Math.floor(s),h=Math.min(Math.ceil(s),r-1),c=n+o*e.strides[1],m=n+h*e.strides[1],y=s-o,b=1-y;for(let t=0;t<l;t++){const n=t*p,s=Math.floor(n),r=Math.min(Math.ceil(n),i-1),o=n-s,l=1-o,h=c+s*e.strides[2],d=c+r*e.strides[2],x=m+s*e.strides[2],w=m+r*e.strides[2],v=b*l,C=b*o,$=y*l,k=y*o;for(let t=0;t<a;t++){const e=f[g++];u[h+t]+=e*v,u[d+t]+=e*C,u[x+t]+=e*$,u[w+t]+=e*k}}}}return ra(u,[s,i,r,a],e.dtype)}resizeNearestNeighbor(t,e,n,s){Om(t,"resizeNearestNeighbor");const[r,i,a,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(r*e*n*o),h=[s&&e>1?i-1:i,s&&n>1?a-1:a],c=[s&&e>1?e-1:e,s&&n>1?n-1:n],d=h[0]/c[0],p=h[1]/c[1];let f=0;for(let h=0;h<r;h++){const r=h*t.strides[0];for(let h=0;h<e;h++){const e=d*h,c=r+Math.min(i-1,s?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=p*e,r=c+Math.min(a-1,s?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<o;t++){const e=l[r+t];u[f++]=e}}}}return Rn(u,[r,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){Om([t,e],"resizeNearestNeighborBackprop");const[s,r,i,a]=e.shape,[,o,l]=t.shape,u=new Float32Array(s*r*i*a),h=this.readSync(t.dataId),c=[n&&o>1?r-1:r,n&&l>1?i-1:i],d=[n&&o>1?o-1:o,n&&l>1?l-1:l],p=c[0]/d[0],f=c[1]/d[1],g=1/p,m=1/f,y=2*Math.ceil(g)+2,b=2*Math.ceil(m)+2;for(let c=0;c<s;c++){const s=c*e.strides[0];for(let c=0;c<r;c++){const d=s+c*e.strides[1],x=Math.floor(c*g),w=Math.floor(x-y/2);for(let g=0;g<i;g++){const x=d+g*e.strides[2],v=Math.floor(g*m),C=Math.floor(v-b/2);for(let e=0;e<a;e++){let a=0;for(let u=0;u<y;u++){const d=u+w;if(d<0||d>=o)continue;const m=s+d*t.strides[1],y=d*p;if(c===Math.min(r-1,n?Math.round(y):Math.floor(y)))for(let s=0;s<b;s++){const r=s+C;if(r<0||r>=l)continue;const o=m+r*t.strides[2],u=r*f;g===Math.min(i-1,n?Math.round(u):Math.floor(u))&&(a+=h[o+e])}}u[x+e]=a}}}}return ra(u,e.shape,e.dtype)}batchNorm(t,e,n,s,r,i){Om([t,e,n,r,s],"batchNorm");const a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=this.readSync(n.dataId),u=r?this.readSync(r.dataId):new Float32Array([1]),h=s?this.readSync(s.dataId):new Float32Array([0]),c=new Float32Array(a.length),d=h.length,p=u.length,f=l.length,g=o.length;let m=0,y=0,b=0,x=0;for(let t=0;t<a.length;++t)c[t]=h[m++]+(a[t]-o[y++])*u[b++]/Math.sqrt(l[x++]+i),m>=d&&(m=0),y>=g&&(y=0),b>=p&&(b=0),x>=f&&(x=0);return ra(c,t.shape)}localResponseNormalization4D(t,e,n,s,r){Om(t,"localResponseNormalization4D");const i=t.shape[3],a=i-1,o=this.readSync(t.dataId),l=t.size,u=new Float32Array(l);function h(t){const n=t%i;let s=t-n+Math.max(0,n-e);const r=t-n+Math.min(n+e,a);let l=0;for(;s<=r;s++){const t=o[s];l+=t*t}return l}for(let t=0;t<l;t++){const e=h(t),i=o[t]*Math.pow(n+s*e,-r);u[t]=i}return ra(u,t.shape)}LRNGrad(t,e,n,s,r,i,a){Om(t,"LRNGrad");const o=t.shape[3],l=this.readSync(t.dataId),u=this.readSync(e.dataId),h=this.readSync(n.dataId),c=new Float32Array(t.size),d=t.size;for(let t=0;t<d;t++){const e=t%o,n=t-e+Math.max(0,e-s),d=t-e+Math.min(o,e+s+1);let p=0;for(let t=n;t<d;t++)p+=Math.pow(u[t],2);p=i*p+r;for(let e=n;e<d;e++){let n=-2*i*a*u[e]*h[t]/p;t===e&&(n+=Math.pow(p,-a)),n*=l[t],c[e]+=n}}return ra(c,t.shape)}multinomial(t,e,n,s){Om(t,"multinomial");const r=e?t:Xi(t),i=r.shape[0],a=r.shape[1],o=yi([i,n],"int32"),l=this.readSync(o.dataId),u=this.readSync(r.dataId);for(let t=0;t<i;++t){const e=t*a,r=new Float32Array(a-1);r[0]=u[e];for(let t=1;t<r.length;++t)r[t]=r[t-1]+u[e+t];const i=Di.alea(s.toString()),o=t*n;for(let t=0;t<n;++t){const e=i();l[o+t]=r.length;for(let n=0;n<r.length;n++)if(e<r[n]){l[o+t]=n;break}}}return o}oneHot(t,e,n,s){Om(t,"oneHot");const r=new Float32Array(t.size*e);r.fill(s);const i=this.readSync(t.dataId);for(let s=0;s<t.size;++s)i[s]>=0&&i[s]<e&&(r[s*e+i[s]]=n);return sa(r,[t.size,e],"int32")}nonMaxSuppression(t,e,n,s,r){Om(t,"nonMaxSuppression");const i=this.readSync(t.dataId),a=this.readSync(e.dataId);return zm(i,a,n,s,r)}fft(t){return this.fftBatch(t,!1)}ifft(t){return this.fftBatch(t,!0)}fftBatch(t,e){const n=t.shape[0],s=t.shape[1],r=is(t.shape,"float32"),i=is(t.shape,"float32"),a=Ei(t).as2D(n,s),o=ri(t).as2D(n,s);for(let t=0;t<n;t++){const n=a.slice([t,0],[1,s]),l=o.slice([t,0],[1,s]),u=Sn(n,l),h=this.readSync(this.fftImpl(u,e).dataId);for(let e=0;e<s;e++){const n=Lo(h,e);r.values[t*s+e]=n.real,i.values[t*s+e]=n.imag}}return Sn(r.toTensor(),i.toTensor()).as2D(n,s)}fftImpl(t,e){const n=t.as1D(),s=n.size;if(this.isExponentOf2(s)){let r=this.fftRadix2(n,s,e).as2D(t.shape[0],t.shape[1]);return e&&(r=Sn(Ei(r).div(Ws(s)),ri(r).div(Ws(s)))),r}{const n=this.readSync(t.dataId),r=_o(this.fourierTransformByMatmul(n,s,e));return Sn(r.real,r.imag).as2D(t.shape[0],t.shape[1])}}isExponentOf2(t){return 0==(t&t-1)}fftRadix2(t,e,n){if(1===e)return t;const s=this.readSync(t.dataId),r=e/2,i=Oo(s);let a=Sn(i.real,i.imag).as1D();const o=Mo(s);let l=Sn(o.real,o.imag).as1D();a=this.fftRadix2(a,r,n),l=this.fftRadix2(l,r,n);const u=Bo(e,n),h=Sn(u.real,u.imag).mul(l),c=a.add(h),d=a.sub(h),p=Ei(c).concat(Ei(d)),f=ri(c).concat(ri(d));return Sn(p,f).as1D()}fourierTransformByMatmul(t,e,n){const s=new Float32Array(2*e);for(let r=0;r<e;r++){let i=0,a=0;for(let s=0;s<e;s++){const o=Po(r*s,e,n),l=Lo(t,s);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=e,a/=e),zo(s,i,a,r)}return s}depthToSpace(t,e,n){ae("NHWC"===n,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${n}`)),ae(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const s=t.shape[0],r=t.shape[1],i=t.shape[2],a=t.shape[3],o=r*e,l=i*e,u=a/(e*e),h=this.readSync(t.dataId),c=new Float32Array(s*o*l*u);let d=0;for(let t=0;t<s;++t)for(let n=0;n<o;++n){const s=Math.floor(n/e),o=n%e;for(let n=0;n<l;++n){const l=Math.floor(n/e),p=(o*e+n%e)*u;for(let e=0;e<u;++e){const n=e+p+a*(l+i*(s+r*t));c[d++]=h[n]}}}return ra(c,[s,o,l,u])}broadcastedBinaryOp(t,e,n,s){const r=Vr(t.shape,e.shape),i=is(r,n),a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=Wr(t.shape,r),u=Wr(e.shape,r),h=i.values;if(l.length+u.length===0)for(let t=0;t<h.length;++t)h[t]=s(a[t%a.length],o[t%o.length]);else{const n=this.bufferSync(t),r=this.bufferSync(e);for(let c=0;c<h.length;++c){const d=i.indexToLoc(c),p=d.slice(-t.rank);l.forEach((t=>p[t]=0));const f=n.locToIndex(p),g=d.slice(-e.rank);u.forEach((t=>g[t]=0));const m=r.locToIndex(g);h[c]=s(a[f],o[m])}}return i.toTensor()}broadcastedBinaryComplexOp(t,e,n){const s=Vr(t.shape,e.shape),r=is(s,"float32"),i=is(s,"float32"),a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=Wr(t.shape,s),u=Wr(e.shape,s),h=r.values,c=i.values;if(l.length+u.length===0)for(let t=0;t<h.length;t++){const e=t%a.length,s=t%o.length,r=n(a[2*e],a[2*e+1],o[2*s],o[2*s+1]);h[t]=r.real,c[t]=r.imag}else{const s=this.bufferSync(this.data.get(t.dataId).complexTensors.real),i=this.bufferSync(this.data.get(e.dataId).complexTensors.real);for(let d=0;d<h.length;d++){const p=r.indexToLoc(d),f=p.slice(-t.rank);l.forEach((t=>f[t]=0));const g=s.locToIndex(f),m=p.slice(-e.rank);u.forEach((t=>m[t]=0));const y=i.locToIndex(m),b=n(a[2*g],a[2*g+1],o[2*y],o[2*y+1]);h[d]=b.real,c[d]=b.imag}}return this.complex(r.toTensor(),i.toTensor())}split(t,e,n){return Bm(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,s,r,i){const[a,o,l,u]=t.shape,h=e.shape[0],[c,d]=s,p=is([h,c,d,u],"float32"),f=this.readSync(e.dataId),g=this.readSync(n.dataId),m=this.readSync(t.dataId),y=t.strides,b=p.strides;for(let t=0;t<h;t++){const e=4*t,n=f[e],s=f[e+1],h=f[e+2],x=f[e+3],w=g[t];if(w>=a)continue;const v=c>1?(h-n)*(o-1)/(c-1):0,C=d>1?(x-s)*(l-1)/(d-1):0;for(let e=0;e<c;e++){const a=c>1?n*(o-1)+e*v:.5*(n+h)*(o-1);if(a<0||a>o-1)for(let n=0;n<d;n++)for(let s=0;s<u;s++){const r=s+n*b[2]+e*b[1]+t*b[0];p.values[r]=i}else if("bilinear"===r){const n=Math.floor(a),r=Math.ceil(a),o=a-n;for(let a=0;a<d;a++){const h=d>1?s*(l-1)+a*C:.5*(s+x)*(l-1);if(h<0||h>l-1){for(let n=0;n<u;n++){const s=n+a*b[2]+e*b[1]+t*b[0];p.values[s]=i}continue}const c=Math.floor(h),f=Math.ceil(h),g=h-c;for(let s=0;s<u;s++){let i=s+c*y[2]+n*y[1]+w*y[0];const l=m[i];i=s+f*y[2]+n*y[1]+w*y[0];const u=m[i];i=s+c*y[2]+r*y[1]+w*y[0];const h=m[i];i=s+f*y[2]+r*y[1]+w*y[0];const d=l+(u-l)*g,x=h+(m[i]-h)*g;i=s+a*b[2]+e*b[1]+t*b[0],p.values[i]=d+(x-d)*o}}}else for(let n=0;n<d;++n){const r=d>1?s*(l-1)+n*C:.5*(s+x)*(l-1);if(r<0||r>l-1){for(let s=0;s<u;s++){const r=s+n*b[2]+e*b[1]+t*b[0];p.values[r]=i}continue}const o=Math.round(r),h=Math.round(a);for(let s=0;s<u;s++){const r=s+o*y[2]+h*y[1]+w*y[0],i=s+n*b[2]+e*b[1]+t*b[0];p.values[i]=m[r]}}}}return p.toTensor()}sparseToDense(t,e,n,s){const{sliceRank:r,numUpdates:i,sliceSize:a,strides:o,outputSize:l}=Co(0,t,n);return this.scatter(t,e,n,l,a,i,r,o,s,!1)}gatherND(t,e){const n=e.shape,s=n[n.length-1],[r,i,a,o]=xo(t,e);if(0===i)return Rn([],r,t.dtype);const l=new Ke([i,a],t.dtype),u=this.readSync(e.dataId),h=this.readSync(t.dataId);for(let e=0;e<i;e++){const n=[];let r=0;for(let t=0;t<s;t++){const i=u[e*s+t];r+=i*o[t],n.push(i)}if(r<0||r>=t.size/a)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<a;t++)l.values[e*a+t]=h[r*a+t]}return l.toTensor().reshape(r)}scatterND(t,e,n){const{sliceRank:s,numUpdates:r,sliceSize:i,strides:a,outputSize:o}=Co(0,t,n),l=Ws(0);return this.scatter(t,e,n,o,i,r,s,a,l,!0)}fill(t,e,n){const s=we(n=n||Ie(e),he(t));return s.fill(e),_s().makeTensor(s,t,n,this)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)}zerosLike(t){const e=we(t.dtype,he(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return Vo(t,e,n)}scatter(t,e,n,s,r,i,a,o,l,u){const h=[s/r,r],c=this.readSync(t.dataId),d=this.readSync(e.dataId);if(0===s)return Rn([],n,e.dtype);const p=new Ke(h,e.dtype);p.values.fill(this.readSync(l.dataId)[0]);for(let t=0;t<i;t++){const i=[];let l=0;for(let e=0;e<a;e++){const n=c[t*a+e];i.push(n),l+=n*o[e]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[l*r+n]+=d[t*r+n]:p.values[l*r+n]=0===e.rank?d[0]:d[t*r+n]}return p.toTensor().reshape(n)}}Bs("cpu",(()=>new Gm),1);const Hm={kernelName:O,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;Om(n,"cos");const r=s.data.get(n.dataId).values,i=he(n.shape),a=new Float32Array(i);for(let t=0;t<i;++t)a[t]=Math.cos(r[t]);return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},jm={kernelName:B,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r}=t,{strides:i,pad:a,dilations:o}=n,l=e,u=l.data.get(s.dataId).values,h=s.shape.length,c=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:C,filterWidth:$,dilationHeight:k,dilationWidth:I,outShape:S}=rr(s.shape,r.shape,i,a,"NHWC",o),E=he(S),R=S.length,A=we(s.dtype,E);for(let t=0;t<p;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let i=0;i<b;++i){const a=i*v-x.left;for(let o=0;o<m;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<C;++e){const i=n+e*k;if(i>=0&&i<f)for(let n=0;n<$;++n){const p=a+n*I;if(p>=0&&p<g){const a=ze([t,i,p,o],h,Re(s.shape)),f=ze([e,n,o],d,Re(r.shape)),g=u[a]+c[f];g>l&&(l=g)}}}A[ze([t,e,i,o],R,Re(S))]=l}}}return{dataId:l.write(Ae(A,s.dtype),S,s.dtype),shape:S,dtype:s.dtype}}},qm={kernelName:W,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,h=Te(s.shape,u.data.get(s.dataId).values),c=Te(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:$,dilationWidth:k,outShape:I}=rr(s.shape,r.shape,a,o,"NHWC",l);ae(i.rank===I.length,(()=>`Error in ${W}, dy must have the same rank as output ${I.length}, but got ${i.rank}`));const S=Te(I,u.data.get(i.dataId).values),E=_e(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<m;++e){const n=e*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<v;++e){const s=n+e*$;if(s>=0&&s<p)for(let n=0;n<C;++n){const u=r+n*k;if(u>=0&&u<f){const r=h[t][s][u][i]+c[e][n][i];r>a&&(a=r,o=e,l=n)}}}E[o][l][i]+=S[t][e][s][i]}}}return{dataId:u.write(Ae(E,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Km={kernelName:P,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,h=Te(s.shape,u.data.get(s.dataId).values),c=Te(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:$,dilationWidth:k,outShape:I}=rr(s.shape,r.shape,a,o,"NHWC",l);ae(i.rank===I.length,(()=>`Error in ${P}, dy must have the same rank as output ${I.length}, but got ${i.rank}`));const S=Te(I,u.data.get(i.dataId).values),E=_e(s.shape,s.dtype);for(let t=0;t<d;++t)for(let e=0;e<m;++e){const n=e*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let e=0;e<v;++e){const s=n+e*$;if(s>=0&&s<p)for(let n=0;n<C;++n){const u=r+n*k;if(u>=0&&u<f){const r=h[t][s][u][i]+c[e][n][i];r>a&&(a=r,o=s,l=u)}}}E[t][o][l][i]+=S[t][e][s][i]}}}return{dataId:u.write(Ae(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function Xm(t,e){return{kernelName:t,backendName:"cpu",kernelFunc:({inputs:n,backend:s})=>{const{a:r,b:i}=n,a=s;Om([r,i],t);const o=a.data.get(r.dataId).values,l=a.data.get(i.dataId).values,[u,h]=e(r.shape,i.shape,o,l,r.dtype);return{dataId:a.write(u,h,r.dtype),shape:h,dtype:r.dtype}}}}function Ym(t){return(e,n,s,r,i)=>{const a=Vr(e,n),o=a.length,l=Re(a),u=xe(i,he(a)),h=e.length,c=n.length,d=Re(e),p=Re(n),f=Wr(e,a),g=Wr(n,a);if(f.length+g.length===0)for(let e=0;e<u.length;++e)u[e]=t(s[e%s.length],r[e%r.length]);else for(let e=0;e<u.length;++e){const n=Be(e,o,l),i=n.slice(-h);f.forEach((t=>i[t]=0));const a=ze(i,h,d),m=n.slice(-c);g.forEach((t=>m[t]=0));const y=ze(m,c,p);u[e]=t(s[a],r[y])}return[u,a]}}const Jm=Ym(((t,e)=>t/e)),Zm=Xm(U,Jm),Qm={kernelName:G,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,r=n,i=xe(s.dtype,he(s.shape)),[a,o,l,u]=s.shape,h=r.data.get(s.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let s=0;s<l;s++){const r=s*u;for(let o=0;o<u;o++){const c=[a,t,s,o][2],d=Math.round(l-c),p=e+n+r+o;let f=h[p];d>=0&&d<l&&(f=h[e+n+d*u+o]),i[p]=f}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},ty={kernelName:Y,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}};function ey(t,e,n,s){const r=xe(s,he(n));for(let n=0;n<r.length;++n){const s=n*e;let i=t[s];for(let n=0;n<e;++n){const e=t[s+n];e>i&&(i=e)}r[n]=i}return r}function ny(t,e,n,s,r){const i=e.length,a=he(e),o=Re(e),l=Re(r),u=xe(n,he(r));for(let e=0;e<a;++e){const n=Be(e,i,o),r=new Array(n.length);for(let t=0;t<r.length;t++)r[t]=n[s[t]];u[ze(r,i,l)]=t[e]}return u}const sy={kernelName:nt,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{reductionIndices:r,keepDims:i}=e,a=n;let o=s.shape;const l=o.length,u=ye(r,o);let h=u;const c=Ys(h,l);let d=a.data.get(s.dataId).values;if(null!=c){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=o[c[e]];d=ny(d,o,s.dtype,c,t),h=Zs(h.length,l),o=t}Om(s,"max"),Xs("max",h,l);const[p,f]=qs(o,h),g=ey(d,he(f),p,s.dtype),m=a.write(g,p,s.dtype);let y=p;return i&&(y=Ks(p,u)),{dataId:m,shape:y,dtype:s.dtype}}},ry={kernelName:at,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;Om(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,h=ir(s.shape,r,i,[1,1],a),[c,d]=function(t,e,n,s,r){const i=Mm(t,0,n,Re(e),r,"max"),a=Lm(t,e,n,r,!0,s);return[i.values,a.values]}(u,s.shape,s.dtype,o,h),p=l.write(c,h.outShape,s.dtype),f=l.write(d,h.outShape,s.dtype);return[{dataId:p,shape:h.outShape,dtype:s.dtype},{dataId:f,shape:h.outShape,dtype:"int32"}]}},iy=Fa,ay={kernelName:ct,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e;Om(s,"NonMaxSuppressionPadded");const h=u.data.get(s.dataId).values,c=u.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=iy(h,c,i,a,o,l);return[d,p]}},oy=_a,ly={kernelName:dt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=n,u=e;Om(s,"NonMaxSuppressionWithScore");const h=u.data.get(s.dataId).values,c=u.data.get(r.dataId).values,d=i,p=a,f=o,g=l,{selectedIndices:m,selectedScores:y}=oy(h,c,d,p,f,g);return[m,y]}},uy={kernelName:gt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,constantValue:a}=s;Om(r,"pad");const o=i.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=i.map((t=>t[0])),u=n.data.get(r.dataId).values,h=he(r.shape),c=r.shape.length,d=Re(r.shape),p=he(o),f=o.length,g=Re(o),m=xe(r.dtype,p);0!==a&&m.fill(a);for(let t=0;t<h;t++)m[ze(Be(t,c,d).map(((t,e)=>t+l[e])),f,g)]=u[t];return{dataId:n.write(m,o,r.dtype),shape:o,dtype:r.dtype}}};function hy(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:i}=s;return n.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}const cy={kernelName:xt,backendName:"cpu",kernelFunc:hy},dy={kernelName:jt,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=xe(s.dtype,he(s.shape)),[u,h,c,d]=s.shape,[p,f]=po(a,h,c),g=Math.sin(r),m=Math.cos(r),y=o.data.get(s.dataId).values;for(let t=0;t<u;t++){const e=t*c*h*d;for(let t=0;t<h;t++){const n=t*(c*d);for(let s=0;s<c;s++){const r=s*d;for(let a=0;a<d;a++){const o=[u,t,s,a],b=o[2],x=o[1];let w=(b-p)*m-(x-f)*g,v=(b-p)*g+(x-f)*m;w=Math.round(w+p),v=Math.round(v+f);let C=i;"number"!=typeof i&&(C=3===a?255:i[a]),w>=0&&w<c&&v>=0&&v<h&&(C=y[e+v*(c*d)+w*d+a]),l[e+n+r+a]=C}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function py(t){const{inputs:e,attrs:n,backend:s}=t,{x:r}=e,{perm:i}=n;Om(r,"transpose");const a=r.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=r.shape[i[t]];const l=ny(s.data.get(r.dataId).values,r.shape,r.dtype,i,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const fy={kernelName:Wt,backendName:"cpu",kernelFunc:py},gy={kernelName:_t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,paddings:a}=s;Om([r],"spaceToBatchND");const o=he(i),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<r.shape.length;++t)l.push([0,0]);const u=uy.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=fo(u.shape,i,o,!1),c=go(h.length,i.length,!1),d=mo(u.shape,i,o,!1),p=hy({inputs:{x:u},backend:n,attrs:{shape:h}}),f=py({inputs:{x:p},backend:n,attrs:{perm:c}}),g=hy({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}},my={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;Om(n,"square");const r=s.data.get(n.dataId).values,i=new Float32Array(r.length);for(let t=0;t<r.length;++t){const e=r[t];i[t]=e*e}return{dataId:s.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},yy=Ym(((t,e)=>{const n=t-e;return n*n})),by=Xm(Lt,yy),xy=[Hm,jm,Km,qm,Zm,Qm,ty,ry,sy,ay,ly,uy,cy,dy,gy,my,by,fy];for(const t of xy)te(t);const wy={},vy={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Cy(t){t in wy||(wy[t]=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete wy[t]}),!1),1===t?e.getContext("webgl",vy)||e.getContext("experimental-webgl",vy):e.getContext("webgl2",vy)}(t));const e=wy[t];return e.isContextLost()?(delete wy[t],Cy(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),wy[t])}var $y,ky,Iy;function Sy(t,e){return[e,t]}function Ey(t){const e=he(t);return fe(Math.ceil(e/4))}function Ry(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Ay(t,e){const n=t;let s,r,i,a,o,u,h,c,d,p;return 2===l().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,h=4,c=1,d=n.HALF_FLOAT,p=n.FLOAT):(s=t.RGBA,r=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,h=4,c=4,d=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),u=t.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:h,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:p}}function Ny(t,e){const n=e();return l().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function Ty(t){return!!(l().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function Dy(t,e){return Py(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}($y||($y={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(ky||(ky={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Iy||(Iy={}));const Fy=/ERROR: [0-9]+:([0-9]+):/g;function _y(t,e){if(Ny(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Oy(t,e,n,s,r,i,a){const o=t.getAttribLocation(e,n);return-1!==o&&(Ny(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,s))),Ny(t,(()=>t.vertexAttribPointer(o,r,t.FLOAT,!1,i,a))),Ny(t,(()=>t.enableVertexAttribArray(o))),!0)}function My(t,e,n,s){Ny(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),Ny(t,(()=>t.activeTexture(t.TEXTURE0+n))),Ny(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,s))),Ny(t,(()=>t.uniform1i(n,s)))}function Ly(t,e,n){Ny(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),Ny(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function zy(t,e){Ny(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),Ny(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function By(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function Py(t,e,n){const s=Ny(t,(()=>e()));if(null==s)throw new Error(n);return s}function Wy(t,e=2){return he(t.slice(0,t.length-e))}function Uy(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Vy(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Wy(t),...Uy(t)]),e}function Gy(t){return t%2==0}function Hy(t,e){if(ce(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],s=e.slice(-1)[0];if(n===s)return!0;if(Gy(n)&&Gy(s)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Gy(t[0])&&Gy(e[0])}let jy,qy;function Ky(t,e){return null!=t.getExtension(e)}function Xy(t){try{if(null!=Cy(t))return!0}catch(t){return!1}return!1}function Yy(t){const e=Ay(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const r=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(s),r}const Jy=l();Jy.registerFlag("HAS_WEBGL",(()=>Jy.getNumber("WEBGL_VERSION")>0)),Jy.registerFlag("WEBGL_VERSION",(()=>Xy(2)?2:Xy(1)?1:0)),Jy.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Jy.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Jy.get("WEBGL_VERSION"))),Jy.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Jy.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Jy.registerFlag("WEBGL_PACK",(()=>Jy.getBool("HAS_WEBGL"))),Jy.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Jy.getBool("WEBGL_PACK"))),Jy.registerFlag("WEBGL_PACK_CLIP",(()=>Jy.getBool("WEBGL_PACK"))),Jy.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),Jy.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Jy.getBool("WEBGL_PACK"))),Jy.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Jy.getBool("WEBGL_PACK"))),Jy.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Jy.getBool("WEBGL_PACK"))),Jy.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Jy.getBool("WEBGL_PACK"))),Jy.registerFlag("WEBGL_PACK_REDUCE",(()=>Jy.getBool("WEBGL_PACK"))),Jy.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Jy.getBool("WEBGL_PACK"))),Jy.registerFlag("WEBGL_CONV_IM2COL",(()=>Jy.getBool("WEBGL_PACK"))),Jy.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==jy){const e=Cy(t);jy=e.getParameter(e.MAX_TEXTURE_SIZE)}return jy}(Jy.getNumber("WEBGL_VERSION")))),Jy.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==qy){const e=Cy(t);qy=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,qy)}(Jy.getNumber("WEBGL_VERSION")))),Jy.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=Jy.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Cy(t);return e=Ky(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Ky(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),Jy.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Jy.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}())),Jy.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=Cy(t);if(1===t){if(!Ky(e,"OES_texture_float"))return!1}else if(!Ky(e,"EXT_color_buffer_float"))return!1;return Yy(e)}(Jy.getNumber("WEBGL_VERSION")))),Jy.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Jy.getBool("WEBGL_FORCE_F16_TEXTURES")&&Jy.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Jy.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=Cy(t);if(1!==t){if(Ky(e,"EXT_color_buffer_float"))return Yy(e);const t="EXT_color_buffer_half_float";if(Ky(e,t)){const n=e.getExtension(t);return function(t,e){const n=Ay(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(r),i}(e,n)}return!1}return!!Ky(e,"OES_texture_float")&&!!Ky(e,"WEBGL_color_buffer_float")&&Yy(e)}(Jy.getNumber("WEBGL_VERSION")))),Jy.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=Jy.getNumber("WEBGL_VERSION"))&&null!=Cy(t).fenceSync;var t})),Jy.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Jy.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Jy.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));class Zy{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class Qy{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}class tb{constructor(t,e,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function eb(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function nb(t,e){return 1===e?[t]:eb(t,e)}function sb(){let t,e,n,s,r,i,a,o,u,h;return 2===l().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",s="in",r="texture",i="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",h="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",s="varying",r="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",h="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:r,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:u,defineRound:h}}function rb(t,e,n="index"){const s=Re(e);return s.map(((e,r)=>`int ${t[r]} = ${n} / ${e}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${e}`:`index -= ${t[r]} * ${e}`};`)).join("")}function ib(t){const e=Re(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const ab="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:ob}=s;function lb(t,e,n,s){const r=[];t.forEach((t=>{const e=he(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`))}));const i=r.join("\n"),a=t.map((t=>function(t,e,n=!1){let s="";s+=n?hb(t):ub(t);const r=t.shapeInfo.logicalShape,i=e.logicalShape;return r.length<=i.length&&(s+=n?function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=ob(t.shapeInfo.logicalShape,e.logicalShape),l=yb(a),u=a-i;let h;const c=["x","y","z","w","u","v"];h=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${c[t+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${c[e+u]}`)).join(", ");let p="return outputValue;";const f=1===he(t.shapeInfo.logicalShape),g=1===he(e.logicalShape);if(1!==i||f||g){if(f&&!g)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=i-2,e=i-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&ce(a,i))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=yb(l),h=ob(t.shapeInfo.logicalShape,e.logicalShape),c=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&h.length>=1?"coords = 0;":h.map((t=>`coords.${p[t+c]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+c]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(t,e)),s}(t,e,s))).join("\n"),o=e.texShape,l=sb(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let h,c,d=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${cb}\n    ${db}\n    ${pb}\n  `}(l);return e.isPacked?(h=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(ce(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),r=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),r=s*Math.ceil(t[t.length-2]/2);let i=r,a="",o="b, r, c";for(let e=2;e<t.length-1;e++)i*=t[t.length-e-1],a=`\n      int b${e} = index / ${i};\n      index -= b${e} * ${i};\n    `+a,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),c=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(h=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return ce(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=rb(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=rb(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=rb(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=rb(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}var n}(e.logicalShape,o),c=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),s&&(d+=fb),[d,u,c,i,h,a,n].join("\n")}function ub(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[s,r]=t.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[i,a]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${a}, ${gb(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${mb(t)}\n      }\n    `;const s=t.shapeInfo.texShape,r=s[0],i=s[1];if(1===i&&1===r)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const a=gb(e);return 1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===r?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${i}, index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape;if(null!=r&&ce(e,r)){const t=r[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:a}=be(e),o=i;if(o.length<e.length){const e=["row","col"];return`\n      ${ub(bb(t,o))}\n      float ${s}(int row, int col) {\n        return ${s}(${xb(e,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${mb(t)}\n      }\n    `;const l=r[0],u=r[1],h=gb(n);return 1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],i=e[2],{newShape:a,keptDims:o}=be(e),l=a;if(l.length<e.length){const e=["row","col","depth"];return`\n        ${ub(bb(t,l))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${xb(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${i}, 1)));\n        ${mb(t)}\n      }\n    `;const u=t.shapeInfo.texShape,h=u[0],c=u[1],d=t.shapeInfo.flatOffset;if(c===r&&null==d)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${c}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(c===i&&null==d)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${i} + depth + ${gb(n)};\n        vec2 uv = uvFromFlat(${h}, ${c}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],i=e[2]*r,a=e[1]*i,{newShape:o,keptDims:l}=be(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${ub(bb(t,o))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${xb(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${i}, ${r}, 1)));\n        ${mb(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,c=h[0],d=h[1];if(d===a&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${c}, ${d}, index + ${gb(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],i=e[3]*r,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=be(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${ub(bb(t,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${xb(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${r})) +\n          depth3;\n        ${mb(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,d=c[0],p=c[1];if(p===o&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${r} + depth3 + ${gb(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=be(e);if(r.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${ub(bb(t,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${xb(e,i)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,h=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${mb(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===h&&null==c)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==c)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${gb(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function hb(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${sb().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=t.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=sb();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${i.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,i=r[0],a=r[1],o=sb();if(null!=r&&ce(e,r))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===e[0]){const n=[1,2],r=["b","row","col"];return`\n        ${hb(bb(t,e.slice(1)))}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${xb(r,n)});\n        }\n      `}const a=i[0],o=i[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${a}, ${o}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${sb().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=a[0],l=a[1],u=Math.ceil(e[n-1]/2);let h=u*Math.ceil(e[n-2]/2),c="int b, int row, int col",d=`b * ${h} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)c=`int b${t}, `+c,h*=e[n-t-1],d=`b${t} * ${h} + `+d;return`\n    vec4 ${r}(${c}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${sb().texture2D}(${s}, uv);\n    }\n  `}(t)}}const cb="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",db="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pb="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fb="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function gb(t){return`offset${t}`}function mb(t){const e=t.name,n=he(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function yb(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function bb(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function xb(t,e){return e.map((e=>t[e])).join(", ")}class wb{constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ae(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=t[t.length-1],i=Math.ceil(r/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=yb(o),u=nb("coords",o);let h,c;if(1===i){c=o+1;const t=yb(c);h=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else c=o,h=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,c),p="."+d[c-1],f=d.map((t=>"int "+t)),g=nb("sourceLocR",c-1).concat("inIdx.r"),m=nb("sourceLocG",c-1).concat("inIdx.g"),y=nb("sourceLocB",c-1).concat("inIdx.b"),b=nb("sourceLocA",c-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,C=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${C}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class vb{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,h=l-1-t.padInfo.left,c=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float avgMultiplier = float(${c});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Cb{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=h-1-t.padInfo.front,f=c-1-t.padInfo.top,g=d-1-t.padInfo.left,m=1/(e*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $b{constructor(t,e,n,s,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Vr(t,e),Vr(t,n);let a="0.0";null!=s&&(Vr(t,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=r&&(Vr(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class kb{constructor(t,e,n,s,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Vr(t,e),Vr(t,n);let a="vec4(0.0)";null!=s&&(Vr(t,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(Vr(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}class Ib{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Vr(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Sb="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",Eb="return a + b;",Rb="return a - b;",Ab="return a * b;",Nb=Sb+"\n  return max(a, b);\n",Tb=Sb+"\n  return min(a, b);\n",Db=Sb+"\n  return atan(a, b);\n",Fb="return (a < 0.) ? b * a : a;";class _b{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Vr(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Ob="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n",Mb="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+Ob+"\n  return result;\n",Lb="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",zb="\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Ob+"\n  return result;\n",Bb="\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Ob+"\n  return result;\n",Pb="\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Ob+"\n  return result;\n",Wb="\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+Ob+"\n  return result;\n";class Ub{constructor(t,e,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Vr(e,n);const r=this.outputShape.length;let i="";if(s)if(0===r||1===he(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${yb(r)} coords = getOutputCoords();\n        `,1===r)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=nb("coords",r);i+=`\n            bool nextRowOutOfBounds =\n              (${t[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${t[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}class Vb{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Gb{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Hb{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class jb{constructor(t){this.outputShape=[],this.outputShape=Sr(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const s=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${s}));`)}const s=e.length,r=e[e.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class qb{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Sr(t,e);const n=this.outputShape,s=n.length,r=yb(s),i=nb("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),h=a.join();let c=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];c+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${Kb(a,l,e)}),\n            vec2(${Kb(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];c+=`\n        return getChannel(\n          getT${d}(${Kb(a,l,p)}),\n          vec2(${Kb(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${c}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Kb(t,e,n){const s=t.indexOf(e);return t.map(((t,e)=>e===s?`${t} - ${n}`:t)).join()}class Xb{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Yb{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=i?1:2,u=i?2:3,h=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${h}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Jb{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${r};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Zb{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=s-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Qb{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tx{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ex{constructor(t,e=!1,n=null,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const r=t.padInfo.top,i=t.padInfo.left,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,h=t.filterHeight,c=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,g=f?1:2,m=f?2:3,y=f?3:1;let b="",x="";n&&(b=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${r}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${m}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${c}; wC++) {\n            int xC = xCCorner + wC * ${u};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class nx{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,s=t.padInfo.left,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,c=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sx{constructor(t,e=!1,n=null,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const r=t.inHeight,i=t.inWidth,a=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,h=t.dilationHeight,c=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let g="",m="";n&&(g=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,m="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${r}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${m}\n        setOutput(result);\n      }\n    `}}class rx{constructor(t,e=!1,n=null,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const r=t.inHeight,i=t.inWidth,a=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,h=t.dilationHeight,c=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=p;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<p;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<f;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*c};\n        `,1===u){if(n<p&&(g+=o%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${r} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${r} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${r} && xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<p)){const e=o%2==0?ie(c):c;c%2==0&&o%2==1||c%2!=0&&o%2!=1?(g+=`\n                  xCOffset = xC + ${o%2} + ${e};\n\n                  if(xR >= 0 && xR < ${r} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,c>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${r} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${r} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<p&&(g+=`\n              if(xR >= 0 && xR < ${r}) {\n            `,o%2==1?(g+=`\n                xCOffset = xC + 1 - ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<p&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${u};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<p&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<p&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<p&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<p;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let m="",y="";n&&(m=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class ix{constructor(t,e,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=t,[u]=e,[h,c]=n;this.outputShape=[u,h,c,l];const d="bilinear"===s?1:0,[p,f]=[a-1+".0",o-1+".0"],[g,m,y]=h>1?[""+(a-1)/(h-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,w]=c>1?[""+(o-1)/(c-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class ax{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const s=t.length,r=e?"0.0":`getX(${ox(s,"coords")})`,i=t[t.length-1];let a="",o="";e?(a=n?"end != "+(i-1):"end != 0",o=n?"end + 1":"end - 1"):(a=n?`end + pow2 < ${i}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${yb(s)} coords = getOutputCoords();\n        int end = ${lx(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${a}) {\n          int idx = ${o};\n          ${lx(s,"coords")} = idx;\n          val += getX(${ox(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function ox(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function lx(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class ux{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=$y.DENSE;const e=Ey(t),n=sb();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${rb(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class hx{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=$y.DENSE;const e=Ey(t),n=sb();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${rb(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class cx{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class dx{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class px{constructor(t){this.variableNames=["A"],this.outTexUsage=ky.DOWNLOAD;const e=sb();this.outputShape=t,this.userCode=`\n      ${ab}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class fx{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ky.DOWNLOAD;const e=sb();this.outputShape=t,this.userCode=`\n      ${ab}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class gx{constructor(t,e,n=!1){this.variableNames=["A"];const s=sb(),[r,i]=e;this.outputShape=t;let a="result";n&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${ib(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${r}.0);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class mx{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=sb(),[r,i]=e;this.outputShape=t;let a="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${r}.0);\n              values = ${s.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${ib(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${a}\n\n        ${s.output} = ${o};\n      }\n    `}}class yx{constructor(t,e,n){this.variableNames=["real","imag"];const s=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${s}.0`:"1.0";this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${t}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}class bx{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class xx{constructor(t,e,n){this.variableNames=["A","indices"];const s=t.slice();s[n]=e,this.outputShape=s,this.rank=s.length;const r=yb(this.rank),i=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let n=0;n<t.length;n++)n===e?r.push(`int(getIndices(${s[n]}))`):r.push(`${s[n]}`);return r.join()}(t,n);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}class wx{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const s=yb(e.length),r=yb(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function vx(t,e,n,s,r,i){!function(t,e){const n=l().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return Py(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return Ny(t,(()=>t.bindTexture(o,a))),Ny(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),Ny(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),Ny(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),Ny(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),Ny(t,(()=>t.texImage2D(o,0,s,e,n,0,r,i,null))),Ny(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),a}function Cx(t){return t.internalFormatFloat}function $x(t){return t.internalFormatHalfFloat}function kx(t){return t.downloadTextureFormat}function Ix(t){return t.internalFormatPackedFloat}function Sx(t){return t.internalFormatPackedHalfFloat}class Ex{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=l().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){wy[t]=e}(e,t)):this.gl=Cy(e);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===l().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=Dy(this.gl,t),Ky(this.gl,e))this.textureHalfFloatExtension=Dy(this.gl,e);else if(l().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ky(this.gl,s))this.colorBufferHalfFloatExtension=Dy(this.gl,s);else if(l().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ky(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Ky(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(t){return function(t,e){const n=Py(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return Ny(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),Ny(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=Py(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return Ny(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),Ny(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return Py(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Ay(this.gl,this.textureHalfFloatExtension)}get debug(){return l().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Ny(t,(()=>t.finish())),Ny(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),Ny(t,(()=>t.deleteFramebuffer(this.framebuffer))),Ny(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),Ny(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),Ny(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=Sy(e,n);return vx(t,r,i,Cx(s),s.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=Sy(e,n);return vx(t,r,i,$x(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=Sy(e,n);return vx(t,r,i,kx(s),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){Ny(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?Ny(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):Ny(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),Ny(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,s){this.throwIfDisposed(),function(t,e,n,s,r,i){let a,o,l;Ny(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(a=new Uint8Array(n*s*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*s*4),o=t.FLOAT,l=i.internalFormatPackedFloat),a.set(r),Ny(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,o,a))),Ny(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=Ry(e,n);return vx(t,r,i,Sx(s),t.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=Ry(e,n);return vx(t,r,i,Ix(s),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(zy(this.gl,this.framebuffer),this.outputTexture=null),Ny(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,s){const[r,i]=Sy(e,n),a=new Uint8Array(e*n*4);return Ny(t,(()=>t.readPixels(0,0,r,i,s.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,s,r,i){return function(t,e,n,s,r,i,a,o){const l=t,u=new Float32Array(function(t,e){const[n,s]=Ry(t,e);return n*s*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const s=t,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const s=function(t,e,n,s){const r=t.createBuffer();Ny(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r)));const i=16*e*n;return Ny(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),Ny(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),Ny(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(l().getBool("WEBGL_FENCE_API_ENABLED")){const s=t,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=s.clientWaitSync(r,0,0);return t===s.ALREADY_SIGNALED||t===s.CONDITION_SATISFIED},e=r}else l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const s=new Float32Array(e*n*4);return Ny(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s))),s}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=Py(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Ny(t,(()=>t.shaderSource(n,e))),Ny(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=Fy.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const s=+n[1],r=t.split("\n"),i=r.length.toString().length+2,a=r.map(((t,e)=>ge((e+1).toString(),i)+t));let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,s-1),u=a.slice(s-1,s),h=a.slice(s);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${ge(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),s=function(t){const e=sb();return function(t,e){const n=Py(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Ny(t,(()=>t.shaderSource(n,e))),Ny(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),r=function(t){return Py(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return Ny(e,(()=>e.attachShader(r,s))),Ny(e,(()=>e.attachShader(r,n))),function(t,e){if(Ny(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,r),this.debug&&_y(e,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(t,e,n){return Ny(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),Oy(t,e,"clipSpacePos",n,3,20,0)&&Oy(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Ny(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&_y(this.gl,this.program),Ny(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return Py(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Ny(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),My(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[s,r]=Ry(e,n);this.setOutputMatrixTextureDriver(t,s,r)}setOutputMatrixWriteRegion(t,e,n,s){this.setOutputMatrixWriteRegionDriver(n,t,s,e)}setOutputPackedMatrixWriteRegion(t,e,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&_y(this.gl,this.program),By(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Ny(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ny(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Dy(this.gl,2===l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await me((()=>this.disposed||this.isQueryAvailable(t,l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||me((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Ly(this.gl,t,this.framebuffer),this.debug&&By(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Ly(this.gl,this.outputTexture,this.framebuffer),this.debug&&By(this.gl)):zy(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const s=this.gl;Ly(s,t,this.framebuffer),this.debug&&By(s),this.outputTexture=t,Ny(s,(()=>s.viewport(0,0,e,n))),Ny(s,(()=>s.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,s){this.throwIfDisposed(),Ny(this.gl,(()=>this.gl.scissor(t,e,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function Rx(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const s=t.logicalShape,r=e[n],i=r.shape;if(!ce(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(t.isUniform&&r.isUniform)return;const a=t.texShape,o=r.isUniform?null:r.texData.texShape;if(!ce(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}class Ax{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:s,inChannels:r,strideWidth:i,strideHeight:a,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:h,dataFormat:c}=n,{left:d,top:p}=o,f=r*s,g=sb(),m="channelsLast"===c,y=m?0:1,b=m?1:2;let x="";for(let n=0;n<=1;n++)for(let s=0;s<=1;s++)x+=`\n          blockIndex = rc.y + ${s};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${a} - ${p};\n            d0 = offsetY + ${h} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${i}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${r}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${r}.));\n\n                if (${m}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+s}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+s}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${g.output} = result;\n      }\n    `}}class Nx{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Tx{constructor(t,e,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class Dx{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class Fx{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,s=t.dilationHeight,r=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=r-1-t.padInfo.top,o=i-1-t.padInfo.left,l=r*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _x{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=o-1-t.padInfo.front,c=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${c}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ox{constructor(t,e,n=!1,s=!1,r=!1,i=null,a=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const o=n?t[1]:t[2],l=Math.ceil(o/2),u=n?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",c=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let p="",f="";i&&(p=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,f="result = activation(result);");const g=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${p}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          vec4 a = getMatrixA(rc.x, ${u});\n          vec4 b = getMatrixB(rc.x, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${d[0]});\n          result += (${c[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${f}\n\n        setOutput(result);\n      }\n    `}}class Mx{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class Lx{constructor(t,e,n,s){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class zx{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=nb("rc",e),s=yb(e),r=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let s="";for(let r=t-2;r<t;r++)s+=`${n[r]} >= ${e[r]}`,r<t-1&&(s+="||");return s}(e,t,n),i=function(t,e,n,s){if(1===t)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),a=function(t,e){const n=t.length,s=function(t,e){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<t;n++)i=`${e[e.length-1-n]},`+i;n.push(i)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}}class Bx{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=yb(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Px{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=yb(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=nb("rc",s),l=nb("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,h=1===s?"source":`vec2(${l.slice(-2).join()})`,c=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===s?2:4;t<e;t++)p+=`\n        ${c[t]}\n        if (${d}) {\n          result[${t}] = float(${n});\n        } else {\n          ${r} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${h});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class Wx{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,c=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,m=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${c};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?g:m:`wR * ${c} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(i/4),w=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Ux{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,c=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,g=t.padInfo.front,m=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${c}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(i/4),C=i%4,$=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${c};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${c}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${c}, ch)\n              );\n\n              ${$}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${2===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${3===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${c}, ch),\n                initializationValue\n              );\n\n              ${$}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}class Vx{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=t;this.outputShape=[s,i];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),h=n%4;let c=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(a="1.0",c="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",c="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${c}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${c}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${c}\n        }\n        setOutput(${l});\n      }\n    `}}class Gx{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var s;this.userCode=`\n      ${s=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${rb(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${ib(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Hx{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,s,r]=e.shape,[,i,a]=t.shape,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],h=o[1]/l[1],c=1/u,d=1/h,p=2*Math.ceil(c)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${c});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class jx{constructor(t,e,n,s){this.variableNames=["A"],this.outputShape=[];const[r,i,a,o]=t;this.outputShape=[r,e,n,o];const l=[s&&e>1?i-1:i,s&&n>1?a-1:a],u=[s&&e>1?e-1:e,s&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class qx{constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,i,a,o]=t;this.outputShape=[r,e,n,o];const l=[s&&e>1?i-1:i,s&&n>1?a-1:a],u=[s&&e>1?e-1:e,s&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]},\n          ${l[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${a}.0,\n                                     ${a}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class Kx{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,s,r]=e.shape,[,i,a]=t.shape,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],h=o[1]/l[1],c=1/u,d=1/h,p=2*Math.ceil(c)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${c});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Xx{constructor(t,e,n,s){this.variableNames=["A"],this.outputShape=[];const[r,i,a,o]=t;this.outputShape=[r,e,n,o];const l=[s&&e>1?i-1:i,s&&n>1?a-1:a],u=[s&&e>1?e-1:e,s&&n>1?n-1:n],h=s?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Yx{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const s=t.map(((n,s)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=yb(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class Jx{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const s=nb("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,a=yb(n);function o(n){const s=t.map(((s,r)=>function(n,s){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(s.slice())};\n          if(${r}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(s.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class Zx{constructor(t,e,n,s,r,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=yb(r.length),l=yb(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const h=`getIndices(${u})`;let c="";1===s?c="i":2===s&&(c="i, coords[1]");const d=`getUpdates(${c})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class Qx{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,s=t.batchSize,r=t.inSize,i=t.numSegments,a=i*Math.ceil(r/n);this.outputShape=[s,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${c}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class tw{constructor(t,e,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let s=0;s<e.length;s++)a.push(`${n[s]}`),s<t&&i.push(`${n[s]}`);s=i.join(),r=a.join()}const i=yb(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}class ew{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=yb(this.rank),n=`uniform int start[${this.rank}];`,s=function(t){if(1===t)return"sourceLoc";if(t<=6)return nw.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${nw[e]} = start[${e}] + coords.${nw[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const nw=["x","y","z","w","u","v"];class sw{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=yb(this.rank),n=nb("coords",this.rank),s=nb("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${r})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${i};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${s[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class rw{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=yb(n.length),i=yb(n.length);let a="";if(1===s)a="coords * strides + begin";else{let t=0;a=n.map(((e,s)=>(t++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${t-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${t});\n      ${r} strides = ${r}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class iw{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const s=ow(e,n),r=lw(t,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=aw(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[r].shift();return this.usedTextures[r].push(t),t}let a;return s===Iy.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):s===Iy.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):s===Iy.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):s===Iy.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):s===Iy.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,s){if(null==this.freeTextures)return;const r=ow(n,s),i=lw(e,r,s);i in this.freeTextures||(this.freeTextures[i]=[]);const a=aw(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=l().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[i],h=u.indexOf(t);if(h<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(h,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function aw(t,e,n,s,r){const i=function(t,e){switch(t){case Iy.PACKED_2X2_FLOAT32:return Ix(e);case Iy.PACKED_2X2_FLOAT16:return Sx(e);case Iy.UNPACKED_FLOAT32:return Cx(e);case Iy.UNPACKED_FLOAT16:return $x(e);case Iy.PACKED_4X1_UNSIGNED_BYTE:return kx(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,s);let a;if(r){const[e,n]=Ry(t[0],t[1]);a=e*n}else{const[e,n]=Sy(t[0],t[1]);a=e*n}const o=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,i);return a*o}function ow(t,e){if(t===ky.UPLOAD)return Iy.PACKED_2X2_FLOAT32;if(t===ky.RENDER||null==t)return function(t){return l().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Iy.PACKED_2X2_FLOAT32:Iy.UNPACKED_FLOAT32:t?Iy.PACKED_2X2_FLOAT16:Iy.UNPACKED_FLOAT16}(e);if(t===ky.DOWNLOAD||t===ky.PIXELS)return Iy.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function lw(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class uw{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const s=yb(this.rank),r=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let e=0;e<t.length;e++)s.push(`imod(${n[e]}, ${t[e]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}class hw{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const cw="if (isnan(x)) return x;",dw="return abs(x);",pw=cw+"\n  return (x < 0.0) ? 0.0 : x;\n",fw=cw+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",gw="return (x >= 0.0) ? x : (exp(x) - 1.0);",mw=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${$o};\n  float scale = ${ko};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,yw="return -x;",bw="return ceil(x);",xw="return floor(x);",ww="return exp(x);",vw="return exp(x) - 1.0;",Cw=cw+"\n  return sin(x);\n",$w=cw+"\n  return cos(x);\n",kw=cw+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",Iw=cw+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",Sw=cw+"\n  return atan(x);\n",Ew=cw+"return log(x + sqrt(x * x + 1.0));",Rw=cw+"\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));",Aw=cw+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;",Nw=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Io};\n  float a1 = ${So};\n  float a2 = ${Eo};\n  float a3 = ${Ro};\n  float a4 = ${Ao};\n  float a5 = ${No};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Tw="return x;",Dw="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Fw="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",_w="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class Ow{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Mw{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=nb("rc",e),s=yb(e),r=function(t,e){if(1===t)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const{segment_util:Lw}=s,zw=Go,Bw=Ho,Pw=jo,Ww=qo,Uw={};function Vw(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?Dw:pw;if("elu"===t)return e?_w:gw;if("relu6"===t)return e?Fw:fw;if("prelu"===t)return e?Lb:Fb;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class Gw extends Xo{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!l().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Cy(l().getNumber("WEBGL_VERSION"));this.binaryCache=((e=l().getNumber("WEBGL_VERSION"))in Uw||(Uw[e]={}),Uw[e]),this.gpgpu=new Ex(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new iw(this.gpgpu),this.numMBBeforeWarning=null==l().global.screen?1024:l().global.screen.height*l().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Ko(this,_s())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((l().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||l().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={};return this.texData.set(s,{shape:e,dtype:n,values:t,usage:ky.UPLOAD}),s}move(t,e,n,s){if(l().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:s,values:e,usage:ky.UPLOAD})}readSync(t){const e=this.texData.get(t),{values:n,dtype:s,complexTensors:r,slice:i,shape:a,isPacked:o}=e;if(null!=i){let e;e=o?new Ow(a,Tw):new hw(a,Tw);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeData(n.dataId),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===s)return n;const l=null!=this.activeTimers;let u,h;return l&&(u=Oe()),h="complex64"===s?Fo(r.real.dataSync(),r.imag.dataSync()):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=Oe()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:s,slice:r,dtype:i,complexTensors:a,isPacked:o}=e;if(null!=r){let e;e=o?new Ow(s,Tw):new hw(s,Tw);const n=this.runWebGLProgram(e,[{dataId:t,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeData(n.dataId),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(!l().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===l().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,h,c=null;if("complex64"!==i&&l().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...Ey(s))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([a.real.data(),a.imag.data()]);h=Fo(t[0],t[1])}else if(null==c)h=this.getValuesFromTexture(t);else{const t=he(s);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=u&&this.disposeData(u.dataId);const d=this.convertAndCacheOnCPU(t,h),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(d))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),d}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!Ty(n)){if(l().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:s}=this.texData.get(t),r=he(e);if(l().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),s=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...Ey(e)).subarray(0,r);return this.disposeData(n.dataId),i}const i=l().getBool("WEBGL_PACK")&&!0===s,a=i?Vy(e):e,o=i?new fx(a):new px(a),u=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),h=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture,h.texShape[0],h.texShape[1]).subarray(0,r);return this.disposeData(u.dataId),c}async time(t){const e=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=ue(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=ue(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(r);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Oe(),endMs:null}}endTimer(t){return l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Oe(),t)}async getQueryTime(t){if(l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;this.releaseGPUData(t);const{complexTensors:e}=this.texData.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:s,usage:r,isPacked:i,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(e,s,r,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return l().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=_s().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||l().getBool("IS_TEST")||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&he(t.shape)<e))}getGPGPUContext(){return this.gpgpu}complex(t,e){const n=this.makeOutput(t.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:_s().keep(t.clone()),imag:_s().keep(e.clone())},n}real(t){return this.texData.get(t.dataId).complexTensors.real.clone()}imag(t){return this.texData.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);if(0===he(n))return Rn([],n,t.dtype);const{isPacked:s}=this.texData.get(t.dataId),r=Es(t.shape,e,n);if(s||!r){const s=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sw(n):new ew(n),r=s.getCustomSetupFunc(e);return this.compileAndRun(s,[t],null,r)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const s=this.texData.get(t.dataId),r=this.makeOutput(n,t.dtype),i=this.texData.get(r.dataId);Object.assign(i,s),i.shape=n,i.dtype=t.dtype;let a=Rs(e,t.strides);s.slice&&(a+=s.slice.flatOffset),i.slice={flatOffset:a,origDataId:s.slice&&s.slice.origDataId||t.dataId};const o=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,o+1),r}stridedSlice(t,e,n,s){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,s);const r=ys(e,n,s);if(r.some((t=>0===t)))return Rn([],r);const i=new rw(e,s,r);return this.compileAndRun(i,[t])}reverse(t,e){const n=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Jx(t.shape,e):new Yx(t.shape,e);return this.compileAndRun(n,[t])}concat(t,e){if("complex64"===t[0].dtype){const n=t.map((t=>Ei(t))),s=t.map((t=>ri(t)));return Sn(this.concat(n,e),this.concat(s,e))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>l().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const n=Math.floor(t.length/2),s=this.concat(t.slice(0,n),e),r=this.concat(t.slice(n),e);return this.concat([s,r],e)}if(l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){const n=new qb(t.map((t=>t.shape)),e);return this.compileAndRun(n,t)}const n=Sr(t.map((t=>t.shape)),e),s=t.map((t=>t.as2D(-1,he(t.shape.slice(e))))),r=new jb(s.map((t=>t.shape)));return this.compileAndRun(r,s).reshape(n)}neg(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,yw,t.dtype);const e=new hw(t.shape,yw);return this.compileAndRun(e,[t])}batchMatMul(t,e,n,s){const r=n?t.shape[2]:t.shape[1],i=s?e.shape[1]:e.shape[2],a=n?t.shape[1]:t.shape[2],[o,,]=t.shape;if((1===r||1===i)&&a>1e3){n&&(t=tr(t,[0,2,1])),s&&(e=tr(e,[0,2,1]));const r=1===i?t:t.as3D(o,a,1),l=1===i?2:1,u=1===i?e.as3D(o,1,a):e;return this.multiply(r,u).sum(l,!0)}const l=on(t.dtype,e.dtype),u=new Ox(t.shape,[o,r,i],n,s);return this.compileAndRun(u,[t,e],l)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:s,bias:r,activation:i,preluActivationWeights:a}){const o=n?t.shape[2]:t.shape[1],l=s?e.shape[1]:e.shape[2],[u,,]=t.shape,h=on(t.dtype,e.dtype),c=null!=r,d=null!=a,p=i?Vw(i,!0):null,f=new Ox(t.shape,[u,o,l],n,s,c,p,d),g=[t,e];return r&&g.push(r),a&&g.push(a),this.compileAndRun(f,g,h)}multiply(t,e){if("complex64"===t.dtype){const n=this.texData.get(t.dataId),s=this.texData.get(e.dataId),r=new Ib("return areal * breal - aimag * bimag;",t.shape,e.shape),i=new Ib("return areal * bimag + aimag * breal;",t.shape,e.shape),a=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag),this.makeComplexComponentTensorInfo(e,s.complexTensors.real),this.makeComplexComponentTensorInfo(e,s.complexTensors.imag)],o=this.compileAndRun(r,a),l=this.compileAndRun(i,a),u=this.complex(o,l);return o.dispose(),l.dispose(),u}if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.multiply(t,e);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Ab,t.dtype);const n=new _b(Ab,t.shape,e.shape);return this.compileAndRun(n,[t,e],t.dtype)}batchNorm(t,e,n,s,r,i){const a=[t,e,n];let o=null;null!=s&&(o=s.shape,a.push(s));let u=null;if(null!=r&&(u=r.shape,a.push(r)),l().getBool("WEBGL_PACK_NORMALIZATION")){const s=new kb(t.shape,e.shape,n.shape,o,u,i);return this.compileAndRun(s,a)}const h=new $b(t.shape,e.shape,n.shape,o,u,i);return this.compileAndRun(h,a)}localResponseNormalization4D(t,e,n,s,r){const i=l().getBool("WEBGL_PACK_NORMALIZATION")?new Dx(t.shape,e,n,s,r):new Nx(t.shape,e,n,s,r);return this.compileAndRun(i,[t])}LRNGrad(t,e,n,s,r,i,a){const o=new Tx(e.shape,s,r,i,a);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>Le(t))),s=is(t.shape,t.dtype,n);return Bw(s,e)}const n=new uw(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const s=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Px(t.shape,e,n):new Bx(t.shape,e,n);return this.compileAndRun(s,[t])}gather(t,e,n){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.gather(t,e,n);const s=new xx(t.shape,e.size,n);return this.compileAndRun(s,[t,e])}batchToSpaceND(t,e,n){ae(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const s=e.reduce(((t,e)=>t*e)),r=fo(t.shape,e,s),i=go(r.length,e.length),a=mo(t.shape,e,s),o=yo(n,e.length),l=bo(a,n,e.length);return tr(t.reshape(r),i).reshape(a).slice(o,l)}spaceToBatchND(t,e,n){ae(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const s=e.reduce(((t,e)=>t*e)),r=[[0,0]];r.push(...n);for(let n=1+e.length;n<t.shape.length;++n)r.push([0,0]);const i=t.pad(r),a=fo(i.shape,e,s,!1),o=go(a.length,e.length,!1),l=mo(i.shape,e,s,!1),u=tr(i.reshape(a),o);return Qs(u,l)}reduce(t,e,n){const s=t.shape[0],r=t.shape[1],i=Jr(r),a=Math.ceil(r/i),o=new Vx({windowSize:i,inSize:r,batchSize:s,outSize:a},e),l=this.compileAndRun(o,[t],n);return 1===l.shape[1]?l:this.reduce(l,e,n)}argReduce(t,e,n=null){let s=t.shape[0],r=t.shape[1];null!=n&&(s=n.shape[0],r=n.shape[1]);const i=Jr(r),a={windowSize:i,inSize:r,batchSize:s,outSize:Math.ceil(r/i)},o=new tb(a,e,null==n),l=[t];null!=n&&l.push(n);const u=this.compileAndRun(o,l,"int32");return 1===u.shape[1]?u:this.argReduce(t,e,u)}argReducePacked(t,e,n=null){const s=null!=n?n.shape:t.shape,r=Jr(s[s.length-1]),i=new wb(s,r,e,null==n),a=null==n?[t]:[t,n],o=this.compileAndRun(i,a,"int32");return o.rank===t.rank?this.argReducePacked(t,e,o):o}sum(t,e){Xs("sum",e,t.rank);const[n,s]=qs(t.shape,e),r=he(s),i=t.as2D(-1,r),a=ln(t.dtype);return this.reduce(i,"sum",a).reshape(n)}prod(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,e);const[n,s]=qs(t.shape,e),r=he(s),i=t.as2D(-1,r),a=ln(t.dtype);return this.reduce(i,"prod",a).reshape(n)}unsortedSegmentSum(t,e,n){let s=0;const r=Ys([s],t.rank);let i=t;null!=r&&(i=tr(t,r),s=Zs(1,t.rank)[0]);const a=Lw.computeOutShape(i.shape,s,n),o=he([i.shape[s]]),l=i.as2D(-1,o),u=ln(t.dtype);let h=this.segOpCompute(l,"unsortedSegmentSum",e,u,n).reshape(a);return null!=r&&(h=tr(h,Js(r))),h}segOpCompute(t,e,n,s,r){const i=t.shape[0],a=t.shape[1],o=Lw.segOpComputeOptimalWindowSize(a,r),l=new Qx({windowSize:o,inSize:a,batchSize:i,numSegments:r},e),u=this.compileAndRun(l,[t,n],s);return u.shape[1]===r?u:(n=zi(0,r).tile([a/o]),this.segOpCompute(u,e,n,s,r))}argMinMaxReduce(t,e,n){const s=[e];if(Xs("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,t.rank),!l().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,r]=qs(t.shape,s),i=he(r),a=t.as2D(-1,i);return this.argReduce(a,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,s){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=${e}`);const r=t.shape[e];let i=t;for(let e=0;e<=Math.ceil(Math.log2(r))-1;e++){const n=new ax(t.shape,!1,s),r=n.getCustomSetupFunc(e),a=i;i=this.compileAndRun(n,[i],i.dtype,r),a.dispose()}if(n){const e=new ax(t.shape,n,s),r=i;i=this.compileAndRun(e,[i]),r.dispose()}return i}equal(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new _b("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}notEqual(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(notEqual(a, b));\n","bool");const n=new _b("return float(a != b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.less(t,e);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const n=new _b("return float(a < b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}lessEqual(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new _b("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.greater(t,e);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const n=new _b("return float(a > b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greaterEqual(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new _b("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new hw(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new _b("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new _b("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const s=new tw(t.rank,e.shape,e.rank);return this.compileAndRun(s,[t,e,n],on(e.dtype,n.dtype))}where(t){To("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Ww(t.shape,e)}topk(t,e,n){const s=t.dataSync();return Pw(s,t.shape,t.dtype,e,n)}min(t,e){Xs("min",e,t.rank);const[n,s]=qs(t.shape,e),r=he(s),i=t.as2D(-1,r);return this.reduce(i,"min",i.dtype).reshape(n)}minimum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.minimum(t,e);const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ub(Pb,t.shape,e.shape):new _b(Tb,t.shape,e.shape);return this.compileAndRun(n,[t,e])}mod(t,e){const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ub(Wb,t.shape,e.shape):new _b("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.maximum(t,e);const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ub(Bb,t.shape,e.shape):new _b(Nb,t.shape,e.shape);return this.compileAndRun(n,[t,e])}all(t,e){Xs("all",e,t.rank);const[n,s]=qs(t.shape,e),r=he(s),i=t.as2D(-1,r);return this.reduce(i,"all",i.dtype).reshape(n)}any(t,e){Xs("any",e,t.rank);const[n,s]=qs(t.shape,e),r=he(s),i=t.as2D(-1,r);return this.reduce(i,"any",i.dtype).reshape(n)}floorDiv(t,e){const n="int32";if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const s=new _b("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(s,[t,e],n)}add(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,Eb);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.add(t,e);const n=on(t.dtype,e.dtype);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Eb,n);const s=new _b(Eb,t.shape,e.shape);return this.compileAndRun(s,[t,e],n)}packedUnaryOp(t,e,n){const s=new Ow(t.shape,e);return this.compileAndRun(s,[t],n)}packedBinaryOp(t,e,n,s,r=!1){const i=new Ub(n,t.shape,e.shape,r);return this.compileAndRun(i,[t,e],s)}complexSeparableBinaryOp(t,e,n){const s=this.texData.get(t.dataId),r=this.texData.get(e.dataId),[i,a]=[[s.complexTensors.real,r.complexTensors.real],[s.complexTensors.imag,r.complexTensors.imag]].map((s=>{const[r,i]=s,a=this.makeComplexComponentTensorInfo(t,r),o=this.makeComplexComponentTensorInfo(e,i),l=new _b(n,t.shape,e.shape);return this.compileAndRun(l,[a,o],on(r.dtype,i.dtype))})),o=this.complex(i,a);return i.dispose(),a.dispose(),o}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>l().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),s=this.addN(t.slice(e));return this.addN([n,s])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>on(t,e))),n=t.map((t=>t.shape)),s=l().getBool("WEBGL_PACK")?new Qy(t[0].shape,n):new Zy(t[0].shape,n);return this.compileAndRun(s,t,e)}subtract(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,Rb);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.subtract(t,e);const n=on(t.dtype,e.dtype);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Rb,t.dtype);const s=new _b(Rb,t.shape,e.shape);return this.compileAndRun(s,[t,e],n)}pow(t,e){const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ub(Mb,t.shape,e.shape):new _b("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),s=on(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],s)}ceil(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,bw,t.dtype);const e=new hw(t.shape,bw);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,xw,t.dtype);const e=new hw(t.shape,xw);return this.compileAndRun(e,[t])}sign(t){const e=new hw(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new hw(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new hw(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new hw(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new hw(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,ww,t.dtype);const e=new hw(t.shape,ww);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,vw,t.dtype);const e=new hw(t.shape,vw);return this.compileAndRun(e,[t])}softmax(t,e){const n=ye([e],t.shape),s=hi(t,n),r=Ks(s.shape,n),i=this.subtract(t,s.reshape(r)),a=this.exp(i),o=this.sum(a,n).reshape(r);return Br(a,o)}log(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new hw(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new hw(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new hw(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);const e=new hw(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new hw(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=l().getBool("WEBGL_PACK")?new Ow(t.shape,Dw):new hw(t.shape,pw),this.compileAndRun(e,[t])}relu6(t){let e;return e=l().getBool("WEBGL_PACK")?new Ow(t.shape,Fw):new hw(t.shape,fw),this.compileAndRun(e,[t])}prelu(t,e){const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ub(Lb,t.shape,e.shape):new _b(Fb,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,_w,t.dtype);const e=new hw(t.shape,gw);return this.compileAndRun(e,[t])}eluDer(t,e){const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ub("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new _b("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new hw(t.shape,mw);return this.compileAndRun(e,[t])}int(t){const e=new hw(t.shape,"return float(int(x));");return this.compileAndRun(e,[t],"int32")}clip(t,e,n){let s;s=l().getBool("WEBGL_PACK_CLIP")?new Gb(t.shape):new Vb(t.shape);const r=s.getCustomSetupFunc(e,n);return this.compileAndRun(s,[t],null,r)}abs(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,dw,t.dtype);const e=new hw(t.shape,dw);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new Hb(t.shape),s=[this.makeComplexComponentTensorInfo(t,e.complexTensors.real),this.makeComplexComponentTensorInfo(t,e.complexTensors.imag)];return this.compileAndRun(n,s)}sigmoid(t){const e=new hw(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new hw(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}sin(t){const e=new hw(t.shape,Cw);return this.compileAndRun(e,[t])}cos(t){const e=new hw(t.shape,$w);return this.compileAndRun(e,[t])}tan(t){const e=new hw(t.shape,"return tan(x);");return this.compileAndRun(e,[t])}asin(t){const e=new hw(t.shape,kw);return this.compileAndRun(e,[t])}acos(t){const e=new hw(t.shape,Iw);return this.compileAndRun(e,[t])}atan(t){const e=new hw(t.shape,Sw);return this.compileAndRun(e,[t])}atan2(t,e){const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ub(zb,t.shape,e.shape):new _b(Db,t.shape,e.shape);return this.compileAndRun(n,[t,e])}sinh(t){const e=new hw(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new hw(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new hw(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new hw(t.shape,Ew);return this.compileAndRun(e,[t])}acosh(t){const e=new hw(t.shape,Rw);return this.compileAndRun(e,[t])}atanh(t){const e=new hw(t.shape,Aw);return this.compileAndRun(e,[t])}erf(t){const e=new hw(t.shape,Nw);return this.compileAndRun(e,[t])}step(t,e){const n=new hw(t.shape,function(t=0){return cw+`\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,s,r,i){const a=t.shape,o=this.texData.get(t.dataId),u=n.inChannels,h=a[0]*a[1]*a[2],c=n.outChannels,d="channelsLast"===n.dataFormat,p=(1===h||1===c)&&u>1e3,f=a[2]%2!=0&&!!o.isPacked;if(p||!l().getBool("WEBGL_LAZILY_UNPACK")||!l().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const o=d?a[0]*a[1]*a[2]:a[0]*a[2]*a[3],l=this.reshape(t,[1,o,n.inChannels]),u=this.reshape(e,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:l,b:u,transposeA:!1,transposeB:!1,bias:s,activation:r,preluActivationWeights:i}),n.outShape)}const g=d?a[0]*a[1]*(a[2]+1):a[0]*a[2]*(a[3]+1),m={dataId:t.dataId,shape:[1,g,n.inChannels],dtype:t.dtype},y=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,ae(Hy(o.shape,m.shape),(()=>`packed reshape ${o.shape} to ${m.shape} isn't free`));const b=this.reshape(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:m,b,transposeA:!1,transposeB:!1,bias:s,activation:r,preluActivationWeights:i}),w=this.texData.get(x.dataId);return ae(w.isPacked,(()=>"batchMatMul result is expected to be packed")),o.shape=y,w.shape=n.outShape,_s().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,s,r,i){const{filterWidth:a,filterHeight:o,inChannels:l,outWidth:u,outHeight:h,dataFormat:c}=n,d="channelsLast"===c,p=a*o*l,f=h*u,g=[p,f],m=t.squeeze([0]),y=e.reshape([1,p,-1]),b=new Ax(g,m.shape,n),x=this.compileAndRun(b,[m]).reshape([1,g[0],g[1]]),w=null!=s,v=null!=i,C=r?Vw(r,!0):null,$=new Ox(x.shape,[1,f,n.outChannels],!0,!1,w,C,v),k=[x,y];s&&k.push(s),v&&k.push(i);const I=this.compileAndRun($,k);return d?I.reshape([1,h,u,n.outChannels]):I.reshape([1,n.outChannels,h,u])}fusedConv2d({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,s,r,i);if(l().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,s,r,i);const a=null!=s,o=null!=i,u=r?Vw(r,!1):null,h=new ex(n,a,u,o),c=[t,e];return s&&c.push(s),i&&c.push(i),this.compileAndRun(h,c)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(l().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const s=new ex(n);return this.compileAndRun(s,[t,e])}conv2dDerInput(t,e,n){const s=new Yb(n);return this.compileAndRun(s,[t,e])}conv2dDerFilter(t,e,n){const s=new Xb(n);return this.compileAndRun(s,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){const a=l().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=r?Vw(r,a):null,u=[t,e],h=null!=s,c=null!=i;let d;return h&&u.push(s),c&&u.push(i),a?(d=new rx(n,h,o,c),this.compileAndRun(d,u)):(d=new sx(n,h,o,c),this.compileAndRun(d,u))}depthwiseConv2D(t,e,n){let s;return l().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(s=new rx(n),this.compileAndRun(s,[t,e])):(s=new sx(n),this.compileAndRun(s,[t,e]))}depthwiseConv2DDerInput(t,e,n){const s=new tx(n);return this.compileAndRun(s,[t,e])}depthwiseConv2DDerFilter(t,e,n){const s=new Qb(n);return this.compileAndRun(s,[t,e])}conv3d(t,e,n){const s=new nx(n);return this.compileAndRun(s,[t,e])}conv3dDerInput(t,e,n){const s=new Zb(n);return this.compileAndRun(s,[t,e])}conv3dDerFilter(t,e,n){const s=new Jb(n);return this.compileAndRun(s,[t,e])}maxPool(t,e){const n=new Wx(e,"max",!1);return this.compileAndRun(n,[t])}avgPool(t,e){const n=new Wx(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}maxPoolBackprop(t,e,n,s){const r=new Wx(s,"max",!0),i=this.compileAndRun(r,[e]),a=new Fx(s),o=this.compileAndRun(a,[t,i],e.dtype);return i.dispose(),o}avgPoolBackprop(t,e,n){const s=new vb(n);return this.compileAndRun(s,[t],e.dtype)}cast(t,e){return Wo(t,e,this)}unstack(t,e){const n=t.shape[e],s=new Array(t.rank-1);let r=0;for(let n=0;n<t.rank;n++)n!==e&&(s[r++]=t.shape[n]);const i=new Array(t.rank).fill(0),a=t.shape.slice();a[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)i[e]=n,o[n]=this.slice(t,i,a).reshape(s);return o}avgPool3d(t,e){const n=new Ux(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const s=new Cb(n);return this.compileAndRun(s,[t],e.dtype)}maxPool3d(t,e){const n=new Ux(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,s){const r=new Ux(s,"max",!0),i=this.compileAndRun(r,[e]),a=new _x(s),o=this.compileAndRun(a,[t,i],e.dtype);return i.dispose(),o}reshape(t,e){const n=this.texData.get(t.dataId);if(n.isPacked&&!Hy(t.shape,e)&&(null===n.texture||!Hy(n.shape,e))){const n=this.packedReshape(t,e);return _s().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}return Uo(t,e)}resizeBilinear(t,e,n,s){const r=l().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qx(t.shape,e,n,s):new jx(t.shape,e,n,s);return this.compileAndRun(r,[t],"float32")}resizeBilinearBackprop(t,e,n){const s=new Hx(t,e,n);return this.compileAndRun(s,[t])}resizeNearestNeighbor(t,e,n,s){const r=new Xx(t.shape,e,n,s);return this.compileAndRun(r,[t])}resizeNearestNeighborBackprop(t,e,n){const s=new Kx(t,e,n);return this.compileAndRun(s,[t])}multinomial(t,e,n,s){const r=e?t:Xi(t),i=r.shape[0],a=r.shape[1],o=new Mx(i,a,n),l=o.getCustomSetupFunc(s);return this.compileAndRun(o,[r],"int32",l)}oneHot(t,e,n,s){const r=new Lx(t.size,e,n,s);return this.compileAndRun(r,[t])}diag(t){const e=new dx(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,s,r,i){const a=new ix(t.shape,e.shape,s,r,i);return this.compileAndRun(a,[t,e,n],"float32")}depthToSpace(t,e,n){ae(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const s=t.shape[0],r="NHWC"===n?t.shape[1]:t.shape[2],i="NHWC"===n?t.shape[2]:t.shape[3],a="NHWC"===n?t.shape[3]:t.shape[1],o=r*e,l=i*e,u=a/(e*e),h=new cx("NHWC"===n?[s,o,l,u]:[s,u,o,l],e,n);return this.compileAndRun(h,[t])}split(t,e,n){return zw(t,e,n)}scatterND(t,e,n){const{sliceRank:s,numUpdates:r,sliceSize:i,strides:a,outputSize:o}=Co(0,t,n),l=[o/i,i],u=t.reshape([r,s]),h=e.reshape([r,i]);if(0===o)return Uo(Rn([]),n);const c=Ws(0),d=new Zx(r,s,u.rank,h.rank,a,l);return this.compileAndRun(d,[h,u,c]).reshape(n)}sparseToDense(t,e,n,s){const{sliceRank:r,numUpdates:i,strides:a,outputSize:o}=Co(0,t,n),l=new Zx(i,r,t.rank,e.rank,a,[o,1],!1);return this.compileAndRun(l,[e,t,s]).reshape(n)}fft(t){return this.fftImpl(t,!1)}ifft(t){return this.fftImpl(t,!0)}fftImpl(t,e){const n=this.texData.get(t.dataId),s=new yx("return real * expR - imag * expI;",t.shape,e),r=new yx("return real * expI + imag * expR;",t.shape,e),i=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag)],a=this.compileAndRun(s,i),o=this.compileAndRun(r,i),l=this.complex(a,o).as2D(t.shape[0],t.shape[1]);return a.dispose(),o.dispose(),l}gatherND(t,e){const n=e.shape,s=n[n.length-1],[r,i,a,o]=xo(t,e),l=e.reshape([i,s]),u=t.reshape([t.size/a,a]),h=new wx(s,o,[i,a]);return this.compileAndRun(h,[u,l]).reshape(r)}fill(t,e,n){if("string"===(n=n||Ie(e))){const s=we(n,he(t));return s.fill(e),_s().makeTensor(s,t,n,this)}{const s=new bx(t,e),r=s.getCustomSetupFunc(e);return this.compileAndRun(s,[],n,r)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return Vo(t,e,n)}makeTensorInfo(t,e){const n=this.write(null,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e){const{dataId:n}=this.makeTensorInfo(t,e);return _s().makeTensorFromDataId(n,t,e,this)}unpackTensor(t){const e=new Mw(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new zx(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Wy(t.shape),...Uy(t.shape)],s={dtype:t.dtype,shape:n,dataId:t.dataId},r=[Wy(e),...Uy(e)],i=new Gx(r,n),a=this.runWebGLProgram(i,[s],t.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:s,dtype:r}=e,i=Vy(s);let a;return a=n?new hx(i):new ux(i),{dtype:r,shape:s,dataId:this.runWebGLProgram(a,[{shape:i,dtype:r,dataId:t}],r,null,!0).dataId}}runWebGLProgram(t,e,n,s,r=!1){const i=this.makeTensorInfo(t.outputShape,n),a=this.texData.get(i.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===$y.DENSE){const e=Ey(t.outputShape);a.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(a.usage=t.outTexUsage),0===he(i.shape))return a.values=xe(i.dtype,0),i;const o=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&he(e.shape)<=l().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!Hy(n.shape,e.shape)){const t=e,s=e.shape;e.shape=n.shape,e=this.packedReshape(e,s),o.push(e),n=this.texData.get(e.dataId),t.shape=s}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:a,isUniform:!1},c=function(t,e,n){let s="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${n}_${e}`}));const r=t.userCode;let i=t.constructor.name;return i+="_"+s+"_"+r,i}(t,u,h),d=this.getAndSaveBinary(c,(()=>function(t,e,n,s){const r=e.userCode,i=n.map(((t,n)=>{const s={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(s.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:s}})),a=i.map((t=>t.shapeInfo)),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},u=lb(i,o,r,e.packedInputs),h=t.createProgram(u);let c=null;const d=t.getUniformLocation(h,"NAN",!1);1===l().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(h,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const s=e.variableNames[n],r=!1;p[s]=t.getUniformLocation(h,s,r),p[`offset${s}`]=t.getUniformLocation(h,`offset${s}`,r)}return{program:e,source:u,webGLProgram:h,uniformLocations:p,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:d}}(this.gpgpu,t,u,h))),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),function(t,e,n,s,r){Rx(e.inShapeInfos,n),Rx([e.outShapeInfo],[s]);const i=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(i,a[0],a[1]):t.setOutputMatrixTexture(i,a[0],a[1]),t.setProgram(e.webGLProgram),1===l().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,s)=>{const r=e.program.variableNames[s],i=e.uniformLocations[r],a=e.uniformLocations[`offset${r}`];if(null!=i)if(n.isUniform)if(he(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,s)})),null!=r&&r(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,d,u,h,s),o.forEach((t=>this.disposeData(t.dataId))),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!l().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===r){const t=this.unpackTensor(i);return this.disposeData(i.dataId),t}return i}compileAndRun(t,e,n,s,r=!1){n=n||e[0].dtype;const i=this.runWebGLProgram(t,e,n,s,r);return _s().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(l().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ms((()=>{if(!l().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=l().getBool("DEBUG");l().set("DEBUG",!1);const e=this.abs(Ws(1e-8)).dataSync()[0];if(l().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:s,values:r,texture:i,usage:a,isPacked:o}=e;if(null!=i)return;const u=null!=this.activeTimers;let h;u&&(h=Oe());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=l().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?ie(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=be(t);t=e.newShape}let s=he(t);if(t.length<=1&&s<=n)return[1,s];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Wy(t);let n=2,r=2;return t.length&&([n,r]=Uy(t)),s=e*(n/2)*(r/2),fe(s).map((t=>2*t))}return fe(s)}(n,o),e.texShape=c),null!=r){const t=Vy(n);let i,a=c[1],l=c[0];const d=r instanceof Uint8Array;o?([a,l]=Ry(c[0],c[1]),i=new mx(t,[l,a],d)):i=new gx(t,[l,a],d);const p=this.makeTensorInfo([l,a],s);this.texData.get(p.dataId).usage=d?ky.PIXELS:ky.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),a,l,r);const f=!0,g=this.runWebGLProgram(i,[p],s,null,f),m=this.texData.get(g.dataId);e.texture=m.texture,e.texShape=m.texShape,e.isPacked=m.isPacked,e.usage=m.usage,this.disposeData(p.dataId),this.texData.delete(g.dataId),e.values=null,u&&(this.uploadWaitMs+=Oe()-h)}else{const t=this.acquireTexture(c,a,s,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:s}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,s)),n.values}acquireTexture(t,e,n,s){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,s)}computeBytes(t,e){return t[0]*t[1]*Ce(e)}}bn()&&Bs("webgl",(()=>new Gw),2);const Hw={kernelName:U,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:s}=t;return function(t,e,n){let s=new _b("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",t.shape,e.shape);return l().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(s=new Ub("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",t.shape,e.shape,!0)),n.runWebGLProgram(s,[t,e],"float32")}(n,s,e)}};class jw{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qw={kernelName:G,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new jw(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}};class Kw{constructor(t){this.variableNames=["A"];const e=sb(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Xw{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=sb(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const Yw={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:r}=e;const{numChannels:i}=s,a="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[u,h]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[h,u],d=[h,u,i];(o||a)&&(null==Jw&&(Jw=document.createElement("canvas").getContext("2d")),Jw.canvas.width=u,Jw.canvas.height=h,Jw.drawImage(r,0,0,u,h),r=Jw.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=ky.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const f=l().getBool("WEBGL_PACK")?new Xw(d):new Kw(d),g=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),g}};let Jw;const{maxImpl:Zw,transposeImpl:Qw}=r;function tv(t,e,n){const s=n.texData.get(t.dataId);return!s.isPacked||Hy(t.shape,e)||null!==s.texture&&Hy(s.shape,e)?{dataId:t.dataId,shape:e,dtype:t.dtype}:function(t,e,n){const s=[Wy(t.shape),...Uy(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},i=[Wy(e),...Uy(e)],a=new Gx(i,s),o=n.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(t,e,n)}class ev{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const s=yb(this.rank),r=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let e=0;e<t.length;e++)s[t[e]]=n[e];return s.join()}(e);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class nv{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=yb(this.rank),r=eb("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=r[t];const a=`vec2(${i.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function sv(t,e,n){const s=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nv(t.shape,e):new ev(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}const rv={kernelName:nt,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{reductionIndices:r,keepDims:i}=e,a=n,o=s.shape.length,l=ye(r,s.shape);let u=l;const h=Ys(u,o),c=null!=h,d=a.shouldExecuteOnCPU([s]);let p=s;if(c){if(d){const t=a.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=s.shape[h[t]];const n=Qw(t,s.shape,s.dtype,h,e);p=a.makeTensorInfo(e,s.dtype),a.texData.get(p.dataId).values=n}else p=sv(s,h,a);u=Zs(u.length,o)}Xs("max",u,o);const[f,g]=qs(p.shape,u);let m,y=f;if(i&&(y=Ks(f,l)),d){const t=a.texData.get(p.dataId).values,e=Zw(t,he(g),y,s.dtype);m=a.makeTensorInfo(y,s.dtype),a.texData.get(m.dataId).values=e}else m=function(t,e,n,s){const r=he(e),i=tv(t,[he(t.shape)/r,r],s),a=function(t,e,n,s){const r=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],s=Jr(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}(t.shape);let i=t;for(let a=0;a<r.length;a++){const{inSize:o,windowSize:l,outSize:u}=r[a],h=new Vx({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),c=i;i=s.runWebGLProgram(h,[i],e),c.dataId!==t.dataId&&s.disposeData(c.dataId)}return i}(i,t.dtype,"max",s);return i.dataId!==t.dataId&&s.disposeData(i.dataId),tv(a,n,s)}(p,g,y,a);return c&&a.disposeData(p.dataId),m}},iv={kernelName:at,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;ae(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];ae(gr(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const h=ir(s.shape,r,i,u,a),[c,d]=function(t,e,n,s){let r=new Wx(n,"max",!1);const i=s.runWebGLProgram(r,[t],"float32");return r=new Wx(n,"max",!0,!0,e),[i,s.runWebGLProgram(r,[t],"float32")]}(s,o,h,l);return[c,d]}},av={kernelName:ht,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{To("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o}=n,l=e;return Da(l.readSync(s.dataId),l.readSync(r.dataId),i,a,o)}},ov=Fa,lv={kernelName:ct,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{To("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e,h=u.readSync(s.dataId),c=u.readSync(r.dataId),{selectedIndices:d,validOutputs:p}=ov(h,c,i,a,o,l);return[d,p]}},uv=_a,hv={kernelName:dt,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{To("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=n,u=e,h=u.readSync(s.dataId),c=u.readSync(r.dataId),d=i,p=a,f=o,g=l,{selectedIndices:m,selectedScores:y}=uv(h,c,d,p,f,g);return[m,y]}};class cv{constructor(t,e,n,s){this.variableNames=["Image"],this.outputShape=[];const r=t[1],i=t[2],a=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[l,u]=po(s,r,i),h=l.toFixed(3),c=u.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${h}) * ${o} - (float(y) - ${c}) * ${a};\n          float coordYFloat = (float(x) - ${h}) * ${a} + (float(y) - ${c}) * ${o};\n          int coordX = int(round(coordXFloat + ${h}));\n          int coordY = int(round(coordYFloat + ${c}));\n          ${d}\n          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${r}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const dv=[rv,qw,Yw,Hw,iv,av,lv,hv,{kernelName:jt,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=new cv(s.shape,r,i,a);return o.runWebGLProgram(l,[s],s.dtype)}},{kernelName:zt,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e,r=new hw(n.shape,"return x * x;");return s.runWebGLProgram(r,[n],n.dtype)}},{kernelName:Lt,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:s}=t,r="return (a - b) * (a - b);",i=e,a=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ub(r,n.shape,s.shape):new _b(r,n.shape,s.shape);return i.compileAndRun(a,[n,s])}},{kernelName:Wt,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{perm:r}=e,i=n,a=s.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=s.shape[r[t]];let l;if(i.shouldExecuteOnCPU([s])){const t=i.texData.get(s.dataId).values,e=Qw(t,s.shape,s.dtype,r,o);l=i.makeTensorInfo(o,s.dtype),i.texData.get(l.dataId).values=e}else l=sv(s,r,i);return l}}];for(const t of dv)te(t);Gs(function(t,e,n){const s={start:0,stop:7180,num:360};return mn.runKernelFunc((t=>t.linspace(0,7180,360)),{},null,"LinSpace",s)}(),Rn(1997.379408437619));const pv=new Worker("crepeWorker.bundle.js"),fv=i(pv,"CREPE_GET_BUFFER_SIZE"),gv=i(pv,"CREPE_INIT"),mv=i(pv,"CREPE_DETECT_PITCHES");let yv;const bv=async(t,e)=>{const n=yv.createBuffer(1,t.length,e),s=n.getChannelData(0);for(let e=0;e<t.length;e++)s[e]=t[e];const r=yv.createBufferSource();r.connect(yv.destination),r.buffer=n,yv.resume(),r.start()};class xv extends AudioWorkletNode{_buffers;_bufferSize;constructor(t,e){super(t,"buffer-processor",{parameterData:{bufferSize:e}}),this._bufferSize=e,this.port.onmessage=this.onMessage.bind(this),this.reset()}reset(){this._buffers=[],this.port.postMessage({type:"reset"})}onMessage(t){this._buffers.push(t.data)}getAudioData(){const t=this._buffers.length*this._bufferSize,e=new Float32Array(t);for(let t=0;t<this._buffers.length;t++){const n=this._buffers[t],s=t*this._bufferSize;e.set(n,s)}return{audio:e,buffers:this._buffers,bufferSize:this._bufferSize}}}let wv,vv,Cv;const $v=()=>({sampleRate:wv.sampleRate,...Cv.getAudioData()}),kv=new Worker("tunerWorker.bundle.js"),Iv=i(kv,"TUNER_INIT"),Sv=i(kv,"TUNER_GET_NUM_WINDOWS"),Ev=i(kv,"TUNER_UPSAMPLE_FREQS"),Rv=i(kv,"TUNER_PITCH_SNAP"),Av=i(kv,"TUNER_PITCH_SHIFT"),Nv=["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"],Tv=[{name:"Major",steps:[2,2,1,2,2,2,1]},{name:"Minor",steps:[2,1,2,2,1,2,2]},{name:"Major (pentatonic)",steps:[2,2,3,2,3]},{name:"Minor (pentatonic)",steps:[3,2,2,3,2]}],Dv=(t,e)=>440*Math.pow(2,(Nv.indexOf(t)+12*(e-4))/12);let Fv;(async()=>{const t=await(async()=>{wv=new AudioContext;const t=await navigator.mediaDevices.getUserMedia({audio:!0});return vv=wv.createMediaStreamSource(t),wv.suspend(),{sampleRate:wv.sampleRate}})(),e=await fv(t.sampleRate);await(async t=>{await wv.audioWorklet.addModule("BufferProcessor.bundle.js"),Cv=new xv(wv,t),vv.connect(Cv)})(e),await(async()=>{yv=new AudioContext,yv.suspend()})(),await gv(t.sampleRate),await Iv(),console.log("Init done.")})();const _v=document.querySelector("#record"),Ov=document.querySelector("#stop"),Mv=document.querySelector("#autotone"),Lv=document.querySelector("#play-original"),zv=document.querySelector("#play-autotoned");_v.addEventListener("click",(()=>{console.log("Record"),(async()=>{Cv.reset(),wv.resume()})()})),Ov.addEventListener("click",(()=>{console.log("Stop"),wv.suspend()})),Mv.addEventListener("click",(async()=>{console.log("Autotoning...");const{audio:t,buffers:e,sampleRate:n}=$v(),s=await mv(e),r=new Float32Array(s.map((t=>t.freq))),i=await Sv(t.length,1024,32);if(r.length>i)throw Error("freqs.length > numWindows");const a=await Ev(r,i),o=((t,e,n=-8,s=8)=>{let r;for(const t of Tv)t.name===e&&(r=t.steps);const i=[];let a=Nv.indexOf(t);for(const t of r)i.push(Nv[a]),a+=t;const o=[];for(let t=n;t<=s;t++)for(const e of i)o.push(Dv(e,t));return new Float32Array(o)})("C","Major"),l=await Rv(a,o);console.log("fr",r),console.log("nw",i),console.log("orf",a),console.log("taf",l),Fv=await Av(t,n,1024,32,a,l),console.log("Autotoned.")})),Lv.addEventListener("click",(()=>{console.log("Play original");const{audio:t,sampleRate:e}=$v();bv(t,e)})),zv.addEventListener("click",(()=>{console.log("Play autotoned");const{sampleRate:t}=$v();bv(Fv,t)}))})()})();