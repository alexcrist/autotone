/*! For license information please see crepeWorker.bundle.js.LICENSE.txt */
(()=>{var t={377:(t,e,n)=>{var r=n(832),s=n(652),i=n(801),a=n(30),o=n(618),l=n(49),u=n(971);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},832:function(t,e,n){var r;!function(t,s,i){function a(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},49:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},652:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},618:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=a,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},30:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},971:(t,e,n)=>{var r;!function(s,i){var a,o=this,l=256,u="random",c=i.pow(l,6),h=i.pow(2,52),d=2*h,p=255;function f(t,e,n){var r=[],p=b(y((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(s)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(s)]}}():t,3),r),f=new g(r),w=function(){for(var t=f.g(6),e=c,n=0;t<h;)t=(t+n)*l,e*=l,n=f.g(1);for(;t>=d;)t/=2,e/=2,n>>>=1;return(t+n)/e};return w.int32=function(){return 0|f.g(4)},w.quick=function(){return f.g(4)/4294967296},w.double=w,b(x(f.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,f),t.state=function(){return m(f,{})}),n?(i[u]=t,e):t})(w,p,"global"in e?e.global:this==i,e.state)}function g(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=p&i+t[s%n]+(e=a[s])],a[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,a=r.S;t--;)e=a[s=p&s+1],n=n*l+a[p&(a[s]=a[i=p&i+e])+(a[i]=e)];return r.i=s,r.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function y(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(y(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function b(t,e){for(var n,r=t+"",s=0;s<r.length;)e[p&s]=p&(n^=19*e[p&s])+r.charCodeAt(s++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(i["seed"+u]=f,b(i.random(),s),t.exports){t.exports=f;try{a=n(42)}catch(t){}}else void 0===(r=function(){return f}.call(e,n,e,t))||(t.exports=r)}([],Math)},410:()=>{},628:()=>{},601:()=>{},792:()=>{},42:()=>{}},e={};function n(r){var s=e[r];if(void 0!==s)return s.exports;var i=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>$r,computeFlatOffset:()=>Lr,computeOutShape:()=>Ir,getNormalizedAxes:()=>Ar,isSliceContinous:()=>Or,maskToAxes:()=>kr,parseSliceParams:()=>Mr,startForAxis:()=>Fr,startIndicesWithElidedDims:()=>Nr,stopForAxis:()=>_r,stopIndicesWithElidedDims:()=>Tr,stridesForAxis:()=>Dr,stridesWithElidedDims:()=>Sr});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>li,computeOutShape:()=>oi,segOpComputeOptimalWindowSize:()=>ai});var r={};n.r(r),n.d(r,{ERF_A1:()=>_o,ERF_A2:()=>Oo,ERF_A3:()=>Lo,ERF_A4:()=>Mo,ERF_A5:()=>zo,ERF_P:()=>Fo,PARALLELIZE_THRESHOLD:()=>si,SELU_SCALE:()=>Do,SELU_SCALEALPHA:()=>To,applyActivation:()=>Na,assertAndGetBroadcastShape:()=>Js,assertAxesAreInnerMostDims:()=>rs,assertParamsConsistent:()=>Fs,assignToTypedArray:()=>jo,axesAreInnerMostDims:()=>Qr,calculateShapes:()=>No,castTensor:()=>Xo,combineLocations:()=>ts,complexWithEvenIndex:()=>Vo,complexWithOddIndex:()=>Go,computeConv2DInfo:()=>gs,computeConv3DInfo:()=>ms,computeDefaultPad:()=>ys,computeDilation2DInfo:()=>ds,computeOptimalWindowSize:()=>ii,computeOutAndReduceShapes:()=>es,computeOutShape:()=>_s,computePool2DInfo:()=>ps,computePool3DInfo:()=>fs,convertConv2DDataFormat:()=>ks,eitherStridesOrDilationsAreOne:()=>$s,expandShapeToKeepDim:()=>ns,exponent:()=>Ko,exponents:()=>qo,getAxesPermutation:()=>ss,getBroadcastDims:()=>Xs,getComplexWithIndex:()=>Ho,getFusedBiasGradient:()=>Aa,getFusedDyActivation:()=>Ra,getImageCenter:()=>vo,getInnerMostAxes:()=>as,getPermuted:()=>$o,getReductionAxes:()=>Ys,getReshaped:()=>Co,getReshapedPermuted:()=>ko,getSliceBeginCoords:()=>Io,getSliceSize:()=>So,getUndoAxesPermutation:()=>is,linspaceImpl:()=>Jo,log:()=>Po,mergeRealAndImagArrays:()=>Wo,prepareAndValidate:()=>Eo,prepareSplitSize:()=>ia,reshapeTensor:()=>Yo,segment_util:()=>e,shouldFuse:()=>Ta,slice_util:()=>t,splitRealAndImagArrays:()=>Uo,tupleValuesAreOne:()=>Cs,upcastType:()=>dn,validateInput:()=>Ao,validateUpdateShape:()=>Ro,warn:()=>Bo});var s={};function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function a(){a=function(){return t};var t={},e=Object.prototype,n=e.hasOwnProperty,r=Object.defineProperty||function(t,e,n){t[e]=n.value},s="function"==typeof Symbol?Symbol:{},o=s.iterator||"@@iterator",l=s.asyncIterator||"@@asyncIterator",u=s.toStringTag||"@@toStringTag";function c(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,n){return t[e]=n}}function h(t,e,n,s){var i=e&&e.prototype instanceof f?e:f,a=Object.create(i.prototype),o=new E(s||[]);return r(a,"_invoke",{value:$(t,n,o)}),a}function d(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=h;var p={};function f(){}function g(){}function m(){}var y={};c(y,o,(function(){return this}));var b=Object.getPrototypeOf,x=b&&b(b(R([])));x&&x!==e&&n.call(x,o)&&(y=x);var w=m.prototype=f.prototype=Object.create(y);function v(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function C(t,e){function s(r,a,o,l){var u=d(t[r],t,a);if("throw"!==u.type){var c=u.arg,h=c.value;return h&&"object"==i(h)&&n.call(h,"__await")?e.resolve(h.__await).then((function(t){s("next",t,o,l)}),(function(t){s("throw",t,o,l)})):e.resolve(h).then((function(t){c.value=t,o(c)}),(function(t){return s("throw",t,o,l)}))}l(u.arg)}var a;r(this,"_invoke",{value:function(t,n){function r(){return new e((function(e,r){s(t,n,e,r)}))}return a=a?a.then(r,r):r()}})}function $(t,e,n){var r="suspendedStart";return function(s,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===s)throw i;return{value:void 0,done:!0}}for(n.method=s,n.arg=i;;){var a=n.delegate;if(a){var o=k(a,n);if(o){if(o===p)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var l=d(t,e,n);if("normal"===l.type){if(r=n.done?"completed":"suspendedYield",l.arg===p)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r="completed",n.method="throw",n.arg=l.arg)}}}function k(t,e){var n=e.method,r=t.iterator[n];if(void 0===r)return e.delegate=null,"throw"===n&&t.iterator.return&&(e.method="return",e.arg=void 0,k(t,e),"throw"===e.method)||"return"!==n&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+n+"' method")),p;var s=d(r,t.iterator,e.arg);if("throw"===s.type)return e.method="throw",e.arg=s.arg,e.delegate=null,p;var i=s.arg;return i?i.done?(e[t.resultName]=i.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,p):i:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,p)}function I(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function S(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function E(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(I,this),this.reset(!0)}function R(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,s=function e(){for(;++r<t.length;)if(n.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return s.next=s}}return{next:A}}function A(){return{value:void 0,done:!0}}return g.prototype=m,r(w,"constructor",{value:m,configurable:!0}),r(m,"constructor",{value:g,configurable:!0}),g.displayName=c(m,u,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===g||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,m):(t.__proto__=m,c(t,u,"GeneratorFunction")),t.prototype=Object.create(w),t},t.awrap=function(t){return{__await:t}},v(C.prototype),c(C.prototype,l,(function(){return this})),t.AsyncIterator=C,t.async=function(e,n,r,s,i){void 0===i&&(i=Promise);var a=new C(h(e,n,r,s),i);return t.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},v(w),c(w,u,"Generator"),c(w,o,(function(){return this})),c(w,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),n=[];for(var r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},t.values=R,E.prototype={constructor:E,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(S),!t)for(var e in this)"t"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(n,r){return a.type="throw",a.arg=t,e.next=n,r&&(e.method="next",e.arg=void 0),!!r}for(var s=this.tryEntries.length-1;s>=0;--s){var i=this.tryEntries[s],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var o=n.call(i,"catchLoc"),l=n.call(i,"finallyLoc");if(o&&l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(o){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var s=this.tryEntries[r];if(s.tryLoc<=this.prev&&n.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var i=s;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,p):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),p},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),S(n),p}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var s=r.arg;S(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:R(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),p}},t}function o(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=l(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var r=0,s=function(){};return{s,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,o=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){o=!0,i=t},f:function(){try{a||null==n.return||n.return()}finally{if(o)throw i}}}}function l(t,e){if(t){if("string"==typeof t)return u(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(t,e):void 0}}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function c(t,e,n,r,s,i,a){try{var o=t[i](a),l=o.value}catch(t){return void n(t)}o.done?e(l):Promise.resolve(l).then(r,s)}n.r(s),n.d(s,{maxImpl:()=>cy,transposeImpl:()=>hy});const h="tfjsflags";class d{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(e instanceof Promise)throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);h in t&&t[h].split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function p(){return g}let f,g=null;function m(){if(null==f){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}f=t}return f}function y(t,e){const n=function(){const t=m();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const b="Acos",x="Acosh",w="Add",v="ArgMax",C="ArgMin",$="Asin",k="Asinh",I="Atan",S="Atanh",E="Atan2",R="AvgPool",A="AvgPool3D",N="BatchMatMul",T="BatchToSpaceND",D="BroadcastTo",F="Cast",_="Ceil",O="ClipByValue",L="Concat",M="Conv2D",z="Conv2DBackpropInput",B="Conv3D",P="Cos",W="Cosh",U="Cumsum",V="DepthwiseConv2dNative",G="Dilation2D",H="Dilation2DBackpropInput",j="Dilation2DBackpropFilter",q="Div",K="Expm1",X="FlipLeftRight",Y="Floor",J="FloorDiv",Z="FusedBatchNorm",Q="GatherV2",tt="GreaterEqual",et="Identity",nt="IsFinite",rt="IsInf",st="IsNan",it="Log1p",at="LogSoftmax",ot="Max",lt="Maximum",ut="MaxPool",ct="MaxPool3D",ht="MaxPoolWithArgmax",dt="Minimum",pt="Multiply",ft="Negate",gt="NonMaxSuppressionV3",mt="NonMaxSuppressionV4",yt="NonMaxSuppressionV5",bt="OnesLike",xt="OneHot",wt="PadV2",vt="Prelu",Ct="Reciprocal",$t="Relu",kt="Reshape",It="ResizeNearestNeighbor",St="ResizeBilinear",Et="Relu6",Rt="Reverse",At="Round",Nt="Rsqrt",Tt="SelectV2",Dt="Selu",Ft="Slice",_t="Sinh",Ot="Sign",Lt="Sigmoid",Mt="Softplus",zt="Sqrt",Bt="SpaceToBatchND",Pt="SplitV",Wt="Softmax",Ut="SquaredDifference",Vt="Square",Gt="Tanh",Ht="Tile",jt="Transpose",qt="Unpack",Kt="UnsortedSegmentSum",Xt="ZerosLike",Yt="Step",Jt="RotateWithOffset",Zt="_FusedMatMul",Qt="FusedConv2D",te="FusedDepthwiseConv2D",ee=y("kernelRegistry",(()=>new Map)),ne=y("gradRegistry",(()=>new Map));function re(t){return ne.get(t)}function se(t){const e=ee.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===t&&n.push(a)}return n}function ie(t){const{kernelName:e,backendName:n}=t,r=oe(e,n);ee.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),ee.set(r,t)}function ae(t){const{kernelName:e}=t;ne.has(e)&&p().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),ne.set(e,t)}function oe(t,e){return`${e}_${t}`}function le(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function ue(t,e,n){return Math.max(t,Math.min(e,n))}function ce(t){return t%2==0?t:t+1}function he(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function de(t,e,n=""){he(me(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function pe(t){he(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function fe(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||Se(t)&&!n)for(let r=0;r<t.length;++r)fe(t[r],e,n);else e.push(t);return e}function ge(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function me(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function ye(t){return t%1==0}function be(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function xe(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function we(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function ve(t,e=(t=>0),n){return new Promise(((r,s)=>{let i=0;const a=()=>{if(t())return void r();i++;const o=e(i);null!=n&&i>=n?s():setTimeout(a,o)};a()}))}function Ce(t,e){const n=e.length;return he((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),he(t.every((t=>ye(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function $e(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:Ce(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[a]||i[a]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),i[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function ke(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function Ie(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function Se(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function Ee(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function Re(t){return"string"==typeof t||t instanceof String}function Ae(t){return"number"==typeof t}function Ne(t){return Array.isArray(t)?Ne(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":Ae(t)?"float32":Re(t)?"string":"boolean"==typeof t?"bool":"float32"}function Te(t){return!!(t&&t.constructor&&t.call&&t.apply)}function De(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Fe(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function _e(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=fe(t)),p().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Oe(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],i=e.slice(1),a=i.reduce(((t,e)=>t*e));for(let e=0;e<s;e++)r[e]=Oe(t+e*a,i,n)}return r}function Le(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return Oe(0,t,e)}function Me(t,e){const n=ze(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function ze(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function Be(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return Le(t,new Float32Array(n));if("int32"===e)return Le(t,new Int32Array(n));if("bool"===e)return Le(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function Pe(){return p().platform.now()}function We(t){t.forEach((e=>{he(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function Ue(t,e="utf-8"){return e=e||"utf-8",p().platform.decode(t,e)}function Ve(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function Ge(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}class He{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new qe)}profileKernel(t,e,n){let r;const s=this.backendTimer.time((()=>{r=n()}));for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{je(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),r,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function je(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class qe{logKernelProfile(t,e,n,r,s,i){const a="number"==typeof r?we(`${r}ms`,9):r.error,o=we(t,25),l=e.rank,u=e.size,c=we(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ke(t,e,n,r){const s=Fe(e),i=function(t,e,n,r){const s=ge(e),i=r[r.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?Ze(t):t;if(o>1)for(let t=0;t<s/i;t++){const e=t*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],Xe(l[e+t],0,n).length)}return a}(t,e,n,s),a=e.length,o=Je(t,e,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function Xe(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:Re(t)?`'${t}'`:"bool"===n?Ye(t):parseFloat(t.toFixed(7)).toString(),we(r,e)}function Ye(t){return 0===t?"false":"true"}function Je(t,e,n,r,s,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[Xe(Ze(t)[0],0,n)]:"bool"===n?[Ye(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let r=Array.from(t.slice(0,e)),i=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(r=Ze(r),i=Ze(i)),["["+r.map(((t,e)=>Xe(t,s[e],n))).join(", ")+", ..., "+i.map(((t,e)=>Xe(t,s[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Ze(t):Array.from(t)).map(((t,e)=>Xe(t,s[e],n))).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,i=r+h;d.push(...Je(t.slice(r,i),u,n,c,s,!1))}d.push("...");for(let e=o-3;e<o;e++){const r=e*h,i=r+h;d.push(...Je(t.slice(r,i),u,n,c,s,e===o-1))}}else for(let e=0;e<o;e++){const r=e*h,i=r+h;d.push(...Je(t.slice(r,i),u,n,c,s,e===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Ze(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Qe{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=ge(t),null!=n){const t=n.length;he(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Ie(e,this.size),this.strides=Fe(t)}set(t,...e){0===e.length&&(e=[0]),he(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return tn().makeTensor(this.values,this.shape,this.dtype)}}let tn=null,en=null,nn=null;class rn{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ge(t),this.strides=Fe(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return en.buffer(this.shape,this.dtype,t)}bufferSync(){return en.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Le(this.shape,t)}arraySync(){return Le(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=tn().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>Ue(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=tn().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>Ue(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await tn().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(tn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return en.print(this,t)}clone(){return this.throwIfDisposed(),en.clone(this)}toString(t=!1){return Ke(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),en.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),tn().makeVariable(this,t,e,n)}}Object.defineProperty(rn,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class sn extends rn{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!me(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);tn().disposeTensor(this),this.dataId=t.dataId,tn().incRef(this,null)}dispose(){tn().disposeVariable(this),this.isDisposedInternal=!0}}var an,on,ln,un,cn;Object.defineProperty(sn,Symbol.hasInstance,{value:t=>t instanceof rn&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(an||(an={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(on||(on={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(ln||(ln={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(un||(un={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(cn||(cn={}));const hn={float32:un,int32:on,bool:ln,complex64:cn};function dn(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return hn[t][e]}function pn(t){return dn(t,"int32")}function fn(t,e){if(t.dtype===e.dtype)return[t,e];const n=dn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function gn(t,e){return e.some((e=>e.id===t.id))}function mn(t){const e=[];return yn(t,e,new Set),e}function yn(t,e,n){if(null==t)return;if(t instanceof rn)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),yn(r,e,n))}}class bn{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class xn{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new bn}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new He(this.backendInstance),!0}setupRegisteredKernels(){se(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){se(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(Promise.resolve(n)===n){const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return xn.nextTensorId++}nextVariableId(){return xn.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return vn.runKernelFunc((n=>n.cast(t,e)),n,null,F,r)}})),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,i,a){let o,l=[];const u=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const p=function(t,e){const n=oe(t,e);return ee.get(n)}(r,this.backendName);let f,g;if(null!=p)d=()=>{const t=this.backend.numDataIds();f=p.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(u){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==a&&(a=[]);const e=o.filter(((t,e)=>a[e]));t=(i||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{u&&(l=t.map((t=>this.keep(this.clone(t)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(r,e,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),o=g.outputs):o=d()})),u&&this.addTapeNode(r,e,o,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:o.map((t=>t.shape)),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=re(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(he(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const a=n.filter(((t,e)=>s[e]));return i.concat(a)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&Re(t[0])&&(s=t.map((t=>function(t,e="utf-8"){return e=e||"utf-8",p().platform.encode(t,e)}(t))));const i=r.write(s,e,n),a=new rn(e,n,i,this.nextTensorId());if(this.incRef(a,r),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const s=new rn(e,n=n||"float32",t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new sn(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*Ee(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof sn||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=re(t);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=ze(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=mn(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(he(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));he(s instanceof rn,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],a=i.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){i.outputs.forEach((t=>r[t.id]=!0)),o=!0,s[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in r)i[r[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=Me(ge(t),"float32");return vn.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const i=e[s],a=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const e in i.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[e];if(!me(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=s;else{const e=t[a.id];t[a.id]=r(e,s),e.dispose()}}}}(t,i,(t=>this.tidy(t)),Cn);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return he(Te(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;he(e.every((t=>t instanceof rn)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc(((r,s)=>(n=t(...e,s),he(n.value instanceof rn,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),he(Te(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((t,r)=>{const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];he(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),he(i.every((t=>t instanceof rn)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((t,e)=>{a[e]=()=>t})),a}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Pe(),n=await this.backend.time(t);return n.wallMs=Pe()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new bn;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function wn(){const t=m();if(null==t._tfengine){const e=new d(t);t._tfengine=new xn(e)}var e;return e=t._tfengine.ENV,g=e,tn=()=>t._tfengine,t._tfengine}xn.nextTensorId=0,xn.nextVariableId=0;const vn=wn();function Cn(t,e){const n={a:t,b:e};return vn.runKernelFunc(((n,r)=>{const s=n.add(t,e);return r([t,e]),s}),n,null,w)}function $n(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const kn=p();function In(t,e){let n=t;if(Se(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Se(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&p().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Sn(t,r,[]),r}function Sn(t,e,n){if(n=n||[],!Array.isArray(t)&&!Se(t))return void he(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));he(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),he(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)Sn(t[e],r,n.concat(e))}function En(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function Rn(t,e,n,r="numeric"){if(t instanceof rn)return En(r,t.dtype,e,n),t;let s=Ne(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),En(r,s,e,n),null==t||!Se(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=In(t,s);Se(t)||Array.isArray(t)||(t=[t]);const a="string"!==s?_e(t,s):fe(t,[],!0);return vn.makeTensor(a,i,s)}function An(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>Rn(t,`${e}[${r}]`,n)),r)}function Nn(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{vn.startScope(n);try{const e=r(...t);return e instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),vn.endScope(e),e}catch(t){throw vn.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}kn.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),kn.registerFlag("IS_BROWSER",(()=>$n())),kn.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),kn.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),kn.registerFlag("PROD",(()=>!1)),kn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>kn.getBool("DEBUG"))),kn.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),kn.registerFlag("IS_TEST",(()=>!1));const Tn=Nn({complex_:function(t,e){const n=Rn(t,"real","complex"),r=Rn(e,"imag","complex");de(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return vn.runKernelFunc((t=>t.complex(n,r)),s,null,"Complex")}});function Dn(t,e,n,r){if(null==r&&(r=Ne(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Se(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){We(e);const t=ge(e),r=ge(n);he(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==ge(e.slice(t));he(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return Se(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?_e(t,r):fe(t,[],!0),vn.makeTensor(t,e,r)}function Fn(t,e,n){return Dn(t,e,In(t,n),n)}const _n={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function On(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<s.length;++i){const a=s[i],o=Array.isArray(t)?t[i].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:Ln(await Promise.all(r)),specs:n}}function Ln(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const Mn="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function zn(t){return Mn?Buffer.byteLength(t):new Blob([t]).size}function Bn(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function Pn(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:zn(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:zn(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function Wn(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let s=0;s<r.length;s++){const a=r[s],o=t[n[a>>10]+(1023&a)]+e[a>>10];i[s]=o}return new Float32Array(s)}}class Un{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Un.instance&&(Un.instance=new Un),Un.instance}static registerSaveRouter(t){Un.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Un.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Un.getHandlers(t,"save")}static getLoadHandlers(t,e){return Un.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Un.getInstance().loadRouters:Un.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const Vn="tensorflowjs",Gn="models_store",Hn="model_info_store";function jn(){if(!p().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function qn(t){const e=t.result;e.createObjectStore(Gn,{keyPath:"modelPath"}),e.createObjectStore(Hn,{keyPath:"modelPath"})}class Kn{constructor(t){if(this.indexedDB=jn(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(Vn,1);r.onupgradeneeded=()=>qn(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(Gn,"readonly"),r=e.objectStore(Gn).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Pn(e),i=s.transaction(Hn,"readwrite");let a=i.objectStore(Hn);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Gn,"readwrite");const o=l.objectStore(Gn).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{a=i.objectStore(Hn);const e=a.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}Kn.URL_SCHEME="indexeddb://";const Xn=t=>{return p().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Kn.URL_SCHEME)?(e=t.slice(Kn.URL_SCHEME.length),new Kn(e)):null;var e};Un.registerSaveRouter(Xn),Un.registerLoadRouter(Xn);class Yn{constructor(){this.indexedDB=jn()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(Vn,1);n.onupgradeneeded=()=>qn(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Hn,"readonly"),i=s.objectStore(Hn).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Kn.URL_SCHEME)?e.slice(Kn.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(Vn,1);r.onupgradeneeded=()=>qn(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(Hn,"readwrite"),a=i.objectStore(Hn),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=a.delete(t),i=()=>{l=s.transaction(Gn,"readwrite");const r=l.objectStore(Gn).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=i,r.onerror=t=>(i(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const Jn="/",Zn="tensorflowjs_models",Qn="info",tr="model_topology",er="weight_specs",nr="weight_data",rr="model_metadata";function sr(t){return{info:[Zn,t,Qn].join(Jn),topology:[Zn,t,tr].join(Jn),weightSpecs:[Zn,t,er].join(Jn),weightData:[Zn,t,nr].join(Jn),modelMetadata:[Zn,t,rr].join(Jn)}}function ir(t){const e=t.split(Jn);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Jn)}class ar{constructor(t){if(!p().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=sr(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Pn(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Mn)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Mn){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}ar.URL_SCHEME="localstorage://";const or=t=>{return p().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ar.URL_SCHEME)?(e=t.slice(ar.URL_SCHEME.length),new ar(e)):null;var e};Un.registerSaveRouter(or),Un.registerLoadRouter(or);class lr{constructor(){he(p().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),he("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Zn+Jn,n=Jn+Qn;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[ir(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=sr(t=(e=t).startsWith(ar.URL_SCHEME)?e.slice(ar.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class ur{constructor(){this.managers={}}static getInstance(){return null==ur.instance&&(ur.instance=new ur),ur.instance}static registerManager(t,e){he(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),he(t.length>0,(()=>"scheme must not be an empty string."));const n=ur.getInstance();he(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class cr{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(p().get("IS_BROWSER")){p().setPlatform("browser",new cr);try{ur.registerManager(ar.URL_SCHEME,new lr)}catch(t){}try{ur.registerManager(Kn.URL_SCHEME,new Yn)}catch(t){}}let hr;function dr(t,e="float32",n){return e=e||"float32",We(t),new Qe(t,e,n)}p().get("IS_NODE")&&p().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=p().global.fetch?p().global.fetch(t,e):(null==hr&&(hr=n(410)),hr(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const pr=Nn({cast_:function(t,e){const n=Rn(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return vn.runKernelFunc((t=>t.cast(n,e)),r,null,F,s)}}),fr=Nn({clone_:function(t){const e=Rn(t,"x","clone",null),n={x:e};return vn.runKernelFunc((()=>vn.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,et)}});function gr(t){return new Promise((t=>setTimeout(t))).then(t)}wn(),en={buffer:dr,cast:pr,clone:fr,print:function(t,e=!1){console.log(t.toString(e))}};class mr{constructor(t){if(!p().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(mr.URL_SCHEME)&&(t=t.slice(mr.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=s,await gr((()=>i.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await gr((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Pn(t)}}}}function yr(t,e,n,r){!function(t){he(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){he(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),he(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),he(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((i=>(i.then((i=>{const a=n+ ++s/t.length*(r-n);return e(a),i})),i))))}async function br(t,e){null==e&&(e={});const n=null==e.fetchFunc?p().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await yr(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await yr(s,e.onProgress,.5,1)}mr.URL_SCHEME="downloads://",Un.registerSaveRouter((t=>p().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(mr.URL_SCHEME)?function(t="model"){return new mr(t)}(t.slice(mr.URL_SCHEME.length)):null));class xr{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(he("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=p().platform.fetch,he(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&he(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Pn(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,i=e.convertedBy,a=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,u;if(null!=r){const t=await this.loadWeights(r);[l,u]=t}return{modelTopology:n,weightSpecs:l,weightData:u,userDefinedMetadata:o,generatedBy:s,convertedBy:i,format:a}}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(s+t+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,Bn(await br(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function wr(t){return null!=t.match(xr.URL_SCHEME_REGEX)}xr.URL_SCHEME_REGEX=/^https?:\/\//;const vr=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>wr(t))):wr(t),n)return Cr(t,e)}return null};function Cr(t,e){return new xr(t,e)}function $r(t,e,n){he(t.rank===e.length,(()=>`Error in slice${t.rank}D: Length of begin ${e} must match the rank of the array (${t.rank}).`)),he(t.rank===n.length,(()=>`Error in slice${t.rank}D: Length of size ${n} must match the rank of the array (${t.rank}).`));for(let r=0;r<t.rank;++r)he(e[r]+n[r]<=t.shape[r],(()=>`Error in slice${t.rank}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`))}function kr(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Ir(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Sr(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Er(t,e,n){return n<=t?n:n-(e-1)}function Rr(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function Ar(t,e,n,r,s,i,a,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=Nr(a,l,u,r,t),h=Tr(o,l,u,s,t),d=Sr(i,l,u,t)}else for(let e=0;e<u;e++)c[e]=Fr(a,r,i,t,e,l),h[e]=_r(o,s,i,t,e,l),d[e]=Dr(i,e,l);return{begin:c,end:h,strides:d}}function Nr(t,e,n,r,s){const i=[...s],a=Rr(n,e);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=0;else{const a=Er(e,n,s);let o=r[a];t&1<<a&&(o=0),i[s]=o}return i}function Tr(t,e,n,r,s){const i=[...s],a=Rr(n,e);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=Er(e,n,s);let o=r[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let t=0;t<i.length;t++){const e=s[t];i[t]<0&&(i[t]+=e),i[t]=ue(0,i[t],s[t])}return i}function Dr(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Fr(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=ue(0,a,l-1),a}function _r(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=o>0?ue(0,a,l):ue(-1,a,l-1),a}function Or(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Lr(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Mr(t,e,n){let r,s;return r="number"==typeof e?[e,...new Array(t.rank-1).fill(0)]:e.length<t.rank?e.concat(new Array(t.rank-e.length).fill(0)):e.slice(),r.forEach((t=>{he(-1!==t,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(t.rank).fill(-1):"number"==typeof n?[n,...new Array(t.rank-1).fill(-1)]:n.length<t.rank?n.concat(new Array(t.rank-n.length).fill(-1)):n,s=s.map(((e,n)=>e>=0?e:(he(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,s]}Un.registerSaveRouter(vr),Un.registerLoadRouter(vr);class zr{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Br{constructor(){this.classNameMap={}}static getMap(){return null==Br.instance&&(Br.instance=new Br),Br.instance}static register(t){Br.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Pr(t){he(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),he("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),he(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Br.register(t)}function Wr(t){p().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Ur(){return vn}function Vr(){return vn.memory()}function Gr(t,e){return vn.tidy(t,e)}function Hr(t){mn(t).forEach((t=>t.dispose()))}function jr(t){return vn.keep(t)}function qr(t,e,n=1){return vn.registerBackend(t,e,n)}function Kr(t){return vn.customGrad(t)}function Xr(t,e){if((Se(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Se(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Dn(t,[],[],e)}nn=Wr;class Yr extends zr{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return Hr(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){he(Te(t),(()=>"The f passed in variableGrads(f) must be a function")),he(null==e||Array.isArray(e)&&e.every((t=>t instanceof sn)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in vn.registeredVariables)e.push(vn.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;he((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:i,grads:a}=vn.gradients(t,e,null,!0);he(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),he(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Hr(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Xr(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Yr,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Jr=Nn({abs_:function(t){const e=Rn(t,"x","abs"),n={x:e};return vn.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,"Abs")}}),Zr=Nn({add_:function(t,e){let n=Rn(t,"a","add"),r=Rn(e,"b","add");[n,r]=fn(n,r);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.add(n,r);return e([n,r]),s}),s,null,w)}});function Qr(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function ts(t,e,n){const r=t.length+e.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[i++]):s.push(e[a++]);return s}function es(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function ns(t,e){return ts(t,e.map((t=>1)),e)}function rs(t,e,n){he(Qr(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function ss(t,e){if(Qr(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function is(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function as(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const os=Nn({reshape_:function(t,e){const n=Rn(t,"x","reshape",null);e=function(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}(e,n.size),he(n.size===ge(e),(()=>"new shape and old shape must have the same number of elements."));const r={x:n},s={shape:e};return vn.runKernelFunc(((t,r)=>(r([n]),t.reshape(n,e))),r,null,kt,s)}}),ls=Nn({transpose_:function(t,e){const n=Rn(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),he(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{he(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return vn.runKernelFunc((t=>t.transpose(n,e)),r,null,jt,s)}}),us=Nn({all_:function(t,e=null,n=!1){let r=Rn(t,"x","all","bool");const s={x:r},i={axis:e,keepDims:n};return vn.runKernelFunc((t=>{const s=Ce(e,r.shape);let i=s;const a=ss(i,r.rank);null!=a&&(r=ls(r,a),i=as(i.length,r.rank));const o=t.all(r,i);if(n){const t=ns(o.shape,s);return os(o,t)}return o}),s,null,"All",i)}}),cs=Nn({any_:function(t,e=null,n=!1){let r=Rn(t,"x","any","bool");const s={x:r},i={axis:e,keepDims:n};return vn.runKernelFunc((t=>{const s=Ce(e,r.shape);let i=s;const a=ss(i,r.rank);null!=a&&(r=ls(r,a),i=as(i.length,r.rank));const o=t.any(r,i);if(n){const t=ns(o.shape,s);return os(o,t)}return o}),s,null,"Any",i)}}),hs=Nn({argMax_:function(t,e=0){let n=Rn(t,"x","argMax");const r={x:n},s={axis:e};return vn.runKernelFunc(((t,r)=>{r([n]);let s=Ce(e,n.shape);const i=ss(s,n.rank);return null!=i&&(n=ls(n,i),s=as(s.length,n.rank)),t.argMax(n,s[0])}),r,null,v,s)}});function ds(t,e,n,r,s="NHWC",i){return gs(t,[...e,t[3]],n,i,r,null,null,ks(s))}function ps(t,e,n,r,s,i,a="channelsLast"){const[o,l]=bs(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return gs(t,u,n,r,s,i,!1,a)}function fs(t,e,n,r,s,i,a="NDHWC"){const[o,l,u]=xs(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return ms(t,c,n,r,s,!1,h,i)}function gs(t,e,n,r,s,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=t}const[d,p,,f]=e,[g,m]=bs(n),[y,b]=bs(r),x=ws(d,y),w=ws(p,b),{padInfo:v,outHeight:C,outWidth:$}=function(t,e,n,r,s,i,a,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=ys(t,e,n));const i=t[1],a=vs((t[0]-e+2*r)/n+1,s);he(ye(a),(()=>`The output # of rows (${a}) must be an integer. Change the stride and/or zero pad parameters`));const o=vs((i-e+2*r)/n+1,s);return he(ye(o),(()=>`The output # of columns (${o}) must be an integer. Change the stride and/or zero pad parameters`)),[a,o]}([e,n],i,r,t,o);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+i-e),o=Math.max(0,(h-1)*s+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],g="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=vs((e-i+d+p)/r+1,o),h=vs((n-a+f+g)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,x,w,i,o),k=a?f*h:f;let I;return"channelsFirst"===o?I=[l,k,C,$]:"channelsLast"===o&&(I=[l,C,$,k]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:C,outWidth:$,outChannels:k,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:t,outShape:I,filterShape:e}}function ms(t,e,n,r,s,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=t}const[p,f,g,,m]=e,[y,b,x]=xs(n),[w,v,C]=xs(r),$=ws(p,w),k=ws(f,v),I=ws(g,C),{padInfo:S,outDepth:E,outHeight:R,outWidth:A}=function(t,e,n,r,s,i,a,o,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,s,i){null==s&&(s=ys(t,e,r));const a=t[1],o=t[2],l=vs((t[0]-e+2*s)/r+1,i);he(ye(l),(()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`));const u=vs((a-e+2*s)/r+1,i);he(ye(u),(()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`));const c=vs((o-e+2*s)/r+1,i);return he(ye(c),(()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`)),[l,u,c,1]}([e,n,r,1],o,0,s,t,c);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const t=(d-1)*s+o-e,c=(p-1)*i+l-n,g=(f-1)*a+u-r,m=Math.floor(t/2),y=t-m,b=Math.floor(c/2),x=c-b,w=Math.floor(g/2);h={top:b,bottom:x,left:w,right:g-w,front:m,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),p=Math.ceil((n-l+1)/i),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,x,$,k,I,o),N=i?m*d:m;let T;return"channelsFirst"===a?T=[l,N,E,R,A]:"channelsLast"===a&&(T=[l,E,R,A,N]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:E,outHeight:R,outWidth:A,outChannels:N,padInfo:S,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:$,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationDepth:w,dilationHeight:v,dilationWidth:C,inShape:t,outShape:T,filterShape:e}}function ys(t,e,n,r=1){const s=ws(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function bs(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function xs(t){return"number"==typeof t?[t,t,t]:t}function ws(t,e){return e<=1?t:t+(t-1)*(e-1)}function vs(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Cs(t){const[e,n,r]=bs(t);return 1===e&&1===n&&1===r}function $s(t,e){return Cs(t)||Cs(e)}function ks(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const Is=Nn({avgPool_:function(t,e,n,r,s){const i=Rn(t,"x","avgPool","float32");he($s(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=os(i,[1,i.shape[0],i.shape[1],i.shape[2]])),he(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),null!=s&&he(ye(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=vn.runKernelFunc(((t,i)=>{const o=ps(a.shape,e,n,1,r,s);return i([a]),1===o.filterWidth&&1===o.filterHeight&&me(o.inShape,o.outShape)?a.clone():t.avgPool(a,o)}),l,null,R,u);return c=pr(c,i.dtype),o?os(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ss=Nn({avgPool3d_:function(t,e,n,r,s,i="NDHWC",a){null==a?a=[1,1,1]:Wr("dilations is deprecated, this field will be gone in v3.0.0.");const o=Rn(t,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=os(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),he(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),he("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),he($s(n,a),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=s&&he(ye(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i,dilations:a};let d=vn.runKernelFunc(((t,o)=>{null==a&&(a=[1,1,1]);const u=fs(l.shape,e,n,a,r,s,i);return o([l]),t.avgPool3d(l,u)}),c,null,A,h);return d=pr(d,l.dtype),u?os(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function Es(t){return null==t?null:0===t.rank?os(t,[t.size]):1===t.rank?t:2===t.rank?os(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?os(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const Rs=Nn({batchNorm_:function(t,e,n,r,s,i){null==i&&(i=.001);const a=Rn(t,"x","batchNorm"),o=Rn(e,"mean","batchNorm"),l=Rn(n,"variance","batchNorm");let u,c;null!=s&&(u=Rn(s,"scale","batchNorm")),null!=r&&(c=Rn(r,"offset","batchNorm")),he(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),he(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),he(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?os(t,[1,1,1,t.size]):2===t.rank?os(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?os(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:i},f=vn.runKernelFunc(((t,e)=>(e([h,o,l,u]),t.batchNorm(h,Es(o),Es(l),Es(c),Es(u),i))),d,null,Z,p);return os(f,a.shape)}}),As=Nn({batchNorm2d_:function(t,e,n,r,s,i){const a=Rn(t,"x","batchNorm"),o=Rn(e,"mean","batchNorm"),l=Rn(n,"variance","batchNorm");let u,c;return null!=s&&(u=Rn(s,"scale","batchNorm")),null!=r&&(c=Rn(r,"offset","batchNorm")),he(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),he(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),he(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&he(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&he(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Rs(a,o,l,c,u,i)}}),Ns=Nn({batchNorm3d_:function(t,e,n,r,s,i){const a=Rn(t,"x","batchNorm"),o=Rn(e,"mean","batchNorm"),l=Rn(n,"variance","batchNorm");let u,c;return null!=s&&(u=Rn(s,"scale","batchNorm")),null!=r&&(c=Rn(r,"offset","batchNorm")),he(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),he(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),he(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&he(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&he(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Rs(a,o,l,c,u,i)}}),Ts=Nn({batchNorm4d_:function(t,e,n,r,s,i){const a=Rn(t,"x","batchNorm"),o=Rn(e,"mean","batchNorm"),l=Rn(n,"variance","batchNorm");let u,c;return null!=s&&(u=Rn(s,"scale","batchNorm")),null!=r&&(c=Rn(r,"offset","batchNorm")),he(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),he(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),he(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&he(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&he(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Rs(a,o,l,c,u,i)}}),Ds=Nn({clipByValue_:function(t,e,n){const r=Rn(t,"x","clipByValue");he(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},i={clipValueMin:e,clipValueMax:n};return vn.runKernelFunc(((t,s)=>{const i=t.clip(r,e,n);return s([r]),i}),s,null,O,i)}});function Fs(t,e){const n=t[0].length;t.forEach(((t,e)=>{he(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),he(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let i=0;i<n;i++)he(i===e||t[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function _s(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const Os=Nn({concat_:function(t,e=0){he(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=An(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const r=Ce(e,n[0].shape)[0],s=_s(n.map((t=>t.shape)),r);if(0===ge(s))return Fn([],s);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];Fs(n.map((t=>t.shape)),r);const i=n,a={axis:e};return vn.runKernelFunc(((t,e)=>{const s=t.concat(n,r);return e(n),s}),i,null,L,a)}}),Ls=Nn({concat1d_:function(t){return Os(t,0)}}),Ms=Nn({concat2d_:function(t,e){return Os(t,e)}}),zs=Nn({concat3d_:function(t,e){return Os(t,e)}}),Bs=Nn({concat4d_:function(t,e){return Os(t,e)}}),Ps=Nn({conv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=Rn(t,"x","conv2d"),l=Rn(e,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=os(o,[1,o.shape[0],o.shape[1],o.shape[2]])),he(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),he(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=a&&he(ye(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];he(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),he($s(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=vn.runKernelFunc(((t,e)=>{const o=ks(s),c=gs(u.shape,l.shape,n,i,r,a,!1,o),h=t.conv2d(u,l,c);return e([u,l]),h}),d,null,M,p);return c?os(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ws=Nn({conv1d_:function(t,e,n,r,s="NWC",i=1,a){const o=Rn(t,"x","conv1d"),l=Rn(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=os(o,[1,o.shape[0],o.shape[1]])),he(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),he(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=a&&he(ye(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`)),he(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),he($s(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),he("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=os(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=os(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Ps(d,h,[1,n],r,"NHWC",[1,i],a);return os(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Us=Nn({conv2DBackpropInput_:function(t,e,n,r,s,i="NHWC",a){he(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=os(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),he(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),he(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),he(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];he(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),he(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=a&&he(ye(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},f=vn.runKernelFunc(((t,e)=>{const u=ks(i),c=gs(o,n.shape,r,1,s,a,!1,u),h=t.conv2dDerInput(l,n,c);return e([l,n]),h}),d,null,z,p);return u?os(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Vs=Nn({conv2dTranspose_:function(t,e,n,r,s,i){const a=Rn(t,"x","conv2dTranspose"),o=Rn(e,"filter","conv2dTranspose");return Us(n,a,o,r,s,"NHWC",i)}}),Gs=Nn({conv3d_:function(t,e,n,r,s="NDHWC",i=[1,1,1]){const a=Rn(t,"x","conv3d"),o=Rn(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=os(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),he(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),he(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),he(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),he($s(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),he("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:i},d=vn.runKernelFunc(((t,e)=>{const s=ms(l.shape,o.shape,n,i,r),a=t.conv3d(l,o,s);return e([l,o]),a}),c,null,B,h);return u?os(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Hs=Nn({depthwiseConv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=Rn(t,"x","depthwiseConv2d"),l=Rn(e,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=os(o,[1,o.shape[0],o.shape[1],o.shape[2]])),he(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),he(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),he(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=a&&he(ye(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},p=vn.runKernelFunc(((t,e)=>{null==i&&(i=[1,1]),he($s(n,i),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const s=gs(u.shape,l.shape,n,i,r,a,!0),o=t.depthwiseConv2D(u,l,s);return e([u,l]),o}),h,null,V,d);return c?os(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),js=Nn({floorDiv_:function(t,e){let n=Rn(t,"a","floorDiv"),r=Rn(e,"b","floorDiv");[n,r]=fn(n,r);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s}),s,null,J)}}),qs=Nn({div_:function(t,e){let n=Rn(t,"a","div"),r=Rn(e,"b","div");if([n,r]=fn(n,r),"int32"===n.dtype&&"int32"===r.dtype)return js(n,r);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s}),s,null,q,{})}}),Ks=Nn({elu_:function(t){const e=Rn(t,"x","elu"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.elu(e);return n([r]),r}),n,null,"Elu")}});function Xs(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=t[i]||1;(e[e.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function Ys(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,a=e[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function Js(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}const Zs=Nn({equal_:function(t,e){let n=Rn(t,"a","equal"),r=Rn(e,"b","equal");[n,r]=fn(n,r),Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc((t=>t.equal(n,r)),s,null,"Equal")}}),Qs=Nn({expandDims_:function(t,e=0){const n=Rn(t,"x","expandDims",null);he(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return e<0&&(he(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),r.splice(e,0,1),os(n,r)}}),ti=Nn({tile_:function(t,e){const n=Rn(t,"x","tile",null);he(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r=[n],s={x:n},i={reps:e};return vn.runKernelFunc(((t,r)=>{const s=t.tile(n,e);return r([n]),s}),s,null,Ht,i,r)}}),ei=Nn({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=dr([t,e],r),i=t<=e?t:e;for(let t=0;t<i;++t)s.set(1,t,t);const a=os(s.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return ti(Qs(a,0),[n[0],1,1]);if(2===n.length)return ti(Qs(Qs(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return ti(Qs(Qs(Qs(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function ni(t,e,n){const r={shape:t,value:e,dtype:n};return vn.runKernelFunc((r=>r.fill(t,e,n)),{},null,"Fill",r)}const ri=Nn({floor_:function(t){const e=Rn(t,"x","floor"),n={x:e};return vn.runKernelFunc((t=>t.floor(e)),n,null,Y)}}),si=30;function ii(t){return t<=si?t:De(t,Math.floor(Math.sqrt(t)))}function ai(t,e){let n,r=!1;for(t<=si?(n=t,r=!0):n=De(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=De(t,n+1);return n}function oi(t,e,n){const r=[],s=t.length;for(let i=0;i<s;i++)i!==e?r.push(t[i]):r.push(n);return r}function li(t,e,n){const r=t.shape[n],s=[];let i=1,a=1;for(let e=0;e<n;e++)s.push(t.shape[e]),i*=t.shape[e];for(let t=0;t<e.rank;t++)s.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)s.push(t.shape[e]),a*=t.shape[e];return{batchSize:i,sliceSize:a,dimSize:r,outputShape:s}}const ui=Nn({gather_:function(t,e,n=0){const r=Rn(t,"x","gather"),s=Rn(e,"indices","gather","int32"),i={x:r,indices:s},a={axis:n};return vn.runKernelFunc(((t,e)=>{const i=Ce(n,r.shape)[0],a=li(r,s,i),o=t.gather(r,os(s,[s.size]),i);return e([r,s]),os(o,a.outputShape)}),i,null,Q,a)}}),ci=Nn({greater_:function(t,e){let n=Rn(t,"a","greater"),r=Rn(e,"b","greater");[n,r]=fn(n,r),Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc((t=>t.greater(n,r)),s,null,"Greater")}}),hi=Nn({greaterEqual_:function(t,e){let n=Rn(t,"a","greaterEqual"),r=Rn(e,"b","greaterEqual");[n,r]=fn(n,r),Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s}),s,null,tt)}}),di=Nn({imag_:function(t){const e=Rn(t,"input","imag"),n={input:e};return vn.runKernelFunc((t=>t.imag(e)),n,null,"Imag")}}),pi=Nn({maximum_:function(t,e){let n=Rn(t,"a","maximum"),r=Rn(e,"b","maximum");[n,r]=fn(n,r),"bool"===n.dtype&&(n=pr(n,"int32"),r=pr(r,"int32")),Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s}),s,null,lt)}}),fi=Nn({mul_:function(t,e){let n=Rn(t,"a","mul"),r=Rn(e,"b","mul");[n,r]=fn(n,r);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s}),s,null,pt)}}),gi=Nn({leakyRelu_:function(t,e=.2){const n=Rn(t,"x","leakyRelu");return pi(fi(Xr(e),n),n)}}),mi=Nn({log_:function(t){const e=Rn(t,"x","log"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.log(e);return n([e]),r}),n,null,"Log")}}),yi=Nn({exp_:function(t){const e=Rn(t,"x","exp"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.exp(e);return n([r]),r}),n,null,"Exp")}}),bi=Nn({max_:function(t,e=null,n=!1){const r=Rn(t,"x","max"),s={x:r},i={reductionIndices:e,keepDims:n};return vn.runKernelFunc(((t,s)=>{let i=Ce(e,r.shape);const a=ss(i,r.rank);let o=r;null!=a&&(o=ls(r,a),i=as(i.length,o.rank));const l=t.max(o,i);null!=a&&o.dispose();let u=l;if(n){const t=ns(u.shape,Ce(e,r.shape));u=os(u,t),l.dispose()}return s([r,u]),u}),s,null,ot,i)}}),xi=Nn({sub_:function(t,e){let n=Rn(t,"a","sub"),r=Rn(e,"b","sub");[n,r]=fn(n,r);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s}),s,null,"Sub")}}),wi=Nn({sum_:function(t,e=null,n=!1){let r=Rn(t,"x","sum");"bool"===r.dtype&&(r=pr(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return vn.runKernelFunc(((t,s)=>{s([r]);const i=Ce(e,r.shape),a=ss(i,r.rank);let o=i,l=r;null!=a&&(l=ls(r,a),o=as(o.length,r.rank));let u=t.sum(l,o);if(n){const t=ns(u.shape,i);u=os(u,t)}return u}),s,null,"Sum",i)}}),vi=Nn({logSoftmax_:function(t,e=-1){const n=Rn(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r={logits:n},s={axis:e};return vn.runKernelFunc(((n,r)=>{const s=bi(t,e,!0),i=xi(t,s),a=xi(pr(i,"float32"),mi(wi(yi(i),e,!0)));return r([a]),a}),r,null,at,s)}}),Ci=Nn({logicalAnd_:function(t,e){const n=Rn(t,"a","logicalAnd","bool"),r=Rn(e,"b","logicalAnd","bool");Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc((t=>t.logicalAnd(n,r)),s,null,"LogicalAnd")}}),$i=Nn({maxPool_:function(t,e,n,r,s){const i=Rn(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=os(i,[1,i.shape[0],i.shape[1],i.shape[2]])),he(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),he($s(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&he(ye(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=vn.runKernelFunc(((t,i)=>{const o=ps(a.shape,e,n,1,r,s);let l;return l=1===o.filterWidth&&1===o.filterHeight&&me(o.inShape,o.outShape)?a.clone():t.maxPool(a,o),i([a,l]),l}),l,null,ut,u);return o?os(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ki=Nn({maxPool3d_:function(t,e=[1,1,1],n,r,s,i="NDHWC",a){null==a?a=[1,1,1]:Wr("dilations is deprecated, this field will be gone in v3.0.0.");const o=Rn(t,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=os(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),he(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),he("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),he($s(n,a),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=s&&he(ye(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i,dilations:a},d=vn.runKernelFunc(((t,o)=>{null==a&&(a=[1,1,1]);const u=fs(l.shape,e,n,a,r,s,i),c=t.maxPool3d(l,u);return o([l,c]),c}),c,null,ct,h);return u?os(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function Ii(t,e="float32"){if("complex64"===e){const e=Ii(t,"float32"),n=Ii(t,"float32");return Tn(e,n)}const n=ze(ge(t),e);return vn.makeTensor(n,t,e)}function Si(t,e="float32"){if("complex64"===e){const e=Si(t,"float32"),n=Ii(t,"float32");return Tn(e,n)}const n=Me(ge(t),e);return vn.makeTensor(n,t,e)}const Ei=Nn({mean_:function(t,e=null,n=!1){const r=Rn(t,"x","mean"),s=Ce(e,r.shape),i=ge(es(r.shape,s)[1]);return Kr((t=>{const r=Xr(i),a=r.dtype===t.dtype?t:pr(t,r.dtype),o=qs(a,r);return{value:wi(o,e,n),gradFunc:e=>{const n=t.shape.slice();s.forEach((t=>{n[t]=1}));const r=os(e,n);return qs(fi(r,Si(t.shape,"float32")),i)}}}))(r)}}),Ri=Nn({min_:function(t,e=null,n=!1){const r=Rn(t,"x","min"),s={x:r},i={axis:e,keepDims:n};return vn.runKernelFunc(((t,s)=>{const i=Ce(e,r.shape);let a=i;const o=ss(a,r.rank);let l=r;null!=o&&(l=ls(r,o),a=as(a.length,r.rank));const u=t.min(l,a);null!=o&&l.dispose();let c=u;if(n){const t=ns(c.shape,i);c=os(u,t),u.dispose()}return s([r,c]),c}),s,null,"Min",i)}}),Ai=Nn({minimum_:function(t,e){let n=Rn(t,"a","minimum"),r=Rn(e,"b","minimum");[n,r]=fn(n,r),"bool"===n.dtype&&(n=pr(n,"int32"),r=pr(r,"int32")),Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s}),s,null,dt)}}),Ni=Nn({square_:function(t){const e=Rn(t,"x","square"),n=[e];return vn.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}}),Ti=Nn({moments_:function(t,e=null,n=!1){const r=Ce(e,(t=Rn(t,"x","moments")).shape),s=Ei(t,r,n);let i=s.shape;n||(i=ns(s.shape,r));const a=Ni(xi(pr(t,"float32"),os(s,i)));return{mean:s,variance:Ei(a,r,n)}}}),Di=Nn({neg_:function(t){const e=Rn(t,"x","neg"),n={x:e};return vn.runKernelFunc((t=>t.neg(e)),n,null,ft)}}),Fi=Nn({notEqual_:function(t,e){let n=Rn(t,"a","notEqual"),r=Rn(e,"b","notEqual");[n,r]=fn(n,r),Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc((t=>t.notEqual(n,r)),s,null,"NotEqual")}}),_i=Nn({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s=Rn(t,"indices","oneHot","int32"),i=[...s.shape,e],a={indices:s},o={depth:e,onValue:n,offValue:r};return vn.runKernelFunc(((t,a)=>(a([s]),os(t.oneHot(os(s,[s.size]),e,n,r),i))),a,null,xt,o)}}),Oi=Nn({real_:function(t){const e=Rn(t,"input","real"),n={input:e};return vn.runKernelFunc((t=>t.real(e)),n,null,"Real")}}),Li=Nn({zerosLike_:function(t){const e=Rn(t,"x","zerosLike"),n={x:e};return vn.runKernelFunc((t=>t.zerosLike(e)),n,null,Xt)}}),Mi=Nn({onesLike_:function(t){const e=Rn(t,"x","onesLike"),n={x:e};return vn.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=Mi(Oi(e)),n=Li(di(e));return Tn(t,n)}return t.onesLike(e)}),n,null,bt)}}),zi=Nn({pad_:function(t,e,n=0){const r=Rn(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},i={x:r};return vn.runKernelFunc(((t,s)=>(s([r]),t.pad(r,e,n))),i,null,wt,s)}}),Bi=Nn({prelu_:function(t,e){const n=Rn(t,"x","prelu"),r=Rn(e,"alpha","prelu"),s={x:n,alpha:r};return vn.runKernelFunc(((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s}),s,null,vt)}});var Pi=n(377);class Wi{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=Pi.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Ui{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Pi.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Vi=Nn({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new Wi(e,n,r,!1,s),a=dr(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Gi=Nn({randomUniform_:function(t,e=0,n=1,r="float32",s){const i=dr(t,r),a=new Ui(e,n,null,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});function Hi(t,e){pe(t);const n=In(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Dn(t,null,n,e)}function ji(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return vn.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return Ii([0],r);const s=ze(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return Hi(s,r)}),{},null,"Range",s)}const qi=Nn({relu_:function(t){const e=Rn(t,"x","relu"),n={x:e};return vn.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?pr(e,"int32"):t.relu(e))),n,null,$t)}}),Ki=Nn({reverse_:function(t,e){const n=Rn(t,"x","reverse"),r={x:n},s={dims:e};return vn.runKernelFunc((t=>{const r=Ce(e,n.shape);if(0===n.rank)return fr(n);const s=t.reverse(n,r);return os(s,n.shape)}),r,null,Rt,s)}}),Xi=Nn({selu_:function(t){const e=Rn(t,"x","selu"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.selu(e);return n([e]),r}),n,null,Dt)}}),Yi=Nn({separableConv2d_:function(t,e,n,r,s,i=[1,1],a="NHWC"){const o=Rn(t,"x","separableConv2d"),l=Rn(e,"depthwiseFilter","separableConv2d"),u=Rn(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=os(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");he(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),he(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),he(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),he(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),he(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];he(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Hs(c,l,r,s,a,i),g=Ps(f,u,1,"valid",a);return h?os(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Ji=Nn({sigmoid_:function(t){const e=Rn(t,"x","sigmoid"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.sigmoid(e);return n([r]),r}),n,null,Lt)}}),Zi=Nn({slice_:function(t,e,n){const r=Rn(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const[s,i]=Mr(r,e,n);$r(r,s,i);const a={x:r},o={begin:e,size:n};return vn.runKernelFunc(((t,e)=>(e([r]),t.slice(r,s,i))),a,null,Ft,o)}}),Qi=Nn({slice1d_:function(t,e,n){const r=Rn(t,"x","slice1d");return he(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Zi(r,[e],[n])}}),ta=Nn({slice2d_:function(t,e,n){const r=Rn(t,"x","slice2d");return he(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Zi(r,e,n)}}),ea=Nn({slice3d_:function(t,e,n){const r=Rn(t,"x","slice3d");return he(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Zi(r,e,n)}}),na=Nn({slice4d_:function(t,e,n){const r=Rn(t,"x","slice4d");return he(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Zi(r,e,n)}}),ra=Nn({softmax_:function(t,e=-1){const n=Rn(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return vn.runKernelFunc(((t,r)=>{const s=t.softmax(n,e);return r([s]),s}),r,null,Wt,s)}}),sa=Nn({softplus_:function(t){const e=Rn(t,"x","softplus"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.softplus(e);return n([e]),r}),n,null,Mt)}});function ia(t,e,n=0){let r=[];if("number"==typeof e)he(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);he(s<=1,(()=>"There should be only one negative value in split array."));const i=e.indexOf(-1);if(-1!==i){const r=e.reduce(((t,e)=>e>0?t+e:t));e[i]=t.shape[n]-r}he(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}const aa=Nn({split_:function(t,e,n=0){const r=Rn(t,"x","split"),s={x:r},i={numOrSizeSplits:e,axis:n};return vn.runKernelFunc(((t,s)=>{const i=Ce(n,r.shape)[0],a=ia(r,e,i);return t.split(r,a,i)}),s,null,Pt,i)}}),oa=Nn({sqrt_:function(t){const e=Rn(t,"x","sqrt"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.sqrt(e);return n([e]),r}),n,null,zt)}}),la=Nn({squeeze_:function(t,e){const n=Rn(t,"x","squeeze");return os(n,$e(n.shape,e).newShape)}}),ua=Nn({stack_:function(t,e=0){const n=An(t,"tensors","stack");if(he(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return Qs(n[0],e);const r=n[0].rank,s=n[0].shape,i=n[0].dtype;he(e<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{de(s,t.shape,"All tensors passed to stack must have matching shapes"),he(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const a=n.map((t=>Qs(t,e)));return Os(a,e)}}),ca=Nn({tanh_:function(t){const e=Rn(t,"x","tanh"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.tanh(e);return n([r]),r}),n,null,Gt)}});function ha(t,e,n){if(pe(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=In(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Dn(t,e,r,n)}function da(t,e,n){if(pe(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=In(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Dn(t,e,r,n)}const pa=Nn({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new Wi(e,n,r,!0,s),a=dr(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),fa=Nn({unstack_:function(t,e=0){const n=Rn(t,"x","unstack");he(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const r={value:n},s={axis:e};return vn.runKernelFunc((t=>t.unstack(n,e)),r,null,qt,s)}}),ga=Nn({broadcastTo_:function(t,e){let n=Rn(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=os(n,t)}const s=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return fr(n);const a={x:n},o={shape:e,inputShape:s};return vn.runKernelFunc((t=>t.tile(n,i)),a,null,D,o)}}),ma=Nn({where_:function(t,e,n){const r=Rn(e,"a","where"),s=Rn(n,"b","where"),i=Rn(t,"condition","where","bool"),a=Js(r.shape,s.shape),o=ga(r,a),l=ga(s,a);1===i.rank&&he(i.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==i.rank&&de(i.shape,l.shape,"Error in where: ");const u={condition:i,t:o,e:l};return vn.runKernelFunc(((t,e)=>{const n=t.select(i,o,l);return e([i]),n}),u,null,Tt)}}),ya=Nn({pow_:function(t,e){let n=Rn(t,"base","pow"),r=Rn(e,"exp","pow");[n,r]=fn(n,r);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s}),s,null,"Pow")}});function ba(t,e,n=null){if(0===t.rank)return Jr(t);if(1!==t.rank&&null===n)return ba(os(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return wi(Jr(t),n);if(e===1/0)return bi(Jr(t),n);if(e===-1/0)return Ri(Jr(t),n);if("euclidean"===e||2===e)return oa(wi(ya(Jr(t),Xr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return bi(wi(Jr(t),n[0]),n[1]-1);if(e===1/0)return bi(wi(Jr(t),n[1]),n[0]);if(e===-1/0)return Ri(wi(Jr(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return oa(wi(Ni(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const xa=Nn({norm_:function(t,e="euclidean",n=null,r=!1){const s=ba(t=Rn(t,"x","norm"),e,n);let i=s.shape;if(r){const e=Ce(n,t.shape);i=ns(s.shape,e)}return os(s,i)}}),wa=Nn({dropout_:function(t,e,n,r){const s=Rn(t,"x","dropout");if(he("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),he(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof rn?s.clone():s;const i=function(t,e){if(null==e)return t.shape.slice();if(me(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),a=1-e,o=qs(ri(Zr(Gi(i,0,1,"float32",r),a)),a);return fi(s,o)}}),va=Nn({fft_:function(t){he("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return vn.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=t.as2D(r,n);return e.fft(s).reshape(t.shape)}),e,null,"FFT")}}),Ca=Nn({rfft_:function(t,e){he("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,s=Zi(t,r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=Os([t,Ii(r)],t.shape.length-1),n=e}else s=t;const i=Li(s),a=os(Tn(s,i),[r,n]),o=va(a),l=Math.floor(n/2)+1,u=Oi(o),c=di(o),h=aa(u,[l,n-l],u.shape.length-1),d=aa(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,os(Tn(h[0],d[0]),p)}}),$a=Nn({ifft_:function(t){he("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return vn.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=os(t,[r,n]),i=e.ifft(s);return os(i,t.shape)}),e,null,"IFFT")}}),ka=Nn({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=os(t,[n,e]);r=$a(s)}else{const s=[n,2*(e-1)],i=os(Oi(t),[n,e]),a=os(di(t),[n,e]),o=Ki(Zi(i,[0,1],[n,e-2]),1),l=fi(Ki(Zi(a,[0,1],[n,e-2]),1),Xr(-1)),u=Os([i,o],1),c=Os([a,l],1),h=os(Tn(u,c),[s[0],s[1]]);r=$a(h)}if(r=Oi(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=os(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),Ia=Nn({conv2DBackpropFilter_:function(t,e,n,r,s,i="NHWC",a){let o=t;3===t.rank&&(o=os(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=os(e,[1,e.shape[0],e.shape[1],e.shape[2]])),he(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),he(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),he(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];he(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),he(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=a&&he(ye(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:a};return vn.runKernelFunc((t=>{const e=ks(i),u=gs(o.shape,n,r,1,s,a,!1,e);return t.conv2dDerFilter(o,l,u)}),h,null,"Conv2DBackpropFilter",d)}}),Sa=Nn({relu6_:function(t){const e=Rn(t,"x","relu6"),n={x:e};return vn.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?pr(e,"int32"):t.relu6(e))),n,null,Et)}}),Ea=Nn({step_:function(t,e=0){const n=Rn(t,"x","step"),r={x:n},s={alpha:e};return vn.runKernelFunc((t=>t.step(n,e)),r,null,Yt,s)}});function Ra(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return fi(t,Ea(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Aa(t,e){let n=e;const r=Ys(t.shape,e.shape);return r.length>0&&(n=wi(n,r)),os(n,t.shape)}function Na(t,e,n){if("linear"===e)return t;if("relu"===e)return qi(t);if("elu"===e)return Ks(t);if("relu6"===e)return Sa(t);if("prelu"===e)return Bi(t,n);throw new Error(`Unknown fused activation ${e}.`)}const Ta=(t,e)=>!(t>0)||"linear"===e,Da=Nn({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u}){if(l=l||"linear",!1===Ta(vn.state.gradientDepth,l)){let c=Ps(t,e,n,r,s,i,a);return null!=o&&(c=Zr(c,o)),Na(c,l,u)}const c=Rn(t,"x","conv2d"),h=Rn(e,"filter","conv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=os(c,[1,c.shape[0],c.shape[1],c.shape[2]])),he(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),he(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),null!=a&&he(ye(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`)),he(d.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),he($s(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),he("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const f=gs(d.shape,h.shape,n,i,r,a);let g,m;null!=o&&(g=Rn(o,"bias","fused conv2d"),[g]=fn(g,c),Js(f.outShape,g.shape)),null!=u&&(m=Rn(u,"prelu weights","fused conv2d"));const y=(t,e)=>{const[s,a,o,u]=e,c=Ra(t,o,l);he(Cs(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[Us(a.shape,c,s,n,r),Ia(a,c,s.shape,n,r)];if(null!=u){const t=Aa(u,c);h.push(t)}return h},b=t=>t.fusedConv2d({input:d,filter:h,convInfo:f,bias:g,activation:l,preluActivationWeights:m}),x={x:d,filter:h,bias:g,preluActivationWeights:m},w={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l};if(null==o){const t=Kr(((t,e,n)=>{let r=vn.runKernelFunc(b,x,null,Qt,w);return n([e,t,r]),p&&(r=os(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return t(d,h)}{const t=Kr(((t,e,n,r)=>{let s=vn.runKernelFunc(b,x,null,Qt,w);return r([e,t,s,n]),p&&(s=os(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return t(d,h,g)}}}),Fa=Nn({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r){let s=t;3===t.rank&&(s=os(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let i=e;3===i.rank&&(i=os(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const a={x:s,dy:i};return vn.runKernelFunc((t=>t.depthwiseConv2DDerFilter(s,i,r)),a,null,"DepthwiseConv2dNativeBackpropFilter")}}),_a=Nn({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r){let s=e,i=!1;3===e.rank&&(i=!0,s=os(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const a={dy:s},o=vn.runKernelFunc((t=>t.depthwiseConv2DDerInput(s,n,r)),a,null,"DepthwiseConv2dNativeBackpropInput");return i?os(o,[o.shape[1],o.shape[2],o.shape[3]]):o}});Nn({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u}){if(!1===Ta(vn.state.gradientDepth,l)){let c=Hs(t,e,n,r,s,i,a);return null!=o&&(c=Zr(c,o)),Na(c,l,u)}const c=Rn(t,"x","depthwiseConv2d"),h=Rn(e,"filter","depthwiseConv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=os(c,[1,c.shape[0],c.shape[1],c.shape[2]])),he(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),he(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),he(d.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==i&&(i=[1,1]),he($s(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=a&&he(ye(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${r}.`));const f=gs(d.shape,h.shape,n,i,r,a,!0);let g,m;null!=o&&(g=Rn(o,"bias","fused conv2d"),[g]=fn(g,c),Js(f.outShape,g.shape)),null!=u&&(m=Rn(u,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{he(Cs(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[n,r,s,a]=e,o=Ra(t,s,l),u=_a(r.shape,o,n,f),c=Fa(r,o,n.shape,f);return null!=a?[u,c,Aa(g,o)]:[u,c]},b=t=>t.fusedDepthwiseConv2D({input:d,filter:h,convInfo:f,bias:g,activation:l,preluActivationWeights:m}),x={x:d,filter:h,bias:g,preluActivationWeights:m},w={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l};if(null==o){const t=Kr(((t,e,n)=>{let r=vn.runKernelFunc(b,x,null,te,w);return n([e,t,r]),p&&(r=os(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return t(d,h)}{const t=Kr(((t,e,n,r)=>{let s=vn.runKernelFunc(b,x,null,te,w);return r([e,t,s,n]),p&&(s=os(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return t(d,h,g)}}});const Oa=Nn({matMul_:function(t,e,n=!1,r=!1){let s=Rn(t,"a","matMul"),i=Rn(e,"b","matMul");[s,i]=fn(s,i),he(s.rank>=2&&i.rank>=2&&s.rank===i.rank,(()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${s.rank} and ${i.rank}.`));const a=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?i.shape[i.rank-1]:i.shape[i.rank-2],l=n?s.shape[s.rank-1]:s.shape[s.rank-2],u=r?i.shape[i.rank-2]:i.shape[i.rank-1],c=s.shape.slice(0,-2),h=i.shape.slice(0,-2),d=ge(c),p=ge(h);he(me(c,h),(()=>`Error in matMul: outer dimensions (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} must match.`)),he(a===o,(()=>`Error in matMul: inner shapes (${a}) and (${o}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${n} and transposeB=${r} must match.`));const f=s.shape.slice(0,-2).concat([l,u]),g=os(s,n?[d,a,l]:[d,l,a]),m=os(i,r?[p,u,o]:[p,o,u]),y={a:g,b:m},b={transposeA:n,transposeB:r},x=vn.runKernelFunc(((t,e)=>(e([g,m]),t.batchMatMul(g,m,n,r))),y,null,N,b);return os(x,f)}}),La=Nn({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a}){if(!1===Ta(vn.state.gradientDepth,i)){let o=Oa(t,e,n,r);return null!=s&&(o=Zr(o,s)),Na(o,i,a)}let o=Rn(t,"a","fused matMul"),l=Rn(e,"b","fused matMul");[o,l]=fn(o,l);const u=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?o.shape[o.rank-1]:o.shape[o.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],p=o.shape.slice(0,-2),f=l.shape.slice(0,-2),g=ge(p),m=ge(f);he(o.rank>=2&&l.rank>=2&&o.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${l.rank}.`)),he(me(p,f),(()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${o.shape} and ${l.shape} must match.`)),he(u===c,(()=>`Error in fused matMul: inner shapes (${u}) and (${c}) of Tensors with shapes ${o.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=o.shape.slice(0,-2).concat([h,d]),b=os(o,n?[g,u,h]:[g,h,u]),x=os(l,r?[m,d,c]:[m,c,d]);let w,v;null!=s&&(w=Rn(s,"bias","fused matMul"),[w]=fn(w,o),Js(y,w.shape)),null!=a&&(v=Rn(a,"prelu weights","fused matMul"));const C=(t,e)=>{const[a,o,l,u]=e,c=Ra(os(t,l.shape),l,i);let h,d;return n||r?!n&&r?(h=Oa(c,o,!1,!1),d=Oa(c,a,!0,!1)):n&&!r?(h=Oa(o,c,!1,!0),d=Oa(a,c,!1,!1)):(h=Oa(o,c,!0,!0),d=Oa(c,a,!0,!0)):(h=Oa(c,o,!1,!0),d=Oa(a,c,!0,!1)),null!=s?[h,d,Aa(u,c)]:[h,d]},$=t=>t.fusedBatchMatMul({a:b,b:x,transposeA:n,transposeB:r,bias:w,activation:i,preluActivationWeights:v}),k={a:b,b:x,bias:w,preluActivationWeights:v},I={transposeA:n,transposeB:r,activation:i};if(null==s){const t=Kr(((t,e,n)=>{const r=vn.runKernelFunc($,k,null,Zt,I);return n([t,e,r]),{value:os(r,y),gradFunc:C}}));return t(b,x)}{const t=Kr(((t,e,n,r)=>{const s=vn.runKernelFunc($,k,null,Zt,I);return r([t,e,s,n]),{value:os(s,y),gradFunc:C}}));return t(b,x,w)}}});function Ma(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(a)}return Hi(s,"float32")}Nn({hammingWindow_:function(t){return Ma(t,.54,.46)}});const za=Nn({hannWindow_:function(t){return Ma(t,.5,.5)}}),Ba=Nn({frame_:function(t,e,n,r=!1,s=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(Zi(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,o=Os([Zi(t,i,e-r),ni([r],s)]);a.push(o),i+=n}return 0===a.length?ha([],[0,e]):os(Os(a),[a.length,e])}});function Pa(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),he(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),he(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),he(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),he(1===e.rank,(()=>"scores must be a 1D tensor")),he(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`)),he(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}function Wa(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(e,t[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(t,e,n||Ua)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function Ua(t,e){return t>e?1:t<e?-1:0}function Va(t,e,n,r,s){return ja(t,e,n,r,s,0).selectedIndices}function Ga(t,e,n,r,s,i){return ja(t,e,n,r,s,0,!1,i,!0)}function Ha(t,e,n,r,s,i){return ja(t,e,n,r,s,i,!0)}function ja(t,e,n,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(Xa);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=e;if(n<s)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=qa(t,i,h[n]);if(a>=r){o=!0;break}if(e.score=e.score*Ka(r,c,a),e.score<=s)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(i),d.push(e.score)):e.score>s&&Wa(u,e,Xa))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:Hi(h,"int32")};return a&&(g.selectedScores=Hi(d,"float32")),l&&(g.validOutputs=Xr(p,"int32")),g}function qa(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(a,c),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-g,0)*Math.max(b-m,0);return x/(p+f-x)}function Ka(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function Xa(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}Nn({stft_:function(t,e,n,r,s=za){var i;null==r&&(i=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const a=Ba(t,e,n),o=fi(a,s(e)),l=[];for(let t=0;t<a.shape[0];t++)l.push(Ca(Zi(o,[t,0],[1,e]),r));return Os(l)}}),Nn({cropAndResize_:function(t,e,n,r,s,i){const a=Rn(t,"image","cropAndResize"),o=Rn(e,"boxes","cropAndResize","float32"),l=Rn(n,"boxInd","cropAndResize","int32");s=s||"bilinear",i=i||0;const u=o.shape[0];he(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),he(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),he(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),he(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),he(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),he("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:a,boxes:o,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r};return vn.runKernelFunc((t=>t.cropAndResize(a,o,l,r,s,i)),c,null,"CropAndResize",h)}}),Nn({flipLeftRight_:function(t){const e=Rn(t,"image","flipLeftRight","float32");he(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return vn.runKernel(X,n,{})}}),Nn({rotateWithOffset_:function(t,e,n=0,r=.5){const s=Rn(t,"image","rotateWithOffset","float32");he(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},a={radians:e,fillValue:n,center:r};return vn.runKernel(Jt,i,a)}}),Nn({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=Rn(t,"boxes","nonMaxSuppression"),a=Rn(e,"scores","nonMaxSuppression"),o=Pa(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return vn.runKernelFunc((t=>t.nonMaxSuppression(i,a,n,r,s)),{boxes:i,scores:a},null,gt,l)}}),Nn({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=Rn(t,"boxes","nonMaxSuppression"),o=Rn(e,"scores","nonMaxSuppression"),l=Pa(a,o,n,r,s,i),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=vn.runKernel(yt,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Nn({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=Rn(t,"boxes","nonMaxSuppression"),o=Rn(e,"scores","nonMaxSuppression"),l=Pa(a,o,n,r,s,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=vn.runKernel(mt,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Ya=Nn({resizeBilinear_:function(t,e,n=!1){const r=Rn(t,"images","resizeBilinear");he(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),he(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`));let s=r,i=!1;3===r.rank&&(i=!0,s=os(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[a,o]=e,l={images:s},u={alignCorners:n,size:e},c=vn.runKernelFunc(((t,e)=>(e([s]),t.resizeBilinear(s,a,o,n))),l,null,St,u);return i?os(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ja=Nn({resizeNearestNeighbor_:function(t,e,n=!1){const r=Rn(t,"images","resizeNearestNeighbor");he(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),he(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),he("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let s=r,i=!1;3===r.rank&&(i=!0,s=os(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[a,o]=e,l={images:s},u={alignCorners:n,size:e},c=vn.runKernelFunc(((t,e)=>(e([s]),t.resizeNearestNeighbor(s,a,o,n))),l,null,It,u);return i?os(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Za=Nn({lessEqual_:function(t,e){let n=Rn(t,"a","lessEqual"),r=Rn(e,"b","lessEqual");[n,r]=fn(n,r),Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s}),s,null,"LessEqual")}}),Qa=Nn({bandPart_:function(t,e,n){he(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),he(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Rn(t,"a","bandPart");he(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,a]=r.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=os(ji(0,i,1,"int32"),[-1,1]),l=ji(0,a,1,"int32"),u=xi(o,l),c=Ci(Za(u,Xr(+e,"int32")),hi(u,Xr(-n,"int32"))),h=Ii([i,a],r.dtype);return os(ua(fa(os(r,[-1,i,a])).map((t=>ma(c,t,h)))),s)}}),to=Nn({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,he(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)he(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=aa(t,t.shape[0],0).map((t=>la(t,[0])));he(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(vn.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=fi(wi(fi(n[r],t)),n[r]);t=xi(t,e)}return qs(t,xa(t,"euclidean"))})));return e?ua(n,0):n}});function eo(t,e=!1){return vn.tidy((()=>{he(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=ei(n),i=fr(t);const a=ha([[1]],[1,1]);let o=fr(a);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=i,l=o,u=s;[o,i,s]=vn.tidy((()=>{const e=Zi(i,[t,t],[n-t,1]),l=xa(e),u=Zi(i,[t,t],[1,1]),c=ma(ci(u,0),ha([[-1]]),ha([[1]])),h=xi(u,fi(c,l)),d=qs(e,h);o=1===d.shape[0]?fr(a):Os([a,Zi(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Di(qs(Oa(c,h),l)),f=Zi(i,[t,0],[n-t,r]),g=fi(p,o),m=ls(o);if(0===t)i=xi(f,Oa(g,Oa(m,f)));else{const e=xi(f,Oa(g,Oa(m,f)));i=Os([Zi(i,[0,0],[t,r]),e],0)}const y=ls(g),b=Zi(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=xi(b,Oa(Oa(b,o),y));else{const e=xi(b,Oa(Oa(b,o),y));s=Os([Zi(s,[0,0],[n,t]),e],1)}return[o,i,s]})),Hr([e,l,u])}return!e&&n>r&&(s=Zi(s,[0,0],[n,r]),i=Zi(i,[0,0],[r,r])),[s,i]}))}const no=Nn({qr_:function(t,e=!1){if(he(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return eo(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=fa(os(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];return r.forEach((t=>{const[n,r]=eo(t,e);s.push(n),i.push(r)})),[os(ua(s,0),t.shape),os(ua(i,0),t.shape)]}}});var ro;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ro||(ro={}));const so=Nn({computeWeightedLoss_:function(t,e,n=ro.SUM_BY_NONZERO_WEIGHTS){const r=Rn(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=Rn(e,"weights","computeWeightedLoss"));const i=null==s?r:fi(r,s);if(n===ro.NONE)return i;if(n===ro.SUM)return wi(i);if(n===ro.MEAN){if(null==s)return Ei(i);{const t=r.size/s.size,e=qs(wi(i),wi(s));return t>1?qs(e,Xr(t)):e}}if(n===ro.SUM_BY_NONZERO_WEIGHTS){if(null==s)return qs(wi(i),Xr(r.size));{const t=fi(s,Si(r.shape)),e=pr(wi(Fi(t,Xr(0))),"float32");return qs(wi(i),e)}}throw Error(`Unknown reduction: ${n}`)}});Nn({absoluteDifference_:function(t,e,n,r=ro.SUM_BY_NONZERO_WEIGHTS){const s=Rn(t,"labels","absoluteDifference"),i=Rn(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=Rn(n,"weights","absoluteDifference")),de(s.shape,i.shape,"Error in absoluteDifference: ");const o=Jr(xi(s,i));return so(o,a,r)}}),Nn({cosineDistance_:function(t,e,n,r,s=ro.SUM_BY_NONZERO_WEIGHTS){const i=Rn(t,"labels","cosineDistance"),a=Rn(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Rn(r,"weights","cosineDistance")),de(i.shape,a.shape,"Error in cosineDistance: ");const l=Xr(1),u=xi(l,wi(fi(i,a),n,!0));return so(u,o,s)}}),Nn({hingeLoss_:function(t,e,n,r=ro.SUM_BY_NONZERO_WEIGHTS){let s=Rn(t,"labels","hingeLoss");const i=Rn(e,"predictions","hingeLoss");let a=null;null!=n&&(a=Rn(n,"weights","hingeLoss")),de(s.shape,i.shape,"Error in hingeLoss: ");const o=Xr(1);s=xi(fi(Xr(2),s),o);const l=qi(xi(o,fi(s,i)));return so(l,a,r)}}),Nn({huberLoss_:function(t,e,n,r=1,s=ro.SUM_BY_NONZERO_WEIGHTS){const i=Rn(t,"labels","huberLoss"),a=Rn(e,"predictions","huberLoss");let o=null;null!=n&&(o=Rn(n,"weights","huberLoss")),de(i.shape,a.shape,"Error in huberLoss: ");const l=Xr(r),u=Jr(xi(a,i)),c=Ai(u,l),h=xi(u,c),d=Zr(fi(Xr(.5),Ni(c)),fi(l,h));return so(d,o,s)}}),Nn({logLoss_:function(t,e,n,r=1e-7,s=ro.SUM_BY_NONZERO_WEIGHTS){const i=Rn(t,"labels","logLoss"),a=Rn(e,"predictions","logLoss");let o=null;null!=n&&(o=Rn(n,"weights","logLoss")),de(i.shape,a.shape,"Error in logLoss: ");const l=Xr(1),u=Xr(r),c=Di(fi(i,mi(Zr(a,u)))),h=fi(xi(l,i),mi(Zr(xi(l,a),u))),d=xi(c,h);return so(d,o,s)}});const io=Nn({squaredDifference_:function(t,e){let n=Rn(t,"a","squaredDifference"),r=Rn(e,"b","squaredDifference");[n,r]=fn(n,r),Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s}),s,null,Ut,{})}});Nn({meanSquaredError_:function(t,e,n,r=ro.SUM_BY_NONZERO_WEIGHTS){const s=Rn(t,"labels","meanSquaredError"),i=Rn(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=Rn(n,"weights","meanSquaredError")),de(s.shape,i.shape,"Error in meanSquaredError: ");const o=io(s,i);return so(o,a,r)}});const ao=Nn({log1p_:function(t){const e=Rn(t,"x","log1p"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.log1p(e);return n([e]),r}),n,null,it)}});Nn({sigmoidCrossEntropy_:function(t,e,n,r=0,s=ro.SUM_BY_NONZERO_WEIGHTS){let i=Rn(t,"multiClassLabels","sigmoidCrossEntropy");const a=Rn(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Rn(n,"weights","sigmoidCrossEntropy")),de(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Xr(r),e=Xr(1),n=Xr(.5);i=Zr(fi(i,xi(e,t)),fi(n,t))}const l=function(t,e){const n=Rn(t,"labels","sigmoidCrossEntropyWithLogits"),r=Rn(e,"logits","sigmoidCrossEntropyWithLogits");de(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=qi(r),i=fi(r,n),a=ao(yi(Di(Jr(r))));return Zr(xi(s,i),a)}(i,a);return so(l,o,s)}});const oo=Nn({logSumExp_:function(t,e=null,n=!1){const r=Rn(t,"x","logSumExp"),s=Ce(e,r.shape),i=bi(r,s,!0),a=xi(r,i),o=yi(a),l=wi(o,s),u=mi(l),c=Zr(os(i,u.shape),u);if(n){const t=ns(c.shape,s);return os(c,t)}return c}});Nn({softmaxCrossEntropy_:function(t,e,n,r=0,s=ro.SUM_BY_NONZERO_WEIGHTS){let i=Rn(t,"onehotLabels","softmaxCrossEntropy");const a=Rn(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Rn(n,"weights","softmaxCrossEntropy")),de(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Xr(r),e=Xr(1),n=Xr(i.shape[1]);i=Zr(fi(i,xi(e,t)),qs(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);const r=Kr(((t,e,r)=>{const s=oo(e,[n],!0),i=xi(pr(e,"float32"),s);r([t,i]);const a=Di(fi(i,t));return{value:wi(a,[n]),gradFunc:(t,e)=>{const[r,s]=e,i=ns(t.shape,[n]);return[fi(os(t,i),xi(pr(r,"float32"),yi(s))),fi(os(t,i),xi(yi(s),pr(r,"float32")))]}}}));return r(t,e)}(i,a);return so(l,o,s)}});const lo={bandPart:Qa,gramSchmidt:to,qr:no};class uo extends Yr{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=vn.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=vn.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Gr((()=>Li(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Gr((()=>Li(r).variable(!1)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;Gr((()=>{const t=Zr(fi(i,this.rho),fi(Ni(s),1-this.rho)),e=fi(qs(oa(Zr(a,this.epsilon)),oa(Zr(i,this.epsilon))),s),n=Zr(fi(a,this.rho),fi(Ni(e),1-this.rho));i.assign(t),a.assign(n);const o=Zr(fi(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Hr(this.accumulatedGrads.map((t=>t.variable))),Hr(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}uo.className="Adadelta",Pr(uo);class co extends Yr{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=vn.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Gr((()=>ni(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable;Gr((()=>{const t=Zr(i,Ni(s));i.assign(t);const e=Zr(fi(qs(s,oa(Zr(t,vn.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Hr(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}co.className="Adagrad",Pr(co);class ho extends Yr{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Gr((()=>{this.accBeta1=Xr(e).variable(),this.accBeta2=Xr(n).variable()})),null==r&&(this.epsilon=vn.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Gr((()=>{const n=xi(1,this.accBeta1),r=xi(1,this.accBeta2);e.forEach(((e,s)=>{const i=vn.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Gr((()=>Li(i).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:Gr((()=>Li(i).variable(!1)))});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=Zr(fi(o,this.beta1),fi(a,1-this.beta1)),c=Zr(fi(l,this.beta2),fi(Ni(a),1-this.beta2)),h=qs(u,n),d=qs(c,r);o.assign(u),l.assign(c);const p=Zr(fi(qs(h,Zr(oa(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(fi(this.accBeta1,this.beta1)),this.accBeta2.assign(fi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Hr(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Hr(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Gr((()=>{this.accBeta1.assign(ya(this.beta1,this.iterations_+1)),this.accBeta2.assign(ya(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}ho.className="Adam",Pr(ho);class po extends Yr{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Gr((()=>{this.iteration=Xr(0).variable(),this.accBeta1=Xr(e).variable()})),null==r&&(this.epsilon=vn.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Gr((()=>{const n=xi(1,this.accBeta1),r=qs(-this.learningRate,Zr(fi(this.iteration,this.decay),1));e.forEach(((e,s)=>{const i=vn.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Li(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:Li(i).variable(!1)});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=Zr(fi(o,this.beta1),fi(a,1-this.beta1)),c=fi(l,this.beta2),h=Jr(a),d=pi(c,h);o.assign(u),l.assign(d);const p=Zr(fi(qs(r,n),qs(u,Zr(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(Zr(this.iteration,1)),this.accBeta1.assign(fi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Hr(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Hr(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}po.className="Adamax",Pr(po);class fo extends Yr{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=vn.registeredVariables[e];Gr((()=>{const t=Zr(fi(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=jr(Xr(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}fo.className="SGD",Pr(fo);class go extends fo{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Xr(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=vn.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Gr((()=>Li(r).variable(t)))}}const s=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&Gr((()=>{let t;const e=Zr(fi(this.m,s),i);t=this.useNesterov?Zr(fi(this.c,Zr(i,fi(e,this.m))),r):Zr(fi(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Hr(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}go.className="Momentum",Pr(go);class mo extends Yr{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=vn.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=vn.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Gr((()=>Li(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Gr((()=>Li(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Gr((()=>Li(r).variable(s)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Gr((()=>{const t=Zr(fi(a,this.decay),fi(Ni(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=Zr(fi(e,this.decay),fi(i,1-this.decay)),l=qs(fi(i,this.learningRate),oa(xi(t,Zr(Ni(s),this.epsilon)))),u=Zr(fi(o,this.momentum),l);a.assign(t),e.assign(s),o.assign(u);const c=xi(r,u);r.assign(c)}else{const t=Zr(fi(a,this.decay),fi(Ni(i),1-this.decay)),e=Zr(fi(o,this.momentum),qs(fi(i,this.learningRate),oa(Zr(t,this.epsilon))));a.assign(t),o.assign(e);const n=xi(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Hr(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Hr(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Hr(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}mo.className="RMSProp",Pr(mo);class yo{static sgd(t){return new fo(t)}static momentum(t,e,n=!1){return new go(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new mo(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new ho(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new uo(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new po(t,e,n,r,s)}static adagrad(t,e=.1){return new co(t,e)}}const bo={sgd:yo.sgd,momentum:yo.momentum,adadelta:yo.adadelta,adagrad:yo.adagrad,rmsprop:yo.rmsprop,adamax:yo.adamax,adam:yo.adam},xo="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function wo(){return new Promise((t=>xo((()=>t()))))}function vo(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Co(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function $o(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function ko(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function Io(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function So(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function Eo(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let t=0;t<n.length-1;++t)s*=n[t];const i=t.shape,a=n.slice();a.pop();let o=1;for(let e=r;e<t.rank;++e)o*=i[e],a.push(i[e]);const l=[...Fe(t.shape).map((t=>t/o)),1].slice(0,r);return[a,s,o,l]}function Ro(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(i+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(i+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function Ao(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}Ro(n,e,t)}function No(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=n.length;let a=1;for(let t=s;t<i;++t)a*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:ge(e.shape)/o,sliceSize:a,strides:[...Fe(n.slice(0,s)),1],outputSize:ge(n)}}const To=1.7580993408473768,Do=1.0507009873554805,Fo=.3275911,_o=.254829592,Oo=-.284496736,Lo=1.421413741,Mo=-1.453152027,zo=1.061405429;function Bo(...t){p().getBool("IS_TEST")||console.warn(...t)}function Po(...t){p().getBool("IS_TEST")||console.log(...t)}function Wo(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Uo(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Vo(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Go(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Ho(t,e){return{real:t[2*e],imag:t[2*e+1]}}function jo(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function qo(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function Ko(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function Xo(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Ii(t.shape),r=pr(t,"float32"),s=n.complex(r,e);return e.dispose(),r.dispose(),s}if(r=t.dtype,"complex64"===(s=e)||"float32"===s&&"complex64"!==r||"int32"===s&&"float32"!==r&&"complex64"!==r||"bool"===s&&"bool"===r)return vn.makeTensorFromDataId(t.dataId,t.shape,e);var r,s;if("complex64"===t.dtype){const r=n.real(t),s=pr(r,e);return r.dispose(),s}if("int32"===e)return n.int(t);if("bool"===e){const e=Xr(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function Yo(t,e){return vn.makeTensorFromDataId(t.dataId,e,t.dtype)}function Jo(t,e,n){const r=(e-t)/(n-1),s=ze(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return Hi(s,"float32")}function Zo(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map((e=>{const i=[...s];i[n]=e;const a=Zi(t,r,i);return r[n]+=e,a}))}function Qo(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=dr(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const i=t.locToIndex(s);r.values[e]=t.values[i]}return r.toTensor()}function tl(t,e,n,r,s){const i=e[e.length-1],[a,o]=[t.length/i,i],l=ke(n,a*r),u=ke("int32",a*r);for(let e=0;e<a;e++){const n=e*o,s=t.subarray(n,n+o),i=[];for(let t=0;t<s.length;t++)i.push({value:s[t],index:t});i.sort(((t,e)=>e.value-t.value));const a=e*r,c=l.subarray(a,a+r),h=u.subarray(a,a+r);for(let t=0;t<r;t++)c[t]=i[t].value,h[t]=i[t].index}const c=e.slice();return c[c.length-1]=r,[Fn(l,c,n),Fn(u,c,"int32")]}function el(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=dr(t,"int32"),s=dr([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=r.indexToLoc(n[e]),a=e*t.length;s.values.set(i,a)}return s.toTensor()}class nl{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class rl{time(t){return sl("time")}read(t){return sl("read")}readSync(t){return sl("readSync")}numDataIds(){return sl("numDataIds")}disposeData(t){return sl("disposeData")}write(t,e,n){return sl("write")}move(t,e,n,r){return sl("move")}memory(){return sl("memory")}floatPrecision(){return sl("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return sl("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:a}){return sl("fusedBatchMatMul")}slice(t,e,n){return sl("slice")}stridedSlice(t,e,n,r){return sl("stridedSlice")}unstack(t,e){return sl("unstack")}reverse(t,e){return sl("reverse")}concat(t,e){return sl("concat")}neg(t){return sl("neg")}add(t,e){return sl("add")}addN(t){return sl("addN")}subtract(t,e){return sl("subtract")}multiply(t,e){return sl("multiply")}realDivide(t,e){return sl("realDivide")}floorDiv(t,e){return sl("floorDiv")}sum(t,e){return sl("sum")}prod(t,e){return sl("prod")}unsortedSegmentSum(t,e,n){return sl("unsortedSegmentSum")}argMin(t,e){return sl("argMin")}argMax(t,e){return sl("argMax")}equal(t,e){return sl("equal")}notEqual(t,e){return sl("notEqual")}less(t,e){return sl("less")}lessEqual(t,e){return sl("lessEqual")}greater(t,e){return sl("greater")}greaterEqual(t,e){return sl("greaterEqual")}logicalNot(t){return sl("logicalNot")}logicalAnd(t,e){return sl("logicalAnd")}logicalOr(t,e){return sl("logicalOr")}where(t){return sl("where")}select(t,e,n){return sl("select")}topk(t,e,n){return sl("topk")}min(t,e){return sl("min")}minimum(t,e){return sl("minimum")}mod(t,e){return sl("mod")}max(t,e){return sl("max")}maximum(t,e){return sl("maximum")}all(t,e){return sl("all")}any(t,e){return sl("any")}squaredDifference(t,e){return sl("squaredDifference")}ceil(t){return sl("ceil")}floor(t){return sl("floor")}round(t){return sl("round")}sign(t){return sl("sign")}isNaN(t){return sl("isNaN")}isInf(t){return sl("isInf")}isFinite(t){return sl("isFinite")}pow(t,e){return sl("pow")}exp(t){return sl("exp")}expm1(t){return sl("expm1")}softmax(t,e){return sl("softmax")}log(t){return sl("log")}log1p(t){return sl("log1p")}sqrt(t){return sl("sqrt")}rsqrt(t){return sl("rsqrt")}square(t){return sl("square")}reciprocal(t){return sl("reciprocal")}relu(t){return sl("relu")}relu6(t){return sl("relu6")}prelu(t,e){return sl("prelu")}elu(t){return sl("elu")}eluDer(t,e){return sl("eluDer")}selu(t){return sl("selu")}int(t){return sl("int")}clip(t,e,n){return sl("clip")}abs(t){return sl("abs")}complexAbs(t){return sl("complexAbs")}sigmoid(t){return sl("sigmoid")}softplus(t){return sl("softplus")}sin(t){return sl("sin")}cos(t){return sl("cos")}tan(t){return sl("tan")}asin(t){return sl("asin")}acos(t){return sl("acos")}atan(t){return sl("atan")}atan2(t,e){return sl("atan2")}sinh(t){return sl("sinh")}cosh(t){return sl("cosh")}tanh(t){return sl("tanh")}asinh(t){return sl("asinh")}acosh(t){return sl("acosh")}atanh(t){return sl("atanh")}erf(t){return sl("erf")}step(t,e){return sl("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return sl("fusedConv2d")}conv2d(t,e,n){return sl("conv2d")}conv2dDerInput(t,e,n){return sl("conv2dDerInput")}conv2dDerFilter(t,e,n){return sl("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return sl("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return sl("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return sl("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return sl("depthwiseConv2DDerFilter")}conv3d(t,e,n){return sl("conv3d")}conv3dDerInput(t,e,n){return sl("conv3dDerInput")}conv3dDerFilter(t,e,n){return sl("conv3dDerFilter")}maxPool(t,e){return sl("maxPool")}maxPoolBackprop(t,e,n,r){return sl("maxPoolBackprop")}avgPool(t,e){return sl("avgPool")}avgPoolBackprop(t,e,n){return sl("avgPoolBackprop")}avgPool3d(t,e){return sl("avgPool3d")}avgPool3dBackprop(t,e,n){return sl("avgPool3dBackprop")}maxPool3d(t,e){return sl("maxPool3d")}maxPool3dBackprop(t,e,n,r){return sl("maxPool3dBackprop")}reshape(t,e){return sl("reshape")}cast(t,e){return sl("cast")}tile(t,e){return sl("tile")}pad(t,e,n){return sl("pad")}transpose(t,e){return sl("transpose")}gather(t,e,n){return sl("gather")}gatherND(t,e){return sl("gatherND")}scatterND(t,e,n){return sl("scatterND")}batchToSpaceND(t,e,n){return sl("batchToSpaceND")}spaceToBatchND(t,e,n){return sl("spaceToBatchND")}resizeBilinear(t,e,n,r){return sl("resizeBilinear")}resizeBilinearBackprop(t,e,n){return sl("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return sl("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return sl("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,i){return sl("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return sl("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,i,a){return sl("LRNGrad")}multinomial(t,e,n,r){return sl("multinomial")}oneHot(t,e,n,r){return sl("oneHot")}cumsum(t,e,n,r){return sl("cumsum")}nonMaxSuppression(t,e,n,r,s){return sl("nonMaxSuppression")}fft(t){return sl("fft")}ifft(t){return sl("ifft")}complex(t,e){return sl("complex")}real(t){return sl("real")}imag(t){return sl("imag")}cropAndResize(t,e,n,r,s,i){return sl("cropAndResize")}depthToSpace(t,e,n){return sl("depthToSpace")}split(t,e,n){return sl("split")}sparseToDense(t,e,n,r){return sl("sparseToDense")}diag(t){return sl("diag")}fill(t,e,n){return sl("fill")}onesLike(t){return sl("onesLike")}zerosLike(t){return sl("zerosLike")}linspace(t,e,n){return sl("linspace")}dispose(){return sl("dispose")}}function sl(t){throw new Error(`'${t}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}const il={kernelName:"Abs",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(t,Ea(pr(n,"float32"),-1))}}},al={kernelName:b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ni(pr(n,"float32")),r=oa(xi(Xr(1),e));return Di(qs(t,r))}}}},ol={kernelName:x,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=oa(xi(Ni(pr(n,"float32")),1));return qs(t,e)}}}},ll={kernelName:w,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Js(n.shape,r.shape);return{a:()=>{let e=t;const r=Ys(n.shape,s);return r.length>0&&(e=wi(e,r)),os(e,n.shape)},b:()=>{let e=t;const n=Ys(r.shape,s);return n.length>0&&(e=wi(e,n)),os(e,r.shape)}}}},ul={kernelName:v,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Li(n)}}},cl={kernelName:C,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Li(n)}}},hl={kernelName:$,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,oa(xi(Xr(1),Ni(pr(n,"float32")))))}}},dl={kernelName:k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=oa(Zr(Xr(1),Ni(pr(n,"float32"))));return qs(t,e)}}}},pl={kernelName:E,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Js(n.shape,r.shape);return{a:()=>{const e=Zr(Ni(n),Ni(r));let i=fi(t,qs(r,e));const a=Ys(n.shape,s);return a.length>0&&(i=wi(i,a)),os(i,n.shape)},b:()=>{const e=Zr(Ni(n),Ni(r));let i=Di(fi(t,qs(n,e)));const a=Ys(r.shape,s);return a.length>0&&(i=wi(i,a)),os(i,r.shape)}}}},fl={kernelName:I,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Zr(Ni(pr(n,"float32")),1))}}},gl={kernelName:S,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,xi(Xr(1),Ni(pr(n,"float32"))))}}},ml=Nn({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],i,a){const o=Rn(t,"dy","avgPool3dBackprop"),l=Rn(e,"input","avgPool3dBackprop");let u=o,c=l,h=!1;4===l.rank&&(h=!0,u=os(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=os(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),he(5===u.rank,(()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${u.rank}.`)),he(5===c.rank,(()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${c.rank}.`)),he($s(r,s),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=a&&he(ye(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const d={dy:u,input:c},p={filterSize:n,strides:r,dilations:s,pad:i,dimRoundingMode:a},f=vn.runKernelFunc((t=>{const e=fs(c.shape,n,r,s,i,a);return t.avgPool3dBackprop(u,c,e)}),d,null,"AvgPool3DBackprop",p);return h?os(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),yl={kernelName:A,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,dilations:a,pad:o,dimRoundingMode:l}=n,u=null==a?[1,1,1]:a;return{x:()=>ml(t,r,s,i,u,o,l)}}},bl=Nn({avgPoolBackprop_:function(t,e,n,r,s){const i=Rn(t,"dy","avgPoolBackprop"),a=Rn(e,"input","avgPoolBackprop");he(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=os(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=os(i,[1,i.shape[0],i.shape[1],i.shape[2]])),he(4===l.rank,(()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${l.rank}.`)),he(4===o.rank,(()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=vn.runKernelFunc((t=>{const e=ps(o.shape,n,r,1,s);return t.avgPoolBackprop(l,o,e)}),c,null,"AvgPoolBackprop",h);return u?os(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),xl={kernelName:R,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:a}=n;return{x:()=>bl(t,r,s,i,a)}}},wl={kernelName:N,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Oa(t,s,!1,!1),b:()=>Oa(t,r,!0,!1)}:i&&!a?{a:()=>Oa(s,t,!1,!0),b:()=>Oa(r,t,!1,!1)}:{a:()=>Oa(s,t,!0,!0),b:()=>Oa(t,r,!0,!0)}:{a:()=>Oa(t,s,!1,!0),b:()=>Oa(r,t,!0,!1)}}},vl=Nn({spaceToBatchND_:function(t,e,n){const r=Rn(t,"x","spaceToBatchND");he(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),he(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),he(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},i={blockShape:e,paddings:n};return vn.runKernelFunc((t=>t.spaceToBatchND(r,e,n)),s,null,Bt,i)}}),Cl={kernelName:T,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>vl(t,r,s)}}},$l={kernelName:D,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let t=s.length-1;t>=0;t--)if(s[t]===i[t])a[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>wi(t,o,!0)}}},kl={kernelName:F,gradFunc:t=>({x:()=>t.clone()})},Il={kernelName:_,gradFunc:t=>({x:()=>Li(t)})},Sl={kernelName:O,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>ma(Ci(hi(r,s),Za(r,i)),t,Li(t))}}},El={kernelName:L,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,i=Ce(s,e[0].shape)[0],a=r.map((t=>t[i]));return aa(t,a,i).map((t=>()=>t))}},Rl={kernelName:M,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return he(Cs(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Us(r.shape,t,s,a,o,l),filter:()=>Ia(r,t,s.shape,a,o,l)}}},Al={kernelName:z,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Ps(t,s,i,a,o,1,l),filter:()=>Ia(t,r,s.shape,i,a,o,l)}}},Nl=Nn({conv3DBackpropFilter_:function(t,e,n,r,s){let i=t;4===t.rank&&(i=os(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=os(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),he(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),he(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),he(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),he(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),he(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,y:a},l={strides:r,pad:s};return vn.runKernelFunc((t=>{const e=ms(i.shape,n,r,1,s);return t.conv3dDerFilter(i,a,e)}),o,null,"Conv3DBackpropFilterV2",l)}}),Tl=Nn({conv3DBackpropInput_:function(t,e,n,r,s){he(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=os(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];he(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),he(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),he(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),he(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),he(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a},h={pad:s},d=vn.runKernelFunc((t=>{const e=ms(i,n.shape,r,1,s);return t.conv3dDerInput(a,n,e)}),c,null,"Conv3DBackpropInputV2",h);return o?os(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Dl={kernelName:B,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i}=n;he(Cs(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=e;return{x:()=>Tl(a.shape,t,o,s,i),filter:()=>Nl(a,t,o.shape,s,i)}}},Fl=Nn({sin_:function(t){const e=Rn(t,"x","sin"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.sin(e);return n([e]),r}),n,null,"Sin")}}),_l={kernelName:P,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(Di(Fl(pr(n,"float32"))),t)}}},Ol=Nn({sinh_:function(t){const e=Rn(t,"x","sinh"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.sinh(e);return n([e]),r}),n,null,_t)}}),Ll={kernelName:W,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(Ol(pr(n,"float32")),t)}}},Ml=Nn({cumsum_:function(t,e=0,n=!1,r=!1){const s=Rn(t,"x","cumsum"),i={x:s},a={axis:e,exclusive:n,reverse:r};return vn.runKernelFunc(((t,i)=>{const a=ss([e],s.rank);let o=s;null!=a&&(o=ls(s,a));const l=as(1,s.rank)[0];let u=t.cumsum(o,l,n,r);if(i([s]),null!=a){const t=is(a);u=ls(u,t)}return u}),i,null,U,a)}}),zl={kernelName:U,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const e=ss([s],r.rank);let n=Ml(t,s,i,!a);return null!=e&&(n=ls(n,e)),n}}}},Bl={kernelName:V,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;he(Cs(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;he(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),he(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),he(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),he($s(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=a&&he(ye(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const c=gs(l.shape,u.shape,s,o,i,a,!0);return{x:()=>_a(l.shape,t,u,c),filter:()=>Fa(l,t,u.shape,c)}}},Pl={kernelName:G,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,i={x:r,filter:s,dy:t},a={x:r,filter:s,dy:t};return{x:()=>vn.runKernel(H,i,n),filter:()=>vn.runKernel(j,a,n)}}},Wl={kernelName:q,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Js(n.shape,r.shape);return{a:()=>{const e=qs(t,pr(r,"float32")),i=Ys(n.shape,s);return i.length>0?os(wi(e,i),n.shape):e},b:()=>{let e=fi(t,pr(n,"float32"));const i=Ys(r.shape,s);i.length>0&&(e=os(wi(e,i),r.shape));const a=Ni(r);return Di(qs(e,pr(a,"float32")))}}}},Ul={kernelName:"Elu",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>vn.runKernelFunc(r,s,null,"EluGrad")}}},Vl={kernelName:"Erf",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=fi(yi(Di(Ni(n))),2/Math.sqrt(Math.PI));return{x:()=>fi(t,r)}}},Gl={kernelName:"Exp",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(t,n)}}},Hl={kernelName:K,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(t,yi(n))}}},jl={kernelName:Y,gradFunc:t=>({x:()=>Li(t)})},ql={kernelName:J,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Js(n.shape,r.shape);return{a:()=>{const e=qs(t,pr(r,"float32")),i=Ys(n.shape,s);return i.length>0?os(wi(e,i),n.shape):e},b:()=>{let e=fi(t,pr(n,"float32"));const i=Ys(r.shape,s);i.length>0&&(e=os(wi(e,i),r.shape));const a=Ni(r);return Di(qs(e,pr(a,"float32")))}}}},Kl=Nn({rsqrt_:function(t){const e=Rn(t,"x","rsqrt"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.rsqrt(e);return n([e]),r}),n,null,Nt)}}),Xl={kernelName:Z,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=e,l=null==o?Xr(1):o,u=Ys(i.shape,s.shape),c=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=xi(s,i),d=fi(t,l),p=Kl(Zr(a,Xr(r))),f=fi(fi(fi(p,p),p),Xr(-.5));return{x:()=>1===i.rank?os(fi(fi(t,ti(os(p,[1,1,1,i.shape[0]]),c)),l),s.shape):os(fi(fi(t,p),l),s.shape),mean:()=>{let t=fi(fi(p,Xr(-1)),d);return 1===i.rank&&(t=wi(t,u)),os(t,i.shape)},variance:()=>{let t=fi(fi(f,h),d);return 1===i.rank&&(t=wi(t,u)),os(t,i.shape)},scale:()=>{const e=fi(h,p);let n=fi(t,e);return 1===i.rank&&(n=wi(n,u)),os(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=wi(e,u)),os(e,i.shape)}}}},Yl=Nn({unsortedSegmentSum_:function(t,e,n){const r=Rn(t,"x","unsortedSegmentSum"),s=Rn(e,"segmentIds","unsortedSegmentSum","int32");he(ye(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},a={numSegments:n};return vn.runKernelFunc(((t,e)=>{const i=t.unsortedSegmentSum(r,s,n);return e([s]),i}),i,null,Kt,a)}}),Jl={kernelName:Q,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:i}=n,a=Ce(i,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,o=e.slice(0,a),l=o.length,u=e.slice(i,e.length).slice(1),c=u.length,h=Zl(0,l),d=Zl(l+1,l+1+c),p=Ql([o,[n],u]),f=os(t,p),g=os(s,[n]),m=Ql([[l],h,d]),y=ls(f,m);let b=Yl(y,g,r.shape[a]);const x=is(m);return b=ls(b,x),b},indices:()=>s}}};function Zl(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Ql(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const tu={kernelName:tt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Li(n),b:()=>Li(r)}}},eu={kernelName:et,gradFunc:t=>({x:()=>pr(t,"float32")})},nu={kernelName:nt,gradFunc:t=>({x:()=>Li(t)})},ru={kernelName:rt,gradFunc:t=>({x:()=>Li(t)})},su={kernelName:st,gradFunc:t=>({x:()=>Li(t)})},iu={kernelName:it,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Zr(n,1))}}},au={kernelName:"Log",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,pr(n,"float32"))}}},ou={kernelName:at,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=yi(r);return xi(t,fi(wi(t,s,!0),e))}}}},lu=Nn({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:r,bias:s,alpha:i,beta:a};return vn.runKernelFunc((o=>o.LRNGrad(n,t,e,r,s,i,a)),o,null,"LRNBackprop",l)}}),uu={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>lu(r,s,t,i,a,o,l)}}};function cu(t,e,n,r,s){return e.rank<n.rank&&(e=os(e,ns(e.shape,r))),t.rank<n.rank&&(t=os(t,ns(t.shape,r))),{x:()=>{const r=fi(t,pr(Zs(n,e),t.dtype));return null==s?r:ls(r,s)}}}const hu={kernelName:ot,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,[i,a]=e,o=Ce(s,i.shape),l=ss(o,i.rank),u=cu(t,a,i,o,l);return{x:()=>{let t=u.x();return null!=l&&(t=ls(t)),t}}}},du=Nn({less_:function(t,e){let n=Rn(t,"a","less"),r=Rn(e,"b","less");[n,r]=fn(n,r),Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc((t=>t.less(n,r)),s,null,"Less")}}),pu={kernelName:lt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>fi(t,pr(hi(n,r),"float32")),b:()=>fi(t,pr(du(n,r),"float32"))}}},fu=Nn({maxPool3dBackprop_:function(t,e,n,r,s,i=[1,1,1],a,o){const l=Rn(t,"dy","maxPool3dBackprop"),u=Rn(e,"input","maxPool3dBackprop"),c=Rn(n,"output","maxPool3dBackprop");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=os(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=os(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=os(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),he(5===h.rank,(()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${h.rank}.`)),he(5===d.rank,(()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${d.rank}.`)),he(5===p.rank,(()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${p.rank}.`)),he($s(s,i),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`)),null!=o&&he(ye(a),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const g={dy:h,input:d,output:p},m={filterSize:r,strides:s,dilations:i,pad:a,dimRoundingMode:o},y=vn.runKernelFunc((t=>{const e=fs(d.shape,r,s,i,a,o);return t.maxPool3dBackprop(h,d,p,e)}),g,null,"MaxPool3DBackprop",m);return f?os(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),gu={kernelName:ct,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>fu(t,r,s,i,a,c,l,u)}}},mu=Nn({maxPoolBackprop_:function(t,e,n,r,s,i,a){const o=Rn(t,"dy","maxPoolBackprop"),l=Rn(e,"input","maxPoolBackprop"),u=Rn(n,"output","maxPoolBackprop");he(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),he(4===o.rank,(()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${o.rank}.`)),he(4===l.rank,(()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${l.rank}.`)),null!=a&&he(ye(i),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return vn.runKernelFunc((t=>{const e=ps(l.shape,r,s,1,i,a);return t.maxPoolBackprop(o,l,u,e)}),c,null,"MaxPoolBackprop",h)}}),yu={kernelName:ut,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>mu(t,r,s,i,a,o)}}},bu={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[i,a]=e,o=Ce(s,i.shape),l=ss(o,i.rank),u=cu(t,a,i,o,l);return{x:()=>{let t=u.x();return null!=l&&(t=ls(t)),t}}}},xu={kernelName:dt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>fi(t,pr(Za(n,r),"float32")),b:()=>fi(t,pr(ci(n,r),"float32"))}}},wu={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Js(n.shape,r.shape);return{a:()=>{const e=Ys(n.shape,s);return e.length>0?os(wi(t,e),n.shape):t},b:()=>{const e=fi(t,Di(ri(qs(n,r)))),i=Ys(r.shape,s);return i.length>0?os(wi(e,i),r.shape):e}}}},vu={kernelName:pt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Js(n.shape,r.shape);return{a:()=>{const e=fi(t,pr(r,"float32")),i=Ys(n.shape,s);return i.length>0?os(wi(e,i),n.shape):e},b:()=>{const e=fi(t,pr(n,"float32")),i=Ys(r.shape,s);return i.length>0?os(wi(e,i),r.shape):e}}}},Cu={kernelName:ft,gradFunc:t=>({x:()=>Di(t)})},$u={kernelName:xt,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Ii(n.shape,"float32")}}},ku={kernelName:bt,gradFunc:t=>({x:()=>Li(t)})},Iu={kernelName:wt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>Zi(t,i,r.shape)}}},Su={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,i=n,a=r,o=Js(i.shape,a.shape);return{a:()=>{const e=pr(a,"float32");let n=fi(t,fi(e,ya(i,xi(e,Xr(1)))));const r=Ys(i.shape,o);return r.length>0&&(n=wi(n,r)),os(n,i.shape)},b:()=>{const e=ci(i,0),n=ma(e,mi(i),Li(i));let r=fi(t,fi(s,n));const l=Ys(a.shape,o);return l.length>0&&(r=wi(r,l)),os(r,a.shape)}}}},Eu={kernelName:vt,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=ci(n,0);return{x:()=>ma(s,t,fi(t,r)),alpha:()=>{let e=ma(s,Li(t),fi(t,n));const i=Ys(r.shape,t.shape);return i.length>0&&(e=wi(e,i)),os(e,r.shape)}}}},Ru={kernelName:Ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Di(Ni(n)))}}},Au={kernelName:Et,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=fi(Za(n,6),Ea(n));return{x:()=>fi(t,pr(r,"float32"))}}},Nu={kernelName:$t,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(t,pr(Ea(n),"float32"))}}},Tu={kernelName:kt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>os(t,n.shape)}}},Du={kernelName:St,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeBilinearBackprop(t,r,s)},i={images:r};return{images:()=>vn.runKernelFunc(s,i,null,"ResizeBilinearGrad",n)}}},Fu={kernelName:It,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeNearestNeighborBackprop(t,r,s)},i={images:r};return{images:()=>vn.runKernelFunc(s,i,null,"ResizeNearestNeighborGrad",n)}}},_u={kernelName:Rt,gradFunc:(t,e,n)=>{const{dims:r}=n,s=Ce(r,t.shape);return{x:()=>Ki(t,s)}}},Ou={kernelName:At,gradFunc:t=>({x:()=>Li(t)})},Lu={kernelName:Nt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Di(qs(t,fi(ya(n,1.5),2)))}}},Mu=Nn({logicalNot_:function(t){const e=Rn(t,"x","logicalNot","bool"),n={x:e};return vn.runKernelFunc((t=>t.logicalNot(e)),n,null,"LogicalNot")}}),zu={kernelName:Tt,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>pr(Li(n),"float32"),t:()=>fi(t,pr(n,t.dtype)),e:()=>fi(t,pr(Mu(n),t.dtype))}}},Bu={kernelName:Dt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=ci(n,Xr(0)),r=Xr(To),s=Xr(Do),i=fi(t,s),a=fi(fi(t,r),yi(pr(n,"float32")));return ma(e,i,a)}}}},Pu={kernelName:Lt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(t,fi(n,xi(Xr(1),n)))}}},Wu={kernelName:Ot,gradFunc:t=>({x:()=>Li(t)})},Uu=Nn({cos_:function(t){const e=Rn(t,"x","cos"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.cos(e);return n([e]),r}),n,null,P)}}),Vu={kernelName:"Sin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(Uu(pr(n,"float32")),t)}}},Gu=Nn({cosh_:function(t){const e=Rn(t,"x","cosh"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.cosh(e);return n([e]),r}),n,null,W)}}),Hu={kernelName:_t,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(Gu(pr(n,"float32")),t)}}},ju={kernelName:Ft,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:i}=n,a=r.shape,[o,l]=Mr(r,s,i),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>zi(t,u)}}},qu={kernelName:Wt,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,i=fi(t,r);return{logits:()=>xi(i,fi(wi(i,[s],!0),r))}}},Ku={kernelName:Mt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(t,Ji(n))}}},Xu=Nn({batchToSpaceND_:function(t,e,n){const r=Rn(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));he(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),he(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),he(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const i={x:r},a={blockShape:e,crops:n};return vn.runKernelFunc((t=>t.batchToSpaceND(r,e,n)),i,null,T,a)}}),Yu={kernelName:Bt,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Xu(t,r,s)}}},Ju={kernelName:Pt,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Os(t,r)}}},Zu=[il,al,ol,ll,{kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},ul,cl,hl,dl,pl,fl,gl,yl,xl,wl,Cl,$l,kl,Il,Sl,El,Al,Rl,Dl,_l,Ll,zl,Bl,Pl,Wl,Ul,Vl,Gl,Hl,ql,jl,Xl,Jl,tu,eu,nu,ru,su,iu,au,ou,uu,hu,hu,pu,gu,yu,bu,xu,wu,vu,Cu,$u,ku,Iu,Iu,Su,Eu,Ru,Au,Nu,Tu,Du,Fu,_u,Ou,Lu,zu,Bu,Pu,Wu,Vu,Hu,ju,qu,Ku,Yu,Yu,Ju,Ju,{kernelName:zt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,fi(oa(pr(n,"float32")),2))}}},{kernelName:Ut,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Xr(2);return{a:()=>fi(t,fi(s,xi(n,r))),b:()=>fi(t,fi(s,xi(r,n)))}}},{kernelName:Vt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(t,fi(pr(n,"float32"),2))}}},{kernelName:Yt,gradFunc:t=>({x:()=>Li(t)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Js(n.shape,r.shape);return{a:()=>{let e=t;const r=Ys(n.shape,s);return r.length>0&&(e=wi(e,r)),os(e,n.shape)},b:()=>{let e=t;const n=Ys(r.shape,s);return n.length>0&&(e=wi(e,n)),os(Di(e),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:i}=n;Ce(i,r.shape).forEach((t=>{s[t]=1}));const a=os(t,s),o=fi(a,Si(r.shape,"float32"));return{x:()=>o}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Ni(Uu(n)))}}},{kernelName:Gt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fi(xi(Xr(1),Ni(n)),t)}}},{kernelName:Ht,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=Li(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Zr(e,Zi(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=Zr(e,Zi(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)e=Zr(e,Zi(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)e=Zr(e,Zi(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:jt,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,i=is(s);return{x:()=>ls(t,i)}}},{kernelName:qt,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>ua(t,s)}}},{kernelName:Kt,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=pi(e,Li(e)),r=ui(t,n);let s=hi(e,Xr(0,"int32"));const i=r.rank-s.rank;for(let t=0;t<i;++t)s=Qs(s,t+1);s=Ci(s,Si(r.shape,"bool"));const a=Li(r);return ma(s,r,a)}(t,n)}}},{kernelName:Xt,gradFunc:t=>({x:()=>Li(t)})}];for(const t of Zu)ae(t);rn.prototype.abs=function(){return this.throwIfDisposed(),Jr(this)};const Qu=Nn({acos_:function(t){const e=Rn(t,"x","acos"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.acos(e);return n([e]),r}),n,null,b)}});rn.prototype.acos=function(){return this.throwIfDisposed(),Qu(this)};const tc=Nn({acosh_:function(t){const e=Rn(t,"x","acosh"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.acosh(e);return n([e]),r}),n,null,x)}});rn.prototype.acosh=function(){return this.throwIfDisposed(),tc(this)};const ec=Nn({mod_:function(t,e){let n=Rn(t,"a","mod"),r=Rn(e,"b","mod");[n,r]=fn(n,r);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.mod(n,r);return e([n,r]),s}),s,null,"Mod")}}),nc=Nn({addStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","addStrict"),r=Rn(e,"b","addStrict");return de(n.shape,r.shape,"Error in addStrict: "),Zr(n,r)}}),rc=Nn({divStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","div"),r=Rn(e,"b","div");return de(n.shape,r.shape,"Error in divideStrict: "),qs(n,r)}}),sc=Nn({maximumStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","maximumStrict"),r=Rn(e,"b","maximumStrict");return de(n.shape,r.shape,"Error in maximumStrict: "),pi(n,r)}}),ic=Nn({minimumStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","minimumStrict"),r=Rn(e,"b","minimumStrict");return de(n.shape,r.shape,"Error in minimumStrict: "),Ai(n,r)}}),ac=Nn({modStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","modStrict"),r=Rn(e,"b","modStrict");return de(n.shape,r.shape,"Error in modStrict: "),ec(n,r)}}),oc=Nn({mulStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","mul"),r=Rn(e,"b","mul");return de(n.shape,r.shape,"Error in multiplyStrict: "),fi(n,r)}}),lc=Nn({powStrict_:function(t,e){return Wr("strict variants of ops have been deprecated and will be removed in future"),de(t.shape,e.shape,"Error in powStrict: "),ya(t,e)}}),uc=Nn({squaredDifferenceStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","squaredDifferenceStrict"),r=Rn(e,"b","squaredDifferenceStrict");return de(n.shape,r.shape,"Error in squaredDifferenceStrict: "),io(n,r)}}),cc=Nn({subStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","subStrict"),r=Rn(e,"b","subStrict");return de(n.shape,r.shape,"Error in subStrict: "),xi(n,r)}});rn.prototype.addStrict=function(t){return this.throwIfDisposed(),nc(this,t)},rn.prototype.add=function(t){return this.throwIfDisposed(),Zr(this,t)},rn.prototype.all=function(t,e){return this.throwIfDisposed(),us(this,t,e)},rn.prototype.any=function(t,e){return this.throwIfDisposed(),cs(this,t,e)},rn.prototype.argMax=function(t){return this.throwIfDisposed(),hs(this,t)};const hc=Nn({argMin_:function(t,e=0){let n=Rn(t,"x","argMin");const r={x:n},s={axis:e};return vn.runKernelFunc(((t,r)=>{r([n]),null==e&&(e=0);let s=Ce(e,n.shape);const i=ss(s,n.rank);return null!=i&&(n=ls(n,i),s=as(s.length,n.rank)),t.argMin(n,s[0])}),r,null,C,s)}});rn.prototype.argMin=function(t){return this.throwIfDisposed(),hc(this,t)},rn.prototype.asScalar=function(){return this.throwIfDisposed(),he(1===this.size,(()=>"The array must have only 1 element.")),os(this,[])},rn.prototype.asType=function(t){return this.throwIfDisposed(),pr(this,t)},rn.prototype.as1D=function(){return this.throwIfDisposed(),os(this,[this.size])},rn.prototype.as2D=function(t,e){return this.throwIfDisposed(),os(this,[t,e])},rn.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),os(this,[t,e,n])},rn.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),os(this,[t,e,n,r])},rn.prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),os(this,[t,e,n,r,s])};const dc=Nn({asin_:function(t){const e=Rn(t,"x","asin"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.asin(e);return n([e]),r}),n,null,$)}});rn.prototype.asin=function(){return this.throwIfDisposed(),dc(this)};const pc=Nn({asinh_:function(t){const e=Rn(t,"x","asinh"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.asinh(e);return n([e]),r}),n,null,k)}});rn.prototype.asinh=function(){return this.throwIfDisposed(),pc(this)};const fc=Nn({atan_:function(t){const e=Rn(t,"x","atan"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.atan(e);return n([e]),r}),n,null,I)}});rn.prototype.atan=function(){return this.throwIfDisposed(),fc(this)};const gc=Nn({atan2_:function(t,e){let n=Rn(t,"a","atan2"),r=Rn(e,"b","atan2");[n,r]=fn(n,r);const s={a:n,b:r};return vn.runKernelFunc(((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s}),s,null,E)}});rn.prototype.atan2=function(t){return this.throwIfDisposed(),gc(this,t)};const mc=Nn({atanh_:function(t){const e=Rn(t,"x","atanh"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.atanh(e);return n([e]),r}),n,null,S)}});rn.prototype.atanh=function(){return this.throwIfDisposed(),mc(this)},rn.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Is(this,t,e,n,r)},rn.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Xu(this,t,e)},rn.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),Rs(this,t,e,n,r,s)},rn.prototype.broadcastTo=function(t){return this.throwIfDisposed(),ga(this,t)},rn.prototype.cast=function(t){return this.throwIfDisposed(),pr(this,t)};const yc=Nn({ceil_:function(t){const e=Rn(t,"x","ceil"),n={x:e};return vn.runKernelFunc((t=>t.ceil(e)),n,null,_)}});rn.prototype.ceil=function(){return this.throwIfDisposed(),yc(this)},rn.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Ds(this,t,e)},rn.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof rn&&(t=[t]),Os([this,...t],e)},rn.prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Ws(this,t,e,n,r,s,i)},rn.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Vs(this,t,e,n,r,s)},rn.prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Ps(this,t,e,n,r,s,i)},rn.prototype.cos=function(){return this.throwIfDisposed(),Uu(this)},rn.prototype.cosh=function(){return this.throwIfDisposed(),Gu(this)},rn.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Ml(this,t,e,n)};const bc=Nn({depthToSpace_:function(t,e,n="NHWC"){const r=Rn(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];he(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),he(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),he(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:e,dataFormat:n};return vn.runKernelFunc((t=>t.depthToSpace(r,e,n)),o,null,"DepthToSpace",l)}});rn.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),bc(this,t,e)},rn.prototype.depthwiseConv2D=function(t,e,n,r,s,i){return Wr("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Hs(this,t,e,n,r,s,i)},rn.prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Hs(this,t,e,n,r,s,i)};const xc=Nn({dilation2d_:function(t,e,n,r,s=[1,1],i="NHWC"){const a=Rn(t,"x","dilation2d"),o=Rn(e,"filter","dilation2d");he(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),he(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),he("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=os(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=vn.runKernel(G,c,h);return u?os(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});rn.prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),xc(this,t,e,n,r,s)};const wc=Nn({divNoNan_:function(t,e){let n=Rn(t,"a","div"),r=Rn(e,"b","div");[n,r]=fn(n,r);const s=qs(n,r),i=Li(s),a=Zs(r,i);return ma(a,i,s)}});rn.prototype.divNoNan=function(t){return this.throwIfDisposed(),wc(this,t)},rn.prototype.divStrict=function(t){return this.throwIfDisposed(),rc(this,t)},rn.prototype.div=function(t){return this.throwIfDisposed(),qs(this,t)};const vc=Nn({dot_:function(t,e){const n=Rn(t,"t1","dot"),r=Rn(e,"t2","dot");he(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(he(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const t=os(n,[1,-1]),e=os(r,[-1,1]),s=Oa(t,e);return os(s,[])}if(1===n.rank&&2===r.rank){const t=os(n,[1,-1]),e=os(r,[r.shape[0],r.shape[1]]),s=Oa(t,e);return os(s,[s.size])}if(2===n.rank&&1===r.rank){const t=os(r,[-1,1]),e=Oa(n,t);return os(e,[e.size])}{const t=os(r,[r.shape[0],r.shape[1]]);return Oa(n,t)}}});rn.prototype.dot=function(t){return this.throwIfDisposed(),vc(this,t)},rn.prototype.elu=function(){return this.throwIfDisposed(),Ks(this)};const Cc=Nn({equalStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","equalStrict"),r=Rn(e,"b","equalStrict");return de(n.shape,r.shape,"Error in equalStrict: "),Zs(n,r)}}),$c=Nn({greaterEqualStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","greaterEqualStrict"),r=Rn(e,"b","greaterEqualStrict");return de(n.shape,r.shape,"Error in greaterEqualStrict: "),hi(n,r)}}),kc=Nn({greaterStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","greaterStrict"),r=Rn(e,"b","greaterStrict");return de(n.shape,r.shape,"Error in greaterStrict: "),ci(n,r)}}),Ic=Nn({lessEqualStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","lessEqualStrict"),r=Rn(e,"b","lessEqualStrict");return de(n.shape,r.shape,"Error in lessEqualStrict: "),Za(n,r)}}),Sc=Nn({lessStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","lessStrict"),r=Rn(e,"b","lessStrict");return de(n.shape,r.shape,"Error in lessStrict: "),du(n,r)}}),Ec=Nn({notEqualStrict_:function(t,e){Wr("strict variants of ops have been deprecated and will be removed in future");const n=Rn(t,"a","notEqualStrict"),r=Rn(e,"b","notEqualStrict");return de(n.shape,r.shape,"Error in notEqualStrict: "),Fi(n,r)}});rn.prototype.equalStrict=function(t){return this.throwIfDisposed(),Cc(this,t)},rn.prototype.equal=function(t){return this.throwIfDisposed(),Zs(this,t)};const Rc=Nn({erf_:function(t){let e=Rn(t,"x","erf");he("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=pr(e,"float32"));const n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.erf(e);return n([e]),r}),n,null,"Erf")}});rn.prototype.erf=function(){return this.throwIfDisposed(),Rc(this)},rn.prototype.exp=function(){return this.throwIfDisposed(),yi(this)},rn.prototype.expandDims=function(t){return this.throwIfDisposed(),Qs(this,t)};const Ac=Nn({expm1_:function(t){const e=Rn(t,"x","expm1"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.expm1(e);return n([e]),r}),n,null,K)}});rn.prototype.expm1=function(){return this.throwIfDisposed(),Ac(this)},rn.prototype.fft=function(){return this.throwIfDisposed(),va(this)},rn.prototype.flatten=function(){return this.throwIfDisposed(),os(this,[this.size])},rn.prototype.floor=function(){return this.throwIfDisposed(),ri(this)},rn.prototype.floorDiv=function(t){return this.throwIfDisposed(),js(this,t)},rn.prototype.gather=function(t,e){return this.throwIfDisposed(),ui(this,t,e)},rn.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),$c(this,t)},rn.prototype.greaterEqual=function(t){return this.throwIfDisposed(),hi(this,t)},rn.prototype.greaterStrict=function(t){return this.throwIfDisposed(),kc(this,t)},rn.prototype.greater=function(t){return this.throwIfDisposed(),ci(this,t)},rn.prototype.ifft=function(){return this.throwIfDisposed(),$a(this)},rn.prototype.irfft=function(){return this.throwIfDisposed(),ka(this)};const Nc=Nn({isFinite_:function(t){const e=Rn(t,"x","isFinite"),n={x:e};return vn.runKernelFunc((t=>t.isFinite(e)),n,null,nt)}});rn.prototype.isFinite=function(){return this.throwIfDisposed(),Nc(this)};const Tc=Nn({isInf_:function(t){const e=Rn(t,"x","isInf"),n={x:e};return vn.runKernelFunc((t=>t.isInf(e)),n,null,rt)}});rn.prototype.isInf=function(){return this.throwIfDisposed(),Tc(this)};const Dc=Nn({isNaN_:function(t){const e=Rn(t,"x","isNaN"),n={x:e};return vn.runKernelFunc((t=>t.isNaN(e)),n,null,st)}});rn.prototype.isNaN=function(){return this.throwIfDisposed(),Dc(this)},rn.prototype.leakyRelu=function(t){return this.throwIfDisposed(),gi(this,t)},rn.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Ic(this,t)},rn.prototype.lessEqual=function(t){return this.throwIfDisposed(),Za(this,t)},rn.prototype.lessStrict=function(t){return this.throwIfDisposed(),Sc(this,t)},rn.prototype.less=function(t){return this.throwIfDisposed(),du(this,t)};const Fc=Nn({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const i=Rn(t,"x","localResponseNormalization");he(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),he(ye(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=os(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:r,beta:s},c=vn.runKernelFunc(((t,i)=>{const o=t.localResponseNormalization4D(a,e,n,r,s);return i([a,o]),o}),l,null,"LRN",u);return o?os(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});rn.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Fc(this,t,e,n,r)};const _c=Nn({logSigmoid_:function(t){const e=Rn(t,"x","logSigmoid");return Kr((t=>({value:Di(sa(Di(t))),gradFunc:e=>fi(e,Ji(Di(t)))})))(e)}});rn.prototype.logSigmoid=function(){return this.throwIfDisposed(),_c(this)},rn.prototype.logSoftmax=function(t){return this.throwIfDisposed(),vi(this,t)},rn.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),oo(this,t,e)},rn.prototype.log=function(){return this.throwIfDisposed(),mi(this)},rn.prototype.log1p=function(){return this.throwIfDisposed(),ao(this)},rn.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Ci(this,t)},rn.prototype.logicalNot=function(){return this.throwIfDisposed(),Mu(this)};const Oc=Nn({logicalOr_:function(t,e){const n=Rn(t,"a","logicalOr","bool"),r=Rn(e,"b","logicalOr","bool");Js(n.shape,r.shape);const s={a:n,b:r};return vn.runKernelFunc((t=>t.logicalOr(n,r)),s,null,"LogicalOr")}});rn.prototype.logicalOr=function(t){return this.throwIfDisposed(),Oc(this,t)};const Lc=Nn({logicalXor_:function(t,e){const n=Rn(t,"a","logicalXor","bool"),r=Rn(e,"b","logicalXor","bool");return Js(n.shape,r.shape),Ci(Oc(t,e),Mu(Ci(t,e)))}});rn.prototype.logicalXor=function(t){return this.throwIfDisposed(),Lc(this,t)},rn.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Oa(this,t,e,n)},rn.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),$i(this,t,e,n,r)},rn.prototype.max=function(t,e){return this.throwIfDisposed(),bi(this,t,e)},rn.prototype.maximumStrict=function(t){return this.throwIfDisposed(),sc(this,t)},rn.prototype.maximum=function(t){return this.throwIfDisposed(),pi(this,t)},rn.prototype.mean=function(t,e){return this.throwIfDisposed(),Ei(this,t,e)},rn.prototype.min=function(t,e){return this.throwIfDisposed(),Ri(this,t,e)},rn.prototype.minimumStrict=function(t){return this.throwIfDisposed(),ic(this,t)},rn.prototype.minimum=function(t){return this.throwIfDisposed(),Ai(this,t)},rn.prototype.modStrict=function(t){return this.throwIfDisposed(),ac(this,t)},rn.prototype.mod=function(t){return this.throwIfDisposed(),ec(this,t)},rn.prototype.mulStrict=function(t){return this.throwIfDisposed(),oc(this,t)},rn.prototype.mul=function(t){return this.throwIfDisposed(),fi(this,t)},rn.prototype.neg=function(){return this.throwIfDisposed(),Di(this)},rn.prototype.norm=function(t,e,n){return this.throwIfDisposed(),xa(this,t,e,n)},rn.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Ec(this,t)},rn.prototype.notEqual=function(t){return this.throwIfDisposed(),Fi(this,t)},rn.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),_i(this,t,e,n)},rn.prototype.onesLike=function(){return this.throwIfDisposed(),Mi(this)},rn.prototype.pad=function(t,e){return this.throwIfDisposed(),zi(this,t,e)};const Mc=Nn({pool_:function(t,e,n,r,s,i){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const a=Rn(t,"x","maxPool");let o=a,l=!1;3===a.rank&&(l=!0,o=os(a,[1,a.shape[0],a.shape[1],a.shape[2]])),he($s(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const u=ps(o.shape,e,i,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),i=t.concat(r,s),a=e.map(((t,e)=>(t-i[e]%t)%t)),o=s.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[r[e],o[e]])),e.map(((t,e)=>[0,a[e]]))]}([u.inHeight,u.inWidth],c,h),g=d?r:"valid",m=d?o:vl(o,c,p),y=("avg"===n?()=>Is(m,e,i,g):()=>$i(m,e,i,g))(),b=d?y:Xu(y,c,f);return l?os(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});rn.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),Mc(this,t,e,n,r,s)},rn.prototype.powStrict=function(t){return this.throwIfDisposed(),lc(this,t)},rn.prototype.pow=function(t){return this.throwIfDisposed(),ya(this,t)},rn.prototype.prelu=function(t){return this.throwIfDisposed(),Bi(this,t)};const zc=Nn({prod_:function(t,e=null,n=!1){let r=Rn(t,"x","prod");const s={x:r},i={axis:e,keepDims:n};return vn.runKernelFunc((t=>{"bool"===r.dtype&&(r=pr(r,"int32"));const s=Ce(e,r.shape),i=ss(s,r.rank);let a=s,o=r;null!=i&&(o=ls(r,i),a=as(a.length,r.rank));let l=t.prod(o,a);if(n){const t=ns(l.shape,s);l=os(l,t)}return l}),s,null,"Prod",i)}});rn.prototype.prod=function(t,e){return this.throwIfDisposed(),zc(this,t,e)};const Bc=Nn({reciprocal_:function(t){const e=Rn(t,"x","reciprocal"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.reciprocal(e);return n([e]),r}),n,null,Ct)}});rn.prototype.reciprocal=function(){return this.throwIfDisposed(),Bc(this)},rn.prototype.relu=function(){return this.throwIfDisposed(),qi(this)},rn.prototype.relu6=function(){return this.throwIfDisposed(),Sa(this)},rn.prototype.reshapeAs=function(t){return this.throwIfDisposed(),os(this,t.shape)},rn.prototype.reshape=function(t){return this.throwIfDisposed(),os(this,t)},rn.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),Ya(this,t,e)},rn.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),Ja(this,t,e)},rn.prototype.reverse=function(t){return this.throwIfDisposed(),Ki(this,t)},rn.prototype.rfft=function(){return this.throwIfDisposed(),Ca(this)};const Pc=Nn({round_:function(t){const e=Rn(t,"x","round"),n={x:e};return vn.runKernelFunc((t=>t.round(e)),n,null,At)}});rn.prototype.round=function(){return this.throwIfDisposed(),Pc(this)},rn.prototype.rsqrt=function(){return this.throwIfDisposed(),Kl(this)},rn.prototype.selu=function(){return this.throwIfDisposed(),Xi(this)},rn.prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Yi(this,t,e,n,r,s,i)},rn.prototype.sigmoid=function(){return this.throwIfDisposed(),Ji(this)};const Wc=Nn({sign_:function(t){const e=Rn(t,"x","sign"),n={x:e};return vn.runKernelFunc((t=>t.sign(e)),n,null,Ot)}});rn.prototype.sign=function(){return this.throwIfDisposed(),Wc(this)},rn.prototype.sin=function(){return this.throwIfDisposed(),Fl(this)},rn.prototype.sinh=function(){return this.throwIfDisposed(),Ol(this)},rn.prototype.slice=function(t,e){return this.throwIfDisposed(),Zi(this,t,e)},rn.prototype.softmax=function(t){return this.throwIfDisposed(),ra(this,t)},rn.prototype.softplus=function(){return this.throwIfDisposed(),sa(this)},rn.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),vl(this,t,e)},rn.prototype.split=function(t,e){return this.throwIfDisposed(),aa(this,t,e)},rn.prototype.sqrt=function(){return this.throwIfDisposed(),oa(this)},rn.prototype.square=function(){return this.throwIfDisposed(),Ni(this)},rn.prototype.squaredDifference=function(t){return this.throwIfDisposed(),io(this,t)},rn.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),uc(this,t)},rn.prototype.squeeze=function(t){return this.throwIfDisposed(),la(this,t)},rn.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof rn?[this,t]:[this,...t];return ua(n,e)},rn.prototype.step=function(t){return this.throwIfDisposed(),Ea(this,t)};const Uc=Nn({stridedSlice_:function(t,e,n,r,s=0,i=0,a=0,o=0,l=0){let u=Rn(t,"x","stridedSlice");const c={x:u},h={begin:e,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return vn.runKernelFunc((t=>{null==r&&(r=new Array(e.length));const c=kr(a);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=u.rank-e.length,d=kr(o),p=u.shape.slice();d.forEach((t=>{e[t]=0,n[t]=1,p.splice(t,0,1)})),u=os(u,p);const{begin:f,end:g,strides:m}=Ar(u.shape,c,h,e,n,r,s,i,a);e=f,n=g,r=m;const y=kr(l);y.forEach((t=>{n[t]=e[t]+1,r[t]=1}));const b=Ir(e,n,r),x=b.filter(((t,e)=>-1===y.indexOf(e)));if(r.every((t=>1===t)))return os(Zi(u,e,b),x);const w=t.stridedSlice(u,e,n,r);return os(w,x)}),c,null,"StridedSlice",h)}});rn.prototype.stridedSlice=function(t,e,n,r,s,i,a,o){return this.throwIfDisposed(),Uc(this,t,e,n,r,s,i,a,o)},rn.prototype.subStrict=function(t){return this.throwIfDisposed(),cc(this,t)},rn.prototype.sub=function(t){return this.throwIfDisposed(),xi(this,t)},rn.prototype.sum=function(t,e){return this.throwIfDisposed(),wi(this,t,e)};const Vc=Nn({tan_:function(t){const e=Rn(t,"x","tan"),n={x:e};return vn.runKernelFunc(((t,n)=>{const r=t.tan(e);return n([e]),r}),n,null,"Tan")}});rn.prototype.tan=function(){return this.throwIfDisposed(),Vc(this)},rn.prototype.tanh=function(){return this.throwIfDisposed(),ca(this)},rn.prototype.tile=function(t){return this.throwIfDisposed(),ti(this,t)},rn.prototype.toBool=function(){return this.throwIfDisposed(),pr(this,"bool")},rn.prototype.toFloat=function(){return this.throwIfDisposed(),pr(this,"float32")},rn.prototype.toInt=function(){return this.throwIfDisposed(),pr(this,"int32")};const Gc=Nn({topk_:function(t,e=1,n=!0){const r=Rn(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},a={k:e,sorted:n},[o,l]=vn.runKernelFunc((t=>t.topk(r,e,n)),i,null,"TopK",a);return{values:o,indices:l}}});let Hc;function jc(){return null==Hc&&(Hc=vn.backend.epsilon()),Hc}rn.prototype.topk=function(t,e){return this.throwIfDisposed(),Gc(this,t,e)},rn.prototype.transpose=function(t){return this.throwIfDisposed(),ls(this,t)},rn.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Yl(this,t,e)},rn.prototype.unstack=function(t){return this.throwIfDisposed(),fa(this,t)},rn.prototype.where=function(t,e){return this.throwIfDisposed(),ma(t,this,e)},rn.prototype.zerosLike=function(){return this.throwIfDisposed(),Li(this)};class qc extends Error{constructor(t){super(t),Object.setPrototypeOf(this,qc.prototype)}}class Kc extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Kc.prototype)}}class Xc extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Xc.prototype)}}class Yc extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Yc.prototype)}}class Jc extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Jc.prototype)}}class Zc extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Zc.prototype)}}function Qc(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function th(t,e){if(!t)throw new Jc(e)}function eh(t,e){let n=0;for(const r of t)r===e&&n++;return n}function nh(t){return 1===t.length?t[0]:t}function rh(t){return Array.isArray(t)?t:[t]}function sh(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function ih(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let ah={};function oh(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function lh(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>lh(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?lh(e):t[n]=e.value)}}}function uh(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let i;if(s in n)i=n[s];else if(s in ah)i=ah[s];else if(i=e[s],null==i)throw new Xc(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new Xc(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in ah?[o,l]=ah.className:a in e&&([o,l]=e[a]),null==o)throw new Xc(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(ah))t[e]=ah[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},ah);for(const t of Object.keys(n))ah[t]=n[t];lh(i.config);const r=l(o,i.config,n,s);return ah=Object.assign({},e),r}{const t=Object.assign({},ah);for(const t of Object.keys(n))ah[t]=n[t];const e=new o(i.config);return ah=Object.assign({},t),e}}}function ch(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function hh(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function dh(t){if(null==t)throw new Xc(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function ph(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Xc(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function fh(t,e,n=0,r=1/0){return th(n>=0),th(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function gh(t,e){Array.isArray(t)?(he(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>gh(t,`element ${n+1} of ${e}`)))):he(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${mh(t)}.`))}function mh(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>mh(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function yh(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function bh(t,e){return Gr((()=>oa(wi(fi(t,t),e,!0))))}class xh extends zr{getConfig(){return{}}}class wh extends xh{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Gr((()=>{const e=bh(t,this.axis),n=Ds(e,0,this.maxValue);return fi(t,qs(n,Zr(jc(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}wh.className="MaxNorm",Pr(wh);class vh extends xh{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Gr((()=>qs(t,Zr(jc(),bh(t,this.axis)))))}getConfig(){return{axis:this.axis}}}vh.className="UnitNorm",Pr(vh);class Ch extends xh{apply(t){return qi(t)}}Ch.className="NonNeg",Pr(Ch);class $h extends xh{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Gr((()=>{const e=bh(t,this.axis),n=Zr(fi(this.rate,Ds(e,this.minValue,this.maxValue)),fi(1-this.rate,e));return fi(t,qs(n,Zr(jc(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}$h.className="MinMaxNorm",Pr($h);const kh={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ih(t){return oh(t)}function Sh(t,e={}){return uh(t,Br.getMap().classNameMap,e,"constraint")}function Eh(t){return null==t?null:"string"==typeof t?Sh({className:t in kh?kh[t]:t,config:{}}):t instanceof xh?t:Sh(t)}const Rh=["channelsFirst","channelsLast"],Ah=["valid","same","causal"],Nh=["max","avg"],Th=["sum","mul","concat","ave"],Dh=new Map;function Fh(t){ph(Rh,"DataFormat",t)}function _h(t){ph(Ah,"PaddingMode",t)}function Oh(t){ph(Nh,"PoolMode",t)}const Lh=[];function Mh(t,e){Lh.push(t);try{const t=e();return Lh.pop(),t}catch(t){throw Lh.pop(),t}}function zh(t){if(!Wh(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Lh.length?"":Lh.join("/")+"/")+t}function Bh(t){if(!Wh(t))throw new Error("Not a valid tensor name: '"+t+"'");Dh.has(t)||Dh.set(t,0);const e=Dh.get(t);if(Dh.set(t,Dh.get(t)+1),e>0){const n=`${t}_${e}`;return Dh.set(n,1),n}return t}const Ph=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Wh(t){return!!t.match(Ph)}function Uh(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function Vh(t){return Hi(t=Array.isArray(t)?new Float32Array(t):t)}function Gh(t){return Ri(Vh(t)).dataSync()[0]}function Hh(t){return bi(Vh(t)).dataSync()[0]}function jh(t,e){if(e<t)throw new Xc(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function qh(t,e){return t.asType(e)}function Kh(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function Xh(t,e,n){return Gr((()=>{switch(t.rank){case 1:return Qi(t,e,n);case 2:return ta(t,[e,0],[n,t.shape[1]]);case 3:return ea(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return na(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Zi(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Zi(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Xc(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Yh(t,e,n){return Gr((()=>{switch(t.rank){case 1:return Qi(t,e,n);case 2:return ta(t,[0,e],[t.shape[0],n]);case 3:return ea(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return na(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Xc(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Jh(t,e,n,r){return Gr((()=>{switch(t.rank){case 1:return Qi(t,e,n);case 2:switch(r){case 1:return Xh(t,e,n);case 2:return Yh(t,e,n);default:throw new Xc(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Xh(t,e,n);case 2:return ea(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Yh(t,e,n);default:throw new Xc(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Xh(t,e,n);case 2:return na(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return na(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Yh(t,e,n);default:throw new Xc(`The axis is not within the rank of the tensor ${r}`)}default:throw new Xc(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Zh(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Os(t,e)}function Qh(t,e){switch(t.rank){case 1:return Ls([t,e]);case 2:return Ms([t,e],0);case 3:return zs([t,e],0);case 4:return Bs([t,e],0);default:throw new Xc(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function td(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Xc(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return ti(t,e)}function ed(t,e=0,n=1,r,s){return Vi(t,e,n,r,s)}function nd(t,e,n,r){if(t.rank<2||e.rank<2)throw new Yc(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Yc(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return La({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?id(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),i=s.pop();t=t.reshape([-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([l,-1]);const h=[...s,...u];return La({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?id(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function rd(t,e,n){return Gr((()=>(e=Array.isArray(e)?Hi(e,"int32"):e.toInt(),ui(t,e,n))))}function sd(t){return fi(t,t)}function id(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new Xc(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new Xc(`Unsupported input rank by biasAdd: ${e.rank}`)}function ad(t,e,n){return Gr((()=>(null==n&&(n="channelsLast"),Fh(n),t.add(id(t.rank,e,n)))))}function od(t,e,n,r){return Gr((()=>wa(t,e,n,r)))}function ld(t,e,n=!1){return n?t():e()}const ud=["fanIn","fanOut","fanAvg"],cd=["normal","uniform","truncatedNormal"];class hd extends zr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class dd extends hd{apply(t,e){return Ii(t,e)}}dd.className="Zeros",Pr(dd);class pd extends hd{apply(t,e){return Si(t,e)}}pd.className="Ones",Pr(pd);class fd extends hd{constructor(t){if(super(),"object"!=typeof t)throw new Xc(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new Xc(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Gr((()=>fi(Xr(this.value),Si(t,e))))}getConfig(){return{value:this.value}}}fd.className="Constant",Pr(fd);class gd extends hd{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Gi(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}gd.className="RandomUniform",Pr(gd);class md extends hd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Yc(`randomNormal does not support dType ${e}.`);return ed(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}md.className="RandomNormal",Pr(md);class yd extends hd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Yc(`truncatedNormal does not support dType ${e}.`);return pa(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}yd.className="TruncatedNormal",Pr(yd);class bd extends hd{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Gr((()=>{if(2!==t.length||t[0]!==t[1])throw new Xc("Identity matrix initializer can only be used for 2D square matrices.");return fi(this.gain,ei(t[0]))}))}getConfig(){return{gain:this.gain}}}bd.className="Identity",Pr(bd);class xd extends hd{constructor(t){if(super(),t.scale<0)throw new Xc(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,ph(ud,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){ph(cd,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(Fh(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Uh(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=Uh(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=Uh(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Yc(`${this.getClassName()} does not support dType ${e}.`);return pa(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return Gi(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}xd.className="VarianceScaling",Pr(xd);class wd extends xd{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return xd.className}}wd.className="GlorotUniform",Pr(wd);class vd extends xd{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return xd.className}}vd.className="GlorotNormal",Pr(vd);class Cd extends xd{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return xd.className}}Cd.className="HeNormal",Pr(Cd);class $d extends xd{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return xd.className}}$d.className="HeUniform",Pr($d);class kd extends xd{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return xd.className}}kd.className="LeCunNormal",Pr(kd);class Id extends xd{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return xd.className}}Id.className="LeCunNormal",Pr(Id);class Sd extends hd{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Yc("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Gr((()=>{if(t.length<2)throw new Yc("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=ed(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=lo.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),fi(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Sd.className="Orthogonal",Pr(Sd);const Ed={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Rd(t,e={}){return uh(t,Br.getMap().classNameMap,e,"initializer")}function Ad(t){return oh(t)}function Nd(t){if("string"==typeof t){const e=t in Ed?Ed[t]:t;if("GlorotNormal"===e)return new vd;if("GlorotUniform"===e)return new wd;if("HeNormal"===e)return new Cd;if("HeUniform"===e)return new $d;if("LeCunNormal"===e)return new kd;if("LeCunUniform"===e)return new Id;{const t={};return t.className=e,t.config={},Rd(t)}}return t instanceof hd?t:Rd(t)}let Td=0;function Dd(){return Td++}const Fd={};function _d(t=""){return t in Fd||(Fd[t]=0),Fd[t]+=1,t+Fd[t].toString()}function Od(t){return Array.isArray(t)&&Array.isArray(t[0])}function Ld(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Md(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Xc(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function zd(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new Xc(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Bd(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const Pd="Variable";class Wd{constructor(t,e="float32",n=Pd,r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Dd(),n=null==n?Pd:n,this.originalName=zh(n),this.name=Bh(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(t,e=!0,n,r){return vn.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Ud(t){return t.map((t=>t.read()))}function Vd(t){t.forEach((t=>{t[0].write(t[1])}))}class Gd{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Hd{constructor(t,e,n,r,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=Dd(),null!=i&&(this.originalName=zh(i),this.name=Bh(this.originalName)),this.rank=e.length}}let jd=0;class qd{constructor(t,e){this.callArgs=e,this.id=jd++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Kd=0;class Xd extends zr{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Kd++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=sh(t)+"_"+_d(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Kc(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Xc(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return nh(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return nh(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qc(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new qc(`Layer ${this.name} is not connected, no input to return.`);return nh(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new qc(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new qc(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return nh(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=rh(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=rh(this.inputSpec);if(t.length!==e.length)throw new Xc(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new Xc(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new Xc(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new Xc(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Xc(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),i=s.axes[e],a=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(a))throw new Xc(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],i=r.shape[t];if(null!=e&&null!=i&&e!==i)throw new Xc(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=rh(t);let r=!0;for(const t of n)if(!(t instanceof Hd)){r=!1;break}let s=!0;for(const t of n)if(t instanceof Hd){s=!1;break}if(r===s)throw new Xc("Arguments to apply() must be all SymbolicTensors or all Tensors");return Mh(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of rh(t))e.push(n.shape);this.build(nh(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=rh(r),i=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(r=nh(i),null!=this.activityRegularizer)throw new Yc("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=rh(t);const e=[];for(const n of t)e.push(n.shape);return nh(e)}(t),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Hd(i,n,this,rh(t),e,this.name,r))):new Hd(i,r,this,rh(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Yc("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new qc(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new qc(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Kc(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Bd(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Ud(t?this.trainableWeights:this.weights)}setWeights(t){Gr((()=>{const e=this.weights;if(e.length!==t.length)throw new Xc(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Ud(e);for(let s=0;s<r.length;++s){const i=r[s],a=e[s],o=t[s];if(!me(i.shape,o.shape))throw new Xc(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}Vd(n)}))}addWeight(t,e,n,r,s,i,a){if(-1!==this._addedWeightNames.indexOf(t))throw new Xc(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Nd("zeros"));const o=r.apply(e,n),l=new Wd(o,n,t,i,a);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=rh(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,i,a=null){const o=rh(t);e=rh(e),n=rh(n),r=rh(r),s=Ld(s),i=Ld(i);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new qd({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Yd(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=Yd(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class Jd extends Xd{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:_d("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Xc("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Xc("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Xc("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Hd(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new qd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Xc(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Zd(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const i=t[s];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Hr(r)}}function Qd(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var tp;Jd.className="InputLayer",Pr(Jd),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(tp||(tp={}));class ep{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class np{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class rp extends ep{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=Gr((()=>Zr(this.totals[t],fi(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Gr((()=>{const n=fi(qs(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),jr(e[t])})))}}class sp extends ep{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const a=s[i];t.push(a.data()),e.push(r),n.push(i)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class ip extends ep{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ae(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=Pe();return(...s)=>{const i=Pe();return i-r<e||(r=i,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await Zd(n),r.push(this.yield(t,e,n))),r.push(wo()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Zd(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Zd(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(wo()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Zd(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Zd(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(wo()):Ae(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Zd(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Zd(t),await this.trainEnd(t))}}function ap(t,e){return null==t&&(t={}),t instanceof ep?[t]:Array.isArray(t)&&t[0]instanceof ep?t:rh(t).map((t=>new ip(t,e)))}class op{constructor(){}static registerCallbackConstructor(t,e){he(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),op.checkForDuplicate(e),null==op.constructors[t]&&(op.constructors[t]=[]),op.constructors[t].push(e)}static checkForDuplicate(t){for(const e in op.constructors)op.constructors[+e].forEach((e=>{if(e===t)throw new Xc("Duplicate callback constructor.")}))}static clear(){op.constructors={}}static createCallbacks(t){const e=[];for(const n in op.constructors){const r=+n;t>=r&&e.push(...op.constructors[r])}return e.map((t=>new t))}}function lp(t,e,n,r,s,i,a,o,l){const u=new sp,c=[new rp,...op.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new np(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function up(t,e={},n=!1){return uh(t,Br.getMap().classNameMap,e,"layer",n)}function cp(t,e){return Gr((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=wi(sd(t),e,!0),r=ni(n.shape,jc()),s=oa(pi(n,r));return qs(t,s)}))}function hp(t,e){return Gr((()=>Ei(sd(xi(e,t)),-1)))}function dp(t,e){return Gr((()=>Ei(Jr(xi(e,t)),-1)))}function pp(t,e){return Gr((()=>{const n=xi(t,e),r=Ds(Jr(t),jc(),Number.MAX_VALUE),s=Jr(qs(n,r));return fi(100,Ei(s,-1))}))}function fp(t,e,n=!1){return Gr((()=>{if(n)e=ra(e);else{const t=wi(e,e.shape.length-1,!0);e=qs(e,t)}return e=Ds(e,jc(),1-jc()),Di(wi(fi(t.toFloat(),mi(e)),e.shape.length-1))}))}function gp(t,e,n=!1){return Gr((()=>{const r=ri(function(t){const e=[Uh(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=Ds(e,jc(),1-jc())).shape;return fp(_i(r,s[s.length-1]).reshape(s),e,n)}))}function mp(t,e){return Gr((()=>{let n;return n=Ds(e,jc(),1-jc()),n=mi(qs(n,xi(1,n))),Ei(function(t,e){if(!me(t.shape,e.shape))throw new Xc(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Gr((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function yp(t,e){return Gr((()=>{const n=cp(t,-1),r=cp(e,-1),s=fi(n,r);return Di(wi(s,-1))}))}op.constructors={};const bp={meanSquaredError:hp,meanAbsoluteError:dp,meanAbsolutePercentageError:pp,meanSquaredLogarithmicError:function(t,e){return Gr((()=>{const n=Ds(e,jc(),Number.MAX_VALUE),r=mi(Zr(1,n)),s=Ds(t,jc(),Number.MAX_VALUE),i=mi(Zr(1,s));return Ei(sd(xi(r,i)),-1)}))},squaredHinge:function(t,e){return Gr((()=>{const n=pi(0,xi(1,fi(t,e)));return Ei(sd(n),-1)}))},hinge:function(t,e){return Gr((()=>{const n=pi(0,xi(1,fi(t,e)));return Ei(n,-1)}))},categoricalHinge:function(t,e){return Gr((()=>{const n=wi(fi(t,e),-1),r=bi(fi(xi(1,t),e),-1);return pi(0,Zr(1,xi(r,n)))}))},logcosh:function(t,e){return Gr((()=>{const n=Math.log(2),r=xi(e,t),s=xi(Zr(r,sa(fi(-2,r))),n);return Ei(s,-1)}))},categoricalCrossentropy:fp,sparseCategoricalCrossentropy:gp,binaryCrossentropy:mp,kullbackLeiblerDivergence:function(t,e){return Gr((()=>{const n=Ds(t,jc(),1),r=Ds(e,jc(),1);return wi(fi(t,mi(qs(n,r))),-1)}))},poisson:function(t,e){return Gr((()=>{const n=mi(Zr(jc(),e));return Ei(xi(e,fi(t,n)),-1)}))},cosineProximity:yp};function xp(t){if("string"==typeof t){if(t in bp)return bp[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Xc(e)}return t}function wp(t,e){return Gr((()=>{const n=fi(.5,Mi(e)),r=qh(ci(e,n),t.dtype);return Ei(Zs(t,r),-1)}))}function vp(t,e){return Gr((()=>qh(Zs(hs(t,-1),hs(e,-1)),"float32")))}function Cp(t,e){return mp(t,e)}function $p(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),Zs(t,e).asType("float32")}const kp=fp,Ip=gp,Sp={binaryAccuracy:wp,categoricalAccuracy:vp,precision:function(t,e){return Gr((()=>{const n=function(t,e){return Gr((()=>Ci(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),r=function(t,e){return Gr((()=>Ci(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),s=n.add(r);return ma(ci(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:kp,sparseCategoricalCrossentropy:Ip,mse:hp,MSE:hp,mae:dp,MAE:dp,mape:pp,MAPE:pp,cosine:yp};function Ep(t){if("string"==typeof t&&t in Sp)return Sp[t];if("string"!=typeof t&&null!=t)return t;throw new Xc(`Unknown metric ${t}`)}function Rp(t){if(th(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(bp))if(bp[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Sp))if(Sp[n]===t){e=n;break}return void 0!==e?e:t.name}}function Ap(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Np(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Np(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Np(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Np(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Tp(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function Dp(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}Tp([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function Fp(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const i=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];i.push(`${n}[${r}][${s}]`)}const a=t.name,o=t.getClassName(),l=0===i.length?"":i[0];Tp([`${a} (${o})`,s,t.countParams().toString(),l],e,r);for(let t=1;t<i.length;++t)Tp(["","","",i[t]],e,r)}function _p(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Op(t,e){if(null===t)return null;if("string"==typeof t)return ih(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];_p(e,s,r)?n.push(r):n.push(Op(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=ih(n);e[t]=Op(r,t)}}return e}}function Lp(t,e){if(null==t)return null;if("string"==typeof t)return sh(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];_p(e,s,r)?n.push(r):n.push(Lp(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[sh(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Lp(r,n):r}return e}}const Mp="2.4.0";class zp{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof zp)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Xc(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return pr(e,t.dtype)}catch(n){throw new Xc(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Hd){if(null==this.id2Value[t.id])throw new Xc(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Xc(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Hd){if(null==this.id2Value[t.id])throw new Xc(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Xc(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Hr(this.id2Mask)}}const Bp={},Pp={};function Wp(t,e,n,r){const s=null!=n&&n.training,i=Array.isArray(t),a=i?t:[t],o=a.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let h,d;if(null==Bp[c]){const t=function(t,e){he(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=Vp(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of t){const{sorted:t,recipientMap:a}=Vp(i,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:Up(r)}}(a,e);h=t.sorted,d=t.recipientCounts,Bp[c]=h,Pp[c]=d}h=Bp[c],d={},s||Object.assign(d,Pp[c]);const p=new zp(e);for(let t=0;t<h.length;++t){if(null!=r){const t=Vr().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const i=h[t],a=i.sourceLayer;if(a instanceof Jd)continue;const u=[],c=[],f=[];let g=!1;for(const t of i.inputs){const n=p.getValue(t),r=p.getMask(t);u.push(n),c.push(r),null!=r&&(g=!0),s||(d[t.name]--,0!==d[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=c[0]);const m=rh(a.apply(u,n));let y=null;a.supportsMasking&&(y=a.computeMask(u,c));const b=Gp(i),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],m[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=m[t])}s||Hr(f)}return p.disposeMasks(),i?l:l[0]}function Up(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Vp(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),r.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:r,recipientMap:s}}function Gp(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class Hp extends Xd{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=_d(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],hh(this.inputs).length!==this.inputs.length)throw new Xc(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);hh(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;th(0===n,"input layer has >1 nodes"),th(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Jd))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},i={},a=[],o=(t,e,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Kc(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(Hp.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const r=u.inputTensors[t],s=u.inboundLayers[t],i=u.nodeIndices[t],a=u.tensorIndices[t];o(r,e,n,s,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=a.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const a=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];i=Math.max(i,a),r[t.outboundLayer.id]=i,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],a=t.nodeIndices[r],o=s.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(i+1,l),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const d={};for(const t in r){const e=r[t];e in d||(d[e]=[]),d[e].push(s[t])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(ch);this.layers=[];for(const t of p){const e=d[t];e.sort(((t,e)=>{const n=i[t.id],r=i[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Hp&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(ch);const f=this.inputs.slice(),g=[];for(const t of p)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Kc(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${g}`);for(const t of e.outputTensors)f.push(t);g.push(t.name)}}this.nodesByDepth=h;const m=this.layers.map((t=>t.name));for(const t of m){const e=m.filter((e=>e===t)).length;if(1!==e)throw new Kc(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new qd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Xc("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new Xc(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let i=r;if(null==n[r]){const t=r.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])s.push([n[i],t[r]]);else if(e)throw new Xc(`Provided weight data has no target variable: ${r}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Xc(`${t.length} of ${r} weights are not set: ${t}`)}Vd(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${Mp}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Lp(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Gr((()=>{t=rh(t);const n=new zp;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Wp(this.outputs,n,e)}))}computeMask(t,e){return Gr((()=>{let n;return t=rh(t),n=null==e?Qc(null,t.length):rh(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Ld(t);if(e.length!==this.inputLayers.length)throw new Xc(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(ch);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],i=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${s.name}_${i}_${a}`];r.push(o)}const s=Ld(e.computeOutputShape(nh(r))),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${i}_${t}`]=s[t]}}const s=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;i.push(s)}for(let t=0;t<i.length;t++){const e=i[t];th(e in n),s.push(n[e])}return nh(s)}runInternalGraph(t,e){null==e&&(e=Qc(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],i=t[r],a=e[r];n[s.id]=[i,a]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(ch);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,i=new Array;for(const t of r)t.id in n&&i.push(n[t.id]);if(i.length===r.length){let r,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=rh(e.call(t,u)),l=rh(e.computeMask(t,n)),r=[t],a=[n]}else r=i.map((t=>t[0])),a=i.map((t=>t[1])),null==u.mask&&(u.mask=a),o=rh(e.call(r,u)),l=rh(e.computeMask(r,a));if(e.activityRegularizer)throw new Yc("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],i=l[t];n[e.id]=[r,i]}}}}const s=[],i=[],a=[];for(const t of this.outputs){th(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];a.push(e.shape),s.push(e),i.push(r)}return[s,i,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Hp?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=Hp.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Xc(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Xc("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new Xc(`No such layer: ${t}`)}calculateLosses(){return Gr((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Hp.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=Hp.nodeKey(t,n);let a={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let l=e[Hp.nodeKey(s,i)];null==l&&(l=0),t.push([s.name,l,o,a])}i.push(t)}}}const a={};a.name=t.name,a.className=r,a.config=s,a.inboundNodes=i,n.push(a)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],i=Hp.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,a,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],i=Hp.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,a,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let r;for(const i of e){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(t,e);const c=s[o];if(c.inboundNodes.length<=l)return void a(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(nh(n),r)}function l(t){const n=t.name,i=up(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Xc(`Corrupted configuration, expected array for nodeData: ${t}`);a(i,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!dh(i);)for(const t of c){const e=s[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const h=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];th(e in s);const i=s[e].inboundNodes[n].outputTensors;h.push(i[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];th(e in s);const i=s[e].inboundNodes[n].outputTensors;d.push(i[r])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Xc("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Gr((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function jp(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function qp(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Gr((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());Hr(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),Hi(s,"float32")}return null}function Kp(t,e){return fi(t,e)}function Xp(t,e){let n,r;const s=e;n=s.xs,r=s.ys,he(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const i=Yp("input",t.inputNames,n),a=Yp("output",t.outputNames,r),o=i[0].shape[0];he(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),he(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<i.length;e++)he(i[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)he(a[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:i,ys:a}}function Yp(t,e,n){if(n instanceof rn)return[n];if(Array.isArray(n))return he(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new Xc(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function Jp(t){return"function"==typeof t.iterator}function Zp(t){he(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function Qp(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Xh(t,e,n-e))):Xh(t,e,n-e)}function tf(t,e){return Gr((()=>null==t?null:Array.isArray(t)?t.map((t=>tf(t,e))):rd(t,"int32"===e.dtype?e:e.toInt())))}function ef(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function nf(t){const e=[];t instanceof rn&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Kh(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function rf(t,e){if(null==t)return;const n=[];if(e instanceof rn)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof rn)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function sf(t){return Array.isArray(t)}function af(t){return!function(t){return t instanceof rn}(t)&&!sf(t)}function of(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(sf(t)&&t.length>0)e=!0;else if(af(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Xc(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let i;if(af(t)){i=[];for(const n of e){if(null==t[n])throw new Xc(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(sf(t)){if(t.length!==e.length)throw new Xc(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(e.length>1)throw new Xc(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=nf(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new Xc(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${a.shape}`);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l>=0&&o!==l)throw new Xc(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${a.shape}].`)}}return i}function lf(t,e,n,r=!0,s=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new Xc(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new Xc(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new Xc(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l!==o)throw new Xc(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class uf extends Hp{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Xc("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Output shape","Param #"];let a;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}r("_".repeat(e)),Tp(i,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?Dp(o[t],n,r):Fp(o[t],n,a,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?Bd(t.collectedTrainableWeights):Bd(t.trainableWeights),e}(t),u=Bd(t.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>bo.adagrad(.01),Adadelta:()=>bo.adadelta(1,.95,jc()),Adam:()=>bo.adam(.001,.9,.999,jc()),Adamax:()=>bo.adamax(.002,.9,.999,jc(),0),RMSProp:()=>bo.rmsprop(.001,.9,0,jc()),SGD:()=>bo.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Xc(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Yr))throw new Xc("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Xc(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>xp(t)))}else{const n=xp(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Xc(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(xp(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Mh("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Mh("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===mp?-1!==["accuracy","acc"].indexOf(a)?r=wp:-1!==["crossentropy","ce"].indexOf(a)&&(r=Cp):this.lossFunctions[t]===gp?-1!==["accuracy","acc"].indexOf(a)?r=$p:-1!==["crossentropy","ce"].indexOf(a)&&(r=Ip):-1!==["accuracy","acc"].indexOf(a)?r=vp:-1!==["crossentropy","ce"].indexOf(a)&&(r=kp),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),i=r,n=""+s}else{const t=Ep(a);i=t,n=""+Rp(a)}let e;Mh(n,(()=>{e=i})),s(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Zp(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const i=s[0].concat(s[1]);this.makeTestFunction();const a=this.testFunction;return nh(this.testLoop(a,i,r,n.verbose,n.steps))}finally{rf(s[0],t),rf(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new Yc("Verbose mode is not implemented yet.");he(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await a.next();if(i=Gr((()=>{if(e.value){const{xs:n,ys:r}=Xp(t,e.value),a=n.concat(r),u=Gr((()=>s(a)));if(Hr(a),0===l)for(let t=0;t<u.length;++t)i.push(Xr(0));const c=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=Gr((()=>Zr(i[t],fi(c,e)))),l>0&&Hr(n)}Hr(u),o+=c,++l}return i})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=qs(i[t],o),Hr(e)}return nh(i)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new Xc(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new Xc(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Xc("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),i=new zp;if(t instanceof rn&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Xc(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new Xc(`No value is provided for the model's input ${e.name}`);i.add(e,n)}const a=Wp(s,i);return n?a:a[0]}retrieveSymbolicTensors(t){const e=Qc(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((t=>t.name));for(let r=0;r<t.length;++r){const a=i.indexOf(t[r]);if(-1!==a&&(e[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new Xc(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return Gr((()=>{const r=this.checkNumSamples(t);if(n)throw new Yc("Verbose predictLoop() is not implemented yet.");const s=ef(r,e),i=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e)Gr((()=>{const n=s[e][0],r=s[e][1],i=Qp(t,n,r),a=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)a.push({key:this.inputs[t],value:i[t]});else a.push({key:this.inputs[0],value:i});const o=new zp(a);return Wp(this.outputs,o)})).forEach(((t,e)=>i[e].push(t)));return nh(i.map((t=>Os(t,0))))}))}predict(t,e={}){const n=nf(t);lf(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return Zp(r),this.predictLoop(n,r)}finally{rf(n,t)}}predictOnBatch(t){lf(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new Kc("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===gp?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=hh(t.map((t=>t.shape[0])));r.sort();const s=hh(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new Xc(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new Xc(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!me(r,s))throw new Xc(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=of(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=of(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[hp,mp,fp];for(let s=0;s<t.length;++s){const i=t[s],a=e[s],o=n[s];if(null!=a){if(a===fp&&1===i.shape[i.shape.length-1])throw new Xc(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new Xc(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new Xc(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,i){const[a,o]=this.standardizeUserDataXY(t,e,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=jp(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await qp(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,r=0,s){return Gr((()=>{const i=this.checkNumSamples(e,n,s,"steps"),a=[];if(r>0)throw new Yc("Verbose mode is not implemented yet.");if(null!=s)throw new Yc("steps mode in testLoop() is not implemented yet");{const r=ef(i,n),s=Hi(jh(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],l=Xh(s,i,o-i),u=tf(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)a.push(Xr(0));for(let t=0;t<c.length;++t){const e=c[t];a[t]=Zr(a[t],fi(o-i,e))}}for(let t=0;t<a.length;++t)a[t]=qs(a[t],i)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;eh(t,r)>1&&(s+=`_${eh(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new zp(t),o=Wp(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=Kp(n,s[t]));const i=Ei(n);e.push(i),l=0===t?n:Zr(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=Ei(e(r[s],o[s]))}jr(n),i.push(n)}return l=Ei(l),this.calculateLosses().forEach((t=>{l=Zr(l,t)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>Gr((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const a=new zp(i),o=Wp(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=Ei(r(s[t],o[t]));n=0===t?i:Zr(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=Ei(n(s[r],o[r]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,a,o,l,u,c;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;Zp(h);const d=!1,p=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,d,h);s=p[0],i=p[1],c=p[2];let f,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Yc("validationData including sample weights is not supported yet."):new Xc(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);a=r.validationData[0],o=r.validationData[1];const e=!0,n=await t.standardizeUserData(a,o,null,null,e,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=Qp(s,t,e),s=Qp(s,0,t),u=Qp(i,t,e),i=Qp(i,0,t),f=l.concat(u)}else null!=r.validationSteps&&(g=!0);const m=s.concat(i).concat(c);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let x,w;g?(t.makeTestFunction(),x=t.testFunction,w=b.slice().concat(b.map((t=>"val_"+t)))):(x=null,f=[],w=b.slice());const v=ap(r.callbacks,r.yieldEvery),C=await async function(t,e,n,r,s,i,a,o,l,u,c,h,d,p,f){null==s&&(s=32),null==i&&(i=1),null==c&&(c=!0),null==d&&(d=0);let g=!1;null!=l&&null!=u&&(g=!0);const m=t.checkNumSamples(n,s,p,"steps_per_epoch");let y;null!=m&&(y=jh(0,m)),null==a&&(a=1);const{callbackList:b,history:x}=lp(o,a,i,d,m,p,s,g,h);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let a=d;a<i;++a){await b.onEpochBegin(a);const i={};{if("batch"===c)throw new Yc("batch shuffling is not implemneted yet");c&&le(y);const a=Hi(y),o=ef(m,s);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Gr((()=>{const d=o[c][0],p=o[c][1],f=Xh(a,d,p-d);h.batch=c,h.size=p-d;const m=tf(n,f),y=e(m);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,jr(n)}if(c===o.length-1&&g){const e=t.testLoop(l,u,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];jr(s),i["val_"+n]=s}}})),await b.onBatchEnd(c,h),Qd(h),t.stopTraining_)break}a.dispose()}if(await b.onEpochEnd(a,i),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,m,b,h,r.epochs,r.verbose,v,x,f,r.shuffle,w,r.initialEpoch,null);return C}finally{t.isTraining=!1,rf(s,e),rf(i,n),rf(l,a),rf(u,o),null!=c&&Hr(c)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(he(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),he(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),he(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),he(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),he(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(Jp(n.validationData))he(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new Yc("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=ap(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=lp(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,s,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(g=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await g.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=Xp(t,e.value),i={};i.batch=h,i.size=r[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const e=jp(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await qp(s[t],null,e[t]))}const u=r.concat(s).concat(a),p=o(u);Hr(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];i[e]=n,jr(n)}await d.onBatchEnd(h,i),Qd(i),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=Jp(n.validationData)?rh(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):rh(t.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),a=[];for(const t of i){const e=await t.data();a.push(e[0])}return Hr(i),nh(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Vr().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Vr().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=sh(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>sh(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=sh(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[sh(Rp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>sh(Rp(t))));{const t={};for(const e in this.metrics)t[e]=sh(Rp(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=up(Op(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=ih(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>ih(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=ih(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>ih(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=ih(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,Un.getSaveHandlers(n));if(0===e.length)throw new Xc(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Xc(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new Xc("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await On(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Mp}`,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await On(await this.optimizer.getWeights(),t);r.specs.push(...n),r.data=Bn([r.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Ap(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,t.save(s)}setUserDefinedMetadata(t){Ap(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}uf.className="Model",Pr(uf);class cf extends uf{}async function hf(t,e){if(null==e&&(e={}),"string"==typeof t){const s=(n=t,r=e,Un.getLoadHandlers(n,r));if(0===s.length)s.push(function(t,e){return Cr(t,e)}(t,e));else if(s.length>1)throw new Xc(`Found more than one (${s.length}) load handlers for URL '${t}'`);t=s[0]}var n,r;return async function(t,e,n){if(null==n&&(n={}),null==t.load)throw new Xc("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await t.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const i=null==n.strict||n.strict,a=null!=r.weightData&&null!=r.weightSpecs&&i,o=up(Op(s),void 0,a),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Xc("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=function(t,e){const n={};let r,s=0;for(const i of e){const e=i.name,a=i.dtype,o=i.shape,l=ge(o);let u;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const o=_n[n.dtype],c=t.slice(s,s+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Wn()),u=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=Math.round(e*n.scale+n.min)}}s+=l*o}else if("string"===a){const e=ge(i.shape);u=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));u.push(n),s+=e}}else{const r=_n[a],i=t.slice(s,s+l*r);if("float32"===a)u=new Float32Array(i);else if("int32"===a)u=new Int32Array(i);else if("bool"===a)u=new Uint8Array(i);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);{u=new Float32Array(i);const t=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],r[e]=u[2*e+1];const s=Fn(t,o,"float32"),a=Fn(r,o,"float32");n[e]=Tn(s,a)}}s+=l*r}"complex64"!==a&&(n[e]=Fn(u,o,a))}return n}(t,e),r={},s=[];return e.forEach((t=>{"optimizer"===t.group?s.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(t,i),null!=o.optimizer&&e.length>0&&await o.optimizer.setWeights(e),Hr(t),Hr(e.map((t=>t.tensor)))}return o}(t,0,e)}cf.className="Functional",Pr(cf);class df extends uf{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:_d("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Xc(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof df||t instanceof uf;let n;if(e){if(n=t,1!==n.outputs.length)throw new Xc("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Xc("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Xc("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Xc("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Jd({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Xc(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Xc("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Yd(this.outputs[0])}this.inboundNodes=[],new qd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Qc(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(zd(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new uf({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Kc("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Kc("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Kc("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Kc("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Xc("Legacy serialization format not supported yet.");s=e}else he(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,i=e;const a=new t(i);if(!(a instanceof df))throw new Yc(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const t of s){const e=up(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new Xc("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Xc("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}df.className="Sequential",Pr(df);class pf extends zr{getConfig(){return{}}}class ff extends pf{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Yc(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Ks(t)}(t,e)}}ff.className="elu",Pr(ff);class gf extends pf{apply(t){return Xi(t)}}gf.className="selu",Pr(gf);class mf extends pf{apply(t){return qi(t)}}mf.className="relu",Pr(mf);class yf extends pf{apply(t){return Gr((()=>Ai(6,qi(t))))}}yf.className="relu6",Pr(yf);class bf extends pf{apply(t){return t}}bf.className="linear",Pr(bf);class xf extends pf{apply(t){return Ji(t)}}xf.className="sigmoid",Pr(xf);class wf extends pf{apply(t){return function(t){return Gr((()=>{const e=Zr(.5,fi(.2,t));return Ds(e,0,1)}))}(t)}}wf.className="hardSigmoid",Pr(wf);class vf extends pf{apply(t){return sa(t)}}vf.className="softplus",Pr(vf);class Cf extends pf{apply(t){return function(t){return Gr((()=>qs(t,Jr(t).add(1))))}(t)}}Cf.className="softsign",Pr(Cf);class $f extends pf{apply(t){return ca(t)}}$f.className="tanh",Pr($f);class kf extends pf{apply(t,e=-1){return ra(t,e)}}kf.className="softmax",Pr(kf);class If extends pf{apply(t,e=-1){return vi(t,e)}}function Sf(t){return t.getClassName()}function Ef(t,e={}){return uh(t,Br.getMap().classNameMap,e,"activation")}function Rf(t){if(null==t){return Ef({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},Ef(e)}return t instanceof pf?t:Ef(t)}If.className="logSoftmax",Pr(If);class Af extends zr{}class Nf extends Af{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Gr((()=>{let e=Ii([1]);return this.hasL1&&(e=Zr(e,wi(fi(this.l1,Jr(t))))),this.hasL2&&(e=Zr(e,wi(fi(this.l2,sd(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Nf.className="L1L2",Pr(Nf);const Tf={l1l2:"L1L2"};function Df(t){return oh(t)}function Ff(t,e={}){return uh(t,Br.getMap().classNameMap,e,"regularizer")}function _f(t){return null==t?null:"string"==typeof t?Ff({className:t in Tf?Tf[t]:t,config:{}}):t instanceof Af?t:Ff(t)}class Of extends Xd{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Md(t);let n=qi(t);return null!=this.maxValue&&(n=Ds(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Of.className="ReLU",Pr(Of);class Lf extends Xd{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Md(t);return gi(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Lf.className="LeakyReLU",Pr(Lf);class Mf extends Xd{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Nd(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_f(t.alphaRegularizer),this.alphaConstraint=Eh(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Xc(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=zd(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new Gd({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Md(t),Bi(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Ad(this.alphaInitializer),alphaRegularizer:Df(this.alphaRegularizer),alphaConstraint:Ih(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Mf.className="PReLU",Pr(Mf);class zf extends Xd{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Yc(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Md(t);return Ks(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}zf.className="ELU",Pr(zf);class Bf extends Xd{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Md(t);return n.mul(qh(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Bf.className="ThresholdedReLU",Pr(Bf);class Pf extends Xd{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new kf).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Md(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Wf(t,e,n){if("number"==typeof t)return Qc(t,e);if(t.length!==e)throw new Xc(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const i=t[s];if((r=i)!==parseInt(r.toString(),10))throw new Xc(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${i}`)}return t;var r}function Uf(t,e,n,r,s=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((i+r-1)/r)}function Vf(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Hh([n-e,0]);else{if("same"!==r)throw new Xc(`Unsupport padding mode: ${r}.`);t*=e}return t}function Gf(t,e){return Gr((()=>(Fh(e),"channelsFirst"===e?ls(t,[0,2,3,1]):t)))}function Hf(t,e){return Gr((()=>(Fh(e),"channelsFirst"===e?ls(t,[0,2,3,4,1]):t)))}function jf(t,e,n,r=[1,1],s="valid",i,a,o=null){return Gr((()=>{if(null==i&&(i="channelsLast"),Fh(i),3!==t.rank&&4!==t.rank)throw new Xc(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Xc(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=Gf(t,i);if("causal"===s)throw new Yc("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Da({x:l,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=ls(l,[0,3,1,2])),l}))}Pf.className="Softmax",Pr(Pf);class qf extends Xd{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",qf.verifyArgs(e),this.rank=t,gh(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Yc(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Wf(e.kernelSize,t,"kernelSize"),this.strides=Wf(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,_h(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fh(this.dataFormat),this.activation=Rf(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Nd(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Eh(e.biasConstraint),this.biasRegularizer=_f(e.biasRegularizer),this.activityRegularizer=_f(e.activityRegularizer),this.dilationRate=Wf(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Xc(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Xc(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Xc(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(th("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!fh(t.kernelSize,"number",1,3))throw new Xc(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Sf(this.activation),useBias:this.useBias,biasInitializer:Ad(this.biasInitializer),biasRegularizer:Df(this.biasRegularizer),activityRegularizer:Df(this.activityRegularizer),biasConstraint:Ih(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Kf extends qf{constructor(t,e){super(t,e),this.kernel=null,Kf.verifyArgs(e),this.filters=e.filters,gh(this.filters,"filters"),this.kernelInitializer=Nd(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Eh(e.kernelConstraint),this.kernelRegularizer=_f(e.kernelRegularizer)}build(t){t=zd(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Xc(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Gr((()=>{let e;t=Md(t);const n=null==this.bias?null:this.bias.read(),r=yh(this.activation.getClassName());if(null!=r&&2===this.rank)e=jf(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",i,a=1){return Gr((()=>{if(null==i&&(i="channelsLast"),Fh(i),3!==t.shape.length)throw new Xc(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new Xc(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Xc(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=ls(t,[0,2,1])),"causal"===s)throw new Yc("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ws(t,e,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=ad(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=jf(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Yc("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",i,a){return Gr((()=>{if(null==i&&(i="channelsLast"),Fh(i),4!==t.rank&&5!==t.rank)throw new Xc(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new Xc(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=Hf(t,i);if("causal"===s)throw new Yc("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Gs(o,e,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=ad(o,n)),"channelsFirst"===i&&(o=ls(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=zd(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=Uf(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ad(this.kernelInitializer),kernelRegularizer:Df(this.kernelRegularizer),kernelConstraint:Ih(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Xc(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Xf extends Kf{constructor(t){super(2,t),Xf.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!fh(t.kernelSize,"number",1,2))throw new Xc(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Xf.className="Conv2D",Pr(Xf);class Yf extends Kf{constructor(t){super(3,t),Yf.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Xc(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Yf.className="Conv3D",Pr(Yf);class Jf extends Xf{constructor(t){if(super(t),this.inputSpec=[new Gd({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Xc(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=zd(t)).length)throw new Xc("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Xc("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Gd({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Gr((()=>{let e=Md(t);if(4!==e.shape.length)throw new Xc(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Vf(a,c,l,this.padding),Vf(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=ls(e,[0,2,3,1]));let p=Vs(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=ls(p,[0,3,1,2])),null!=this.bias&&(p=ad(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=zd(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=Vf(e[r],o,i,this.padding),e[s]=Vf(e[s],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Jf.className="Conv2DTranspose",Pr(Jf);class Zf extends Kf{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Xc("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Xc("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Xc(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Nd(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_f(e.depthwiseRegularizer),this.depthwiseConstraint=Eh(e.depthwiseConstraint),this.pointwiseInitializer=Nd(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_f(e.pointwiseRegularizer),this.pointwiseConstraint=Eh(e.pointwiseConstraint)}build(t){if((t=zd(t)).length<this.rank+2)throw new Xc(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Xc(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Gd({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Gr((()=>{let e;if(t=Md(t),1===this.rank)throw new Yc("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=ls(t,[0,2,3,1])),e=Yi(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=ad(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=ls(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Ad(this.depthwiseInitializer),t.pointwiseInitializer=Ad(this.pointwiseInitializer),t.depthwiseRegularizer=Df(this.depthwiseRegularizer),t.pointwiseRegularizer=Df(this.pointwiseRegularizer),t.depthwiseConstraint=Ih(this.depthwiseConstraint),t.pointwiseConstraint=Ih(this.pointwiseConstraint),t}}Zf.className="SeparableConv";class Qf extends Zf{constructor(t){super(2,t)}}Qf.className="SeparableConv2D",Pr(Qf);class tg extends Kf{constructor(t){super(1,t),tg.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!fh(t.kernelSize,"number",1,1))throw new Xc(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}tg.className="Conv1D",Pr(tg);class eg extends Xd{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Gr((()=>{if(t=Md(t),"channelsLast"===this.dataFormat){const e=Jh(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Jh(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Jh(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Jh(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}eg.className="Cropping2D",Pr(eg);class ng extends Xd{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Gr((()=>{let e=Md(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=ls(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s=e.resizeNearestNeighbor([t,r]);return ls(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}ng.className="UpSampling2D",Pr(ng);class rg extends qf{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Nd(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Eh(t.depthwiseConstraint),this.depthwiseRegularizer=_f(t.depthwiseRegularizer)}build(t){if((t=zd(t)).length<4)throw new Xc(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Xc(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Gr((()=>{let e=function(t,e,n=[1,1],r="valid",s,i){return Gr((()=>{null==s&&(s="channelsLast"),Fh(s);let a=Gf(t,s);if(4!==t.rank)throw new Xc(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new Xc(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Hs(a,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=ls(a,[0,3,1,2])),a}))}(t=Md(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=ad(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=zd(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Uf(e,this.kernelSize[0],this.padding,this.strides[0]),i=Uf(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,i]:[t[0],s,i,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Ad(this.depthwiseInitializer),t.depthwiseRegularizer=Df(this.depthwiseRegularizer),t.depthwiseConstraint=Ih(this.depthwiseRegularizer),t}}function sg(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new Xc("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function ig(t,e,n,r=!1,s,i,a=!1,o=!1){return Gr((()=>{const l=e.shape.length;if(l<3)throw new Xc(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(jh(2,l));if(e=ls(e,u),null!=i)throw new Yc("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=Qs(s,-1)),s=ls(s,u)),r&&(e=Ki(e,0),null!=s&&(s=Ki(s,0)));const c=[];let h,d=n;const p=e.shape[0],f=fa(e);let g,m;null!=s&&(g=fa(s));for(let e=0;e<p;++e){const n=f[e],r=Gr((()=>t(n,d)));if(null==s)h=r[0],d=r[1];else{const t=Gr((()=>{const t=g[e],n=Mi(t).sub(t);return{output:r[0].mul(t).add(d[0].mul(n)),newStates:d.map(((e,s)=>r[1][s].mul(t).add(e.mul(n))))}}));h=t.output,d=t.newStates}o&&c.push(h)}return o&&(m=ua(c,1)),[h,m,d]}))}rg.className="DepthwiseConv2D",Pr(rg);class ag extends Xd{constructor(t){let e;if(super(t),null==t.cell)throw new Xc("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new fg({cells:t.cell}):t.cell,null==e.stateSize)throw new Xc("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Gd({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?jh(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){Od(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return Gr((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Yc("Constants support is not implemented in RNN yet.");Od(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Gd({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!me(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new Xc(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new Gd({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Gr((()=>{if(!this.stateful)throw new qc("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Xc("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Ii([n,t]))):this.states_=[Ii([n,this.cell.stateSize])];else if(null==t)Hr(this.states_),null!=this.keptStates&&(Hr(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Ii([n,t]))):this.states_[0]=Ii([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Xc(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Hr(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!me(r.shape,i))throw new Xc(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>jr(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=sg(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Gd({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(e.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Hd){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Gr((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=Md(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new Xc(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=ig(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return Gr((()=>{let e=Ii(t.shape);return e=wi(e,[1,2]),e=Kh(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?td(e,[1,t]):e)):this.cell.stateSize>1?[td(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const e=this.cell.getConfig();t.cell={className:this.cell.getClassName(),config:e};const n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,e,n={}){const r=up(e.cell,n);return new t(Object.assign(e,{cell:r}))}}ag.className="RNN",Pr(ag);class og extends Xd{}class lg extends og{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,gh(this.units,"units"),this.activation=Rf(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Nd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_f(t.kernelRegularizer),this.recurrentRegularizer=_f(t.recurrentRegularizer),this.biasRegularizer=_f(t.biasRegularizer),this.kernelConstraint=Eh(t.kernelConstraint),this.recurrentConstraint=Eh(t.recurrentConstraint),this.biasConstraint=Eh(t.biasConstraint),this.dropout=Gh([1,Hh([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Gh([1,Hh([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=zd(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Gr((()=>{if(2!==t.length)throw new Xc(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gg({ones:()=>Mi(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gg({ones:()=>Mi(n),rate:this.recurrentDropout,training:r}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=nd(null!=i?fi(t,i):t,this.kernel.read()),null!=this.bias&&(s=ad(s,this.bias.read())),null!=a&&(n=fi(n,a));let o=Zr(s,nd(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t={units:this.units,activation:Sf(this.activation),useBias:this.useBias,kernelInitializer:Ad(this.kernelInitializer),recurrentInitializer:Ad(this.recurrentInitializer),biasInitializer:Ad(this.biasInitializer),kernelRegularizer:Df(this.kernelRegularizer),recurrentRegularizer:Df(this.recurrentRegularizer),biasRegularizer:Df(this.biasRegularizer),activityRegularizer:Df(this.activityRegularizer),kernelConstraint:Ih(this.kernelConstraint),recurrentConstraint:Ih(this.recurrentConstraint),biasConstraint:Ih(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return Object.assign(t,e),t}}lg.className="SimpleRNNCell",Pr(lg);class ug extends ag{constructor(t){t.cell=new lg(t),super(t)}call(t,e){return Gr((()=>{null!=this.cell.dropoutMask&&(Hr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Hr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}get units(){return this.cell.units}get activation(){return this.cell.activation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}getConfig(){const t={units:this.units,activation:Sf(this.activation),useBias:this.useBias,kernelInitializer:Ad(this.kernelInitializer),recurrentInitializer:Ad(this.recurrentInitializer),biasInitializer:Ad(this.biasInitializer),kernelRegularizer:Df(this.kernelRegularizer),recurrentRegularizer:Df(this.recurrentRegularizer),biasRegularizer:Df(this.biasRegularizer),activityRegularizer:Df(this.activityRegularizer),kernelConstraint:Ih(this.kernelConstraint),recurrentConstraint:Ih(this.recurrentConstraint),biasConstraint:Ih(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return new t(e)}}ug.className="SimpleRNN",Pr(ug);class cg extends og{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Xc("GRUCell does not support reset_after parameter set to true.");this.units=t.units,gh(this.units,"units"),this.activation=Rf(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Rf(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Nd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_f(t.kernelRegularizer),this.recurrentRegularizer=_f(t.recurrentRegularizer),this.biasRegularizer=_f(t.biasRegularizer),this.kernelConstraint=Eh(t.kernelConstraint),this.recurrentConstraint=Eh(t.recurrentConstraint),this.biasConstraint=Eh(t.biasConstraint),this.dropout=Gh([1,Hh([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Gh([1,Hh([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=zd(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Gr((()=>{if(2!==t.length)throw new Xc(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gg({ones:()=>Mi(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gg({ones:()=>Mi(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=fi(t,s[0]));let u=nd(t,this.kernel.read());this.useBias&&(u=ad(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=fi(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=aa(c,[2*this.units,this.units],c.rank-1),p=nd(r,h),[f,g,m]=aa(u,3,u.rank-1),[y,b]=aa(p,2,p.rank-1);a=this.recurrentActivation.apply(Zr(f,y)),o=this.recurrentActivation.apply(Zr(g,b));const x=nd(fi(o,r),d);l=this.activation.apply(Zr(m,x));const w=Zr(fi(a,r),fi(Zr(1,Di(a)),l));return[w,w]}))}getConfig(){const t={units:this.units,activation:Sf(this.activation),recurrentActivation:Sf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ad(this.kernelInitializer),recurrentInitializer:Ad(this.recurrentInitializer),biasInitializer:Ad(this.biasInitializer),kernelRegularizer:Df(this.kernelRegularizer),recurrentRegularizer:Df(this.recurrentRegularizer),biasRegularizer:Df(this.biasRegularizer),activityRegularizer:Df(this.activityRegularizer),kernelConstraint:Ih(this.kernelConstraint),recurrentConstraint:Ih(this.recurrentConstraint),biasConstraint:Ih(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return Object.assign(t,e),t}}cg.className="GRUCell",Pr(cg);class hg extends ag{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new cg(t),super(t)}call(t,e){return Gr((()=>{null!=this.cell.dropoutMask&&(Hr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Hr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:Sf(this.activation),recurrentActivation:Sf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ad(this.kernelInitializer),recurrentInitializer:Ad(this.recurrentInitializer),biasInitializer:Ad(this.biasInitializer),kernelRegularizer:Df(this.kernelRegularizer),recurrentRegularizer:Df(this.recurrentRegularizer),biasRegularizer:Df(this.biasRegularizer),activityRegularizer:Df(this.activityRegularizer),kernelConstraint:Ih(this.kernelConstraint),recurrentConstraint:Ih(this.recurrentConstraint),biasConstraint:Ih(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}hg.className="GRU",Pr(hg);class dg extends og{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,gh(this.units,"units"),this.activation=Rf(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Rf(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Nd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=_f(t.kernelRegularizer),this.recurrentRegularizer=_f(t.recurrentRegularizer),this.biasRegularizer=_f(t.biasRegularizer),this.kernelConstraint=Eh(t.kernelConstraint),this.recurrentConstraint=Eh(t.recurrentConstraint),this.biasConstraint=Eh(t.biasConstraint),this.dropout=Gh([1,Hh([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Gh([1,Hh([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=zd(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends hd{apply(e,r){const s=t.apply([n]),i=(new pd).apply([n]),a=t.apply([2*n]);return Qh(Qh(s,i),a)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Gr((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new Xc(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gg({ones:()=>Mi(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gg({ones:()=>Mi(r),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=fi(t,i[0]));let h=nd(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=fi(r,a[0])),h=Zr(h,nd(r,this.recurrentKernel.read())),this.useBias&&(h=ad(h,this.bias.read()));const[d,p,f,g]=aa(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Zr(fi(l,s),fi(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=fi(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const t={units:this.units,activation:Sf(this.activation),recurrentActivation:Sf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ad(this.kernelInitializer),recurrentInitializer:Ad(this.recurrentInitializer),biasInitializer:Ad(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Df(this.kernelRegularizer),recurrentRegularizer:Df(this.recurrentRegularizer),biasRegularizer:Df(this.biasRegularizer),activityRegularizer:Df(this.activityRegularizer),kernelConstraint:Ih(this.kernelConstraint),recurrentConstraint:Ih(this.recurrentConstraint),biasConstraint:Ih(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return Object.assign(t,e),t}}dg.className="LSTMCell",Pr(dg);class pg extends ag{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new dg(t),super(t)}call(t,e){return Gr((()=>{null!=this.cell.dropoutMask&&(Hr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Hr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get unitForgetBias(){return this.cell.unitForgetBias}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:Sf(this.activation),recurrentActivation:Sf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ad(this.kernelInitializer),recurrentInitializer:Ad(this.recurrentInitializer),biasInitializer:Ad(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Df(this.kernelRegularizer),recurrentRegularizer:Df(this.recurrentRegularizer),biasRegularizer:Df(this.biasRegularizer),activityRegularizer:Df(this.activityRegularizer),kernelConstraint:Ih(this.kernelConstraint),recurrentConstraint:Ih(this.recurrentConstraint),biasConstraint:Ih(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}pg.className="LSTM",Pr(pg);class fg extends og{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Gr((()=>{let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),s.push(i.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;Od(t)&&(t=t[0]),this.cells.forEach(((n,r)=>{Mh(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=[];for(const e of this.cells)t.push({className:e.getClassName(),config:e.getConfig()});const e={cells:t},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(up(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Ud(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Vd(e)}}function gg(t){const{ones:e,rate:n,training:r=!1,count:s=1}=t,i=()=>od(e(),n),a=()=>ld(i,e,r);return!s||s<=1?jr(a().clone()):Array(s).fill(void 0).map(a).map((t=>jr(t.clone())))}fg.className="StackedRNNCells",Pr(fg);var mg,yg,bg,xg,wg=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n};class vg extends ag{constructor(t){if(t.unroll)throw new Yc("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Yc("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Gd({ndim:5})]}call(t,e){return Gr((()=>{if(null!=this.cell.dropoutMask&&(Hr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Hr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Xc("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Gr((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=Ii([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){Gr((()=>{if(!this.stateful)throw new qc("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Xc("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ii(s))):this.states_=[Ii(s)];else if(null==t)Hr(this.states_),null!=this.keptStates&&(Hr(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ii(s))):this.states_[0]=Ii(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Xc(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Hr(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!me(n.shape,r))throw new Xc(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>jr(t.clone())))}))}getConfig(){const t=super.getConfig(),{cell:e}=t,n=wg(t,["cell"]),r=this.cell.getConfig();return Object.assign({},r,n)}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=Uf(l,r[0],s,i[0],a[0]),h=Uf(u,r[1],s,i[1],a[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}vg.className="ConvRNN2D";class Cg extends dg{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,gh(this.filters,"filters"),this.kernelSize=Wf(n,2,"kernelSize"),this.kernelSize.map((t=>gh(t,"kernelSize"))),this.strides=Wf(r||1,2,"strides"),this.strides.map((t=>gh(t,"strides"))),this.padding=s||"valid",_h(this.padding),this.dataFormat=i||"channelsLast",Fh(this.dataFormat),this.dilationRate=Wf(a||1,2,"dilationRate"),this.dilationRate.map((t=>gh(t,"dilationRate")))}build(t){var e;t=zd(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Xc(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends hd{apply(t,e){return Zh([n.apply([r]),Si([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Gr((()=>{if(3!==t.length)throw new Xc(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gg({ones:()=>Mi(r),rate:this.dropout,training:n,count:4}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?fi(e[n],t):t;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gg({ones:()=>Mi(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),g=o(s,d,2),m=o(s,d,3);const[y,b,x,w]=aa(this.kernel.read(),4,3),[v,C,$,k]=this.useBias?aa(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,C,this.padding),c=this.inputConv(c,x,$,this.padding),h=this.inputConv(h,w,k,this.padding);const[I,S,E,R]=aa(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,I),f=this.recurrentConv(f,S),g=this.recurrentConv(g,E),m=this.recurrentConv(m,R);const A=this.recurrentActivation.apply(Zr(l,p)),N=this.recurrentActivation.apply(Zr(u,f)),T=Zr(fi(N,i),fi(A,this.activation.apply(Zr(c,g)))),D=fi(this.recurrentActivation.apply(Zr(h,m)),this.activation.apply(T));return[D,D,T]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=wg(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=Ps(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ad(s,n,this.dataFormat):s}recurrentConv(t,e){return Ps(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Cg.className="ConvLSTM2DCell",Pr(Cg);class $g extends vg{constructor(t){const e=new Cg(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}$g.className="ConvLSTM2D",Pr($g);class kg extends Xd{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Gr((()=>{this.invokeCallHook(t,e);const n=Md(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return ld((()=>od(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}kg.className="Dropout",Pr(kg);class Ig extends kg{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Ig.className="SpatialDropout1D",Pr(Ig);class Sg extends Xd{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,gh(this.units,"units"),this.activation=Rf(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Nd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Nd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Eh(t.kernelConstraint),this.biasConstraint=Eh(t.biasConstraint),this.kernelRegularizer=_f(t.kernelRegularizer),this.biasRegularizer=_f(t.biasRegularizer),this.activityRegularizer=_f(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=zd(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=zd(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Gr((()=>{this.invokeCallHook(t,e);const n=Md(t),r=yh(this.activation.getClassName());let s;return null!=r?s=nd(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=nd(n,this.kernel.read()),null!=this.bias&&(s=ad(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Sf(this.activation),useBias:this.useBias,kernelInitializer:Ad(this.kernelInitializer),biasInitializer:Ad(this.biasInitializer),kernelRegularizer:Df(this.kernelRegularizer),biasRegularizer:Df(this.biasRegularizer),activityRegularizer:Df(this.activityRegularizer),kernelConstraint:Ih(this.kernelConstraint),biasConstraint:Ih(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Sg.className="Dense",Pr(Sg);class Eg extends Xd{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=zd(t);for(const e of t.slice(1))if(null==e)throw new Xc(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Uh(t,1)]}call(t,e){return Gr((()=>{this.invokeCallHook(t,e);let n=Md(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new Xc(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Uh(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Eg.className="Flatten",Pr(Eg);class Rg extends Xd{constructor(t){super(t),this.supportsMasking=!0,this.activation=Rf(t.activation)}call(t,e){return Gr((()=>{this.invokeCallHook(t,e);const n=Md(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Sf(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Rg.className="Activation",Pr(Rg);class Ag extends Xd{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Gr((()=>{return t=Md(t),e=t,n=this.n,Gr((()=>{if(2!==e.shape.length)throw new Xc(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return td(Kh(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Ag.className="RepeatVector",Pr(Ag);class Ng extends Xd{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,i=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==i)throw new Xc("Can only specifiy one unknown dimension.");i=t}else s*=e}const a=Uh(t);if(null!==i){if(0===s||a%s!=0)throw new Xc(n);r[i]=a/s}else if(a!==s)throw new Xc(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Gr((()=>{this.invokeCallHook(t,e);const n=Md(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Ng.className="Reshape",Pr(Ng);class Tg extends Xd{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=jh(1,t.dims.length+1);if(!me(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Gd({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=zd(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return ls(Md(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Tg.className="Permute",Pr(Tg);class Dg extends Xd{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Md(t);return cs(Fi(n,this.maskValue),-1)}call(t,e){return Gr((()=>{this.invokeCallHook(t,e);const n=Md(t),r=cs(Fi(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}Dg.className="Masking",Pr(Dg);class Fg extends Xd{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(rh(t.inputLength))}this.inputDim=t.inputDim,gh(this.inputDim,"inputDim"),this.outputDim=t.outputDim,gh(this.outputDim,"outputDim"),this.embeddingsInitializer=Nd(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_f(t.embeddingsRegularizer),this.activityRegularizer=_f(t.activityRegularizer),this.embeddingsConstraint=Eh(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Gr((()=>this.maskZero?(t=Md(t),Fi(t,Li(t))):null))}computeOutputShape(t){if(t=zd(t),null==this.inputLength)return[...t,this.outputDim];const e=rh(this.inputLength);if(e.length!==t.length-1)throw new Xc(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],i=t[r+1];if(null!=s&&null!=i&&s!==i)throw new Xc(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Gr((()=>{this.invokeCallHook(t,e);let n=Md(t);return"int32"!==n.dtype&&(n=qh(n,"int32")),rd(this.embeddings.read(),n.as1D()).reshape(zd(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ad(this.embeddingsInitializer),embeddingsRegularizer:Df(this.embeddingsRegularizer),activityRegularizer:Df(this.activityRegularizer),embeddingsConstraint:Ih(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Fg.className="Embedding",Pr(Fg);class _g extends Xd{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Yc}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],i=e[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new Xc("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[zd(t)]),t.length<2)throw new Xc(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=hh(e),e.length>1)throw new Xc(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===hh(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Gr((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=Hh(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Kh(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],i=t.slice(1).concat([s]);let a=r.reshape([s].concat(Uh(t.slice(1))));a=ls(a,[1,0]),a=a.reshape(i),e.push(a),n=!0}else if(t>1){const s=jh(1,t).concat([0]);e.push(ls(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=ls(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(jh(0,s-1));r=ls(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=hh(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Gr((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Xc("`mask` should be an Array");if(!Array.isArray(t))throw new Xc("`inputs` should be an Array");if(e.length!==t.length)throw new Xc(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:Qs(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Ci(n,e[t]);return n}))}}class Og extends _g{constructor(t){super(t)}mergeFunction(t){return Gr((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Zr(e,t[n]);return e}))}}Og.className="Add",Pr(Og);class Lg extends _g{constructor(t){super(t)}mergeFunction(t){return Gr((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=fi(e,t[n]);return e}))}}Lg.className="Multiply",Pr(Lg);class Mg extends _g{constructor(t){super(t)}mergeFunction(t){return Gr((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Zr(e,t[n]);return fi(1/t.length,e)}))}}Mg.className="Average",Pr(Mg);class zg extends _g{constructor(t){super(t)}mergeFunction(t){return Gr((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=pi(e,t[n]);return e}))}}zg.className="Maximum",Pr(zg);class Bg extends _g{constructor(t){super(t)}mergeFunction(t){return Gr((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Ai(e,t[n]);return e}))}}Bg.className="Minimum",Pr(Bg);class Pg extends _g{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Xc("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(me(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Xc("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Gr((()=>Zh(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Xc("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Xc("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Xc("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Xc(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Gr((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(Mi(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(Qs(e[n],-1)):r.push(e[n]);const s=Os(r,this.axis);return us(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Wg(t,e){for(;t<0;)t+=e;return t}Pg.className="Concatenate",Pr(Pg);class Ug extends _g{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){he(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Yc("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new Xc(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Xc(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>Wg(e,t[n].shape.length))):[Wg(this.axes,n.shape.length),Wg(this.axes,r.shape.length)],this.normalize&&(n=cp(n,e[0]),r=cp(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Yc("batchDot is not implemented for tensors of 4D or higher rank yet");if(he(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),he(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Yc("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return Gr((()=>{let n,a;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;a=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Wg(this.axes,t.length),Wg(this.axes,e.length)],n}computeOutputShape(t){he(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Yc("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Ug.className="Dot",Pr(Ug);class Vg extends Xd{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Gr((()=>{this.invokeCallHook(t,e);const n=Md(t);return ld((()=>ed(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}Vg.className="GaussianNoise",Pr(Vg);class Gg extends Xd{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Gr((()=>{this.invokeCallHook(t,e);const n=Md(t);return this.rate>0&&this.rate<1?ld((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(ed(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}Gg.className="GaussianDropout",Pr(Gg);class Hg extends Xd{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Md(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Gr((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return ld((()=>{const e=Md(t),r=-1.7580993408473766;let s=hi(Gi(n),this.rate);s=qh(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-i*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(i).add(a)}),(()=>Md(t)),e.training||!1)}return t}))}}function jg(t,e,n,r,s,i=.001){let a;if(2===t.rank)a=As(t,e,n,r,s,i);else if(3===t.rank)a=Ns(t,e,n,r,s,i);else{if(4!==t.rank)throw new Yc(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=Ts(t,e,n,r,s,i)}return a}Hg.className="AlphaDropout",Pr(Hg);class qg extends Xd{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Nd(t.betaInitializer||"zeros"),this.gammaInitializer=Nd(t.gammaInitializer||"ones"),this.movingMeanInitializer=Nd(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Nd(t.movingVarianceInitializer||"ones"),this.betaConstraint=Eh(t.betaConstraint),this.gammaConstraint=Eh(t.gammaConstraint),this.betaRegularizer=_f(t.betaRegularizer),this.gammaRegularizer=_f(t.gammaRegularizer)}build(t){t=zd(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Xc(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Gd({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Gr((()=>{const n=null!=e.training&&e.training,r=Md(t),s=r.shape,i=s.length,a=jh(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=Qc(1,i);l[o]=s[o];const u=a.slice();u.sort();const c=!me(u,jh(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return jg(r,t,e,n,s,this.epsilon)}return jg(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(t,e,n,r,s=.001){return me(r.slice().sort(),jh(0,t.rank-1))?function(t,e,n,r,s=.001){return Gr((()=>{const i=Ti(t,r),a=i.mean,o=i.variance;return[jg(t,a,o,n,e,s),a,o]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return Gr((()=>{const i=Ti(t,r),a=i.mean,o=i.variance,l=[];for(const e of jh(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=a.reshape(l),c=o.reshape(l),h=null==e?null:e.reshape(l),d=null==n?null:n.reshape(l);return[jg(t,u,c,d,h,s),a,o]}))}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{Gr((()=>{const r=1-n,s=t.read(),i=s.sub(e).mul(r);t.write(s.sub(i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ad(this.betaInitializer),gammaInitializer:Ad(this.gammaInitializer),movingMeanInitializer:Ad(this.movingMeanInitializer),movingVarianceInitializer:Ad(this.movingVarianceInitializer),betaRegularizer:Df(this.betaRegularizer),gammaRegularizer:Df(this.gammaRegularizer),betaConstraint:Ih(this.betaConstraint),gammaConstraint:Ih(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}qg.className="BatchNormalization",Pr(qg);class Kg extends Xd{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Nd(t.betaInitializer||"zeros"),this.gammaInitializer=Nd(t.gammaInitializer||"ones"),this.betaRegularizer=_f(t.betaRegularizer),this.gammaRegularizer=_f(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=zd(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==hh(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Md(t),r=n.shape,s=r.length;return Gr((()=>{let{mean:t,variance:e}=Ti(n,this.axis,!0);const i=Qc(1,s);for(const t of this.axis)i[t]=r[t];const a=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(i):t;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),c.push(1)):(u.push(1),c.push(r[t]));return t=t.tile(u),e=e.tile(u),o=o.tile(c),l=l.tile(c),jg(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ad(this.betaInitializer),gammaInitializer:Ad(this.gammaInitializer),betaRegularizer:Df(this.betaRegularizer),gammaRegularizer:Df(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Kg.className="LayerNormalization",Pr(Kg);class Xg extends Xd{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Xc(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Xc(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Xc(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Gd({ndim:4})]}computeOutputShape(t){let e,n;return t=zd(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Gr((()=>{return e=Md(t),n=this.padding,r=this.dataFormat,Gr((()=>{if(4!==e.rank)throw new Xc(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Xc("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Xc(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],zi(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Yg(t,e,n,r,s,i){return Gr((()=>{let a;Fh(s),Oh(i),_h(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Gf(t,s);const o="same"===r?"same":"valid";return a="max"===i?$i(t,e,n,o):Is(t,e,n,o),"channelsFirst"===s&&(a=ls(a,[0,3,1,2])),a}))}function Jg(t,e,n,r,s,i){return Gr((()=>{let a;Fh(s),Oh(i),_h(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Hf(t,s);const o="same"===r?"same":"valid";return a="max"===i?ki(t,e,n,o):Ss(t,e,n,o),"channelsFirst"===s&&(a=ls(a,[0,4,1,2,3])),a}))}Xg.className="ZeroPadding2D",Pr(Xg);class Zg extends Xd{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Xc(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(gh(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Xc(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}gh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,_h(this.padding),this.inputSpec=[new Gd({ndim:3})]}computeOutputShape(t){const e=Uf((t=zd(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Gr((()=>{this.invokeCallHook(t,e),t=Kh(Md(t),2);const n=this.poolingFunction(Md(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return la(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Qg extends Zg{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fh(s),_h(r),Yg(t,e,n,r,s,"max")}}Qg.className="MaxPooling1D",Pr(Qg);class tm extends Zg{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fh(s),_h(r),Yg(t,e,n,r,s,"avg")}}tm.className="AveragePooling1D",Pr(tm);class em extends Xd{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Xc(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];gh(this.poolSize,"poolSize"),gh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fh(this.dataFormat),_h(this.padding),this.inputSpec=[new Gd({ndim:4})]}computeOutputShape(t){t=zd(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Uf(e,this.poolSize[0],this.padding,this.strides[0]),n=Uf(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Gr((()=>(this.invokeCallHook(t,e),this.poolingFunction(Md(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class nm extends em{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fh(s),_h(r),Yg(t,e,n,r,s,"max")}}nm.className="MaxPooling2D",Pr(nm);class rm extends em{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fh(s),_h(r),Yg(t,e,n,r,s,"avg")}}rm.className="AveragePooling2D",Pr(rm);class sm extends Xd{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Xc(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];gh(this.poolSize,"poolSize"),gh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fh(this.dataFormat),_h(this.padding),this.inputSpec=[new Gd({ndim:5})]}computeOutputShape(t){t=zd(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Uf(e,this.poolSize[0],this.padding,this.strides[0]),n=Uf(n,this.poolSize[1],this.padding,this.strides[1]),r=Uf(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Gr((()=>(this.invokeCallHook(t,e),this.poolingFunction(Md(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class im extends sm{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fh(s),_h(r),Jg(t,e,n,r,s,"max")}}im.className="MaxPooling3D",Pr(im);class am extends sm{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fh(s),_h(r),Jg(t,e,n,r,s,"avg")}}am.className="AveragePooling3D",Pr(am);class om extends Xd{constructor(t){super(t),this.inputSpec=[new Gd({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Yc}}class lm extends om{constructor(t){super(t||{})}call(t,e){return Gr((()=>{const e=Md(t);return Ei(e,1)}))}}lm.className="GlobalAveragePooling1D",Pr(lm);class um extends om{constructor(t){super(t||{})}call(t,e){return Gr((()=>{const e=Md(t);return bi(e,1)}))}}um.className="GlobalMaxPooling1D",Pr(um);class cm extends Xd{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fh(this.dataFormat),this.inputSpec=[new Gd({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Yc}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class hm extends cm{call(t,e){return Gr((()=>{const e=Md(t);return"channelsLast"===this.dataFormat?Ei(e,[1,2]):Ei(e,[2,3])}))}}hm.className="GlobalAveragePooling2D",Pr(hm);class dm extends cm{call(t,e){return Gr((()=>{const e=Md(t);return"channelsLast"===this.dataFormat?bi(e,[1,2]):bi(e,[2,3])}))}}dm.className="GlobalMaxPooling2D",Pr(dm);class pm extends Xd{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=up(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class fm extends pm{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=zd(t)).length<3)throw new Xc(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=zd(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Gr((()=>ig(((t,n)=>[Md(this.layer.call(t,e)),[]]),t=Md(t),[],!1,null,null,!1,!0)[1]))}}fm.className="TimeDistributed",Pr(fm);class gm extends pm{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=up(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=up(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,ph(Th,"BidirectionalMergeMode",s),t.weights)throw new Yc("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),e=s[0]):e=s[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):nh(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=sg(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new Xc("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const r=n.map((t=>new Gd({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),a.push(...r)}if(null!=r)throw new Yc("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof Hd;for(const t of i)if(t instanceof Hd!==o)throw new Xc("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Gr((()=>{const n=e.initialState;let r,s,i,a;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Ki(s,1)),"concat"===this.mergeMode?a=Zh([r,s]):"sum"===this.mergeMode?a=Zr(r,s):"ave"===this.mergeMode?a=fi(.5,Zr(r,s)):"mul"===this.mergeMode?a=fi(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Mh(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Mh(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=up(e.layer);if(delete e.layer,null!=e.numConstants)throw new Yc("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function mm(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(wm(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const a=mm(t[i],e,n,r);s[i]=a}return r.delete(t),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function ym(t,e=xm){return bm(t,e)}function bm(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(wm(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=bm(t.map((t=>t[i])),e,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function xm(t){return null===t?null:wm(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function wm(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof rn))}function vm(t){return mm(t,Cm)}function Cm(t){return t instanceof rn?{value:t.clone(),recurse:!1}:wm(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}gm.className="Bidirectional",Pr(gm),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(mg||(mg={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(yg||(yg={}));class $m{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class km extends $m{constructor(){super(km.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}km.INITIAL_CAPACITY=32;class Im{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new _m(this,t)}filter(t){return new Dm(this,t)}map(t){return new Fm(this,t)}mapAsync(t){return new Om(this,t)}serialMapAsync(t){return new Om(this,t).serial()}flatmap(t){return new Mm(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new Tm(this,t,e)}columnMajorBatch(t,e=!0,n=xm){return this.rowMajorBatch(t,e).map((t=>ym(t,n)))}concatenate(t,e){return new zm(new Sm([this,t]),e)}take(t){return t<0||null==t?this:new Nm(this,t)}skip(t){return t<0||null==t?this:new Am(this,t)}prefetch(t){return new Bm(this,t)}shuffle(t,e){return new Pm(this,t,e)}serial(){return new Rm(this)}}class Sm extends Im{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:vm(t),done:!1}}}class Em extends Im{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class Rm extends Im{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Am extends Im{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Hr(t.value)}return this.upstream.next()}}class Nm extends Im{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Tm extends Im{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class Dm extends Im{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Hr(t.value)}}}class Fm extends Im{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=mn(t.value),n=this.transform(t.value),r=mn(n);for(const t of e)gn(t,r)||t.dispose();return{value:n,done:!1}}}class _m extends Im{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Om extends Im{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=mn(t.value),n=await this.transform(t.value),r=mn(n);for(const t of e)gn(t,r)||t.dispose();return{value:n,done:!1}}}class Lm extends Im{constructor(){super(),this.outputQueue=new km,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Mm extends Lm{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=mn(t.value),n=this.transform(t.value),r=mn(n);this.outputQueue.pushAll(n);for(const t of e)gn(t,r)||t.dispose();return!0}}class zm extends Im{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(xg=bg||(bg={}))[xg.FAIL=0]="FAIL",xg[xg.SHORTEST=1]="SHORTEST",xg[xg.LONGEST=2]="LONGEST";class Bm extends Im{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new $m(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class Pm extends Bm{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Pi.alea(n||Pe().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Wm{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return he(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Um((async()=>(await n.iterator()).columnMajorBatch(t,e,Vm)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Um((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Um((async()=>(await e.iterator()).filter((e=>Gr((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Um((async()=>(await e.iterator()).map((e=>Gr((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Um((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Um((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Um((async()=>{return n=(s=async()=>({value:await e.iterator(),done:!1}),new Em(s)).take(t),new zm(n,r);var n,r,s}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Um((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Pi.alea(e||Pe().toString());return Um((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Um((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Um(t,e=null){return new class extends Wm{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Vm(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof rn||Se(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof rn?ua(t):Fn(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function Gm(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&he("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}function Hm(t,e,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=dr(s.outShape,n),m=g.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*y,g=e*r[0];for(let e=0;e<s.inChannels;++e)for(let y=0;y<s.outHeight;++y){const w=y*a-d,v=Math.max(0,w),C=Math.min(s.inHeight,c+w),$=n+y*b;for(let n=0;n<s.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let y=f,b=0,w=0;for(let n=v;n<C;n+=l){const s=g+n*r[1];for(let n=c;n<d;n+=u){const a=t[s+n*r[2]+e];"max"===i&&a>y?y=a:"avg"===i&&(b+=a,w++)}if(isNaN(y))break}m[$+n*x+e]="avg"===i?b/w:y}}}return g}function jm(t,e,n,r,s=!1,i=!1){const a=dr(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=dr(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const m=n*o-p;let y=m;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+m);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){const a=n-m;for(let o=p;o<x;o+=c){const l=o-h,u=g.get(t,n,o,e);u>w&&(w=u,v=s?i?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:a*d+l)}}a.set(v,t,n,o,e)}}return a}Wm.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const qm=Va,Km=Zo,Xm=Qo,Ym=tl,Jm=el;function Zm(t,e,n,r){if("linear"===n)return t.linear(e);if("relu"===n)return t.relu(e);if("elu"===n)return t.elu(e);if("relu6"===n)return t.relu6(e);if("prelu"===n)return t.prelu(e,r);throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}class Qm extends rl{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new nl(this,Ur())}write(t,e,n){this.firstUse&&(this.firstUse=!1,p().get("IS_NODE")&&Bo("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensors:n}=this.data.get(t);return"complex64"===e?Wo(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>Ue(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return dr(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Ur().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensors:e}=this.data.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=Pe();return t(),{kernelMs:Pe()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}complex(t,e){const n=this.makeOutput(null,t.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:Ur().keep(t.clone()),imag:Ur().keep(e.clone())},n}real(t){return this.data.get(t.dataId).complexTensors.real.clone()}imag(t){return this.data.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(Gm(t,"slice"),Or(t.shape,e,n)){const r=Lr(e,t.strides),s=ge(n);return Fn(this.readSync(t.dataId).subarray(r,r+s),n,t.dtype)}const r=dr(n,t.dtype),s=this.bufferSync(t);for(let t=0;t<r.size;++t){const n=r.indexToLoc(t).map(((t,n)=>t+e[n]));r.values[t]=s.get(...n)}return r.toTensor()}stridedSlice(t,e,n,r){Gm(t,"stridedSlice");const s=Ir(e,n,r);if(s.some((t=>0===t)))return Fn([],s);const i=dr(s,t.dtype),a=this.bufferSync(t);for(let t=0;t<i.size;t++){const n=i.indexToLoc(t),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[t]*r[t]+e[t];i.set(a.get(...s),...n)}return i.toTensor()}diag(t){const e=this.readSync(t.dataId),n=dr([t.size,t.size],t.dtype),r=n.values;for(let n=0;n<e.length;n++)r[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const i=new Array(t.rank).fill(0),a=t.shape.slice();a[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)i[e]=n,o[n]=this.slice(t,i,a).reshape(r);return o}reverse(t,e){Gm(t,"reverse");const n=dr(t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const i=n.indexToLoc(s),a=i.slice();e.forEach((e=>a[e]=t.shape[e]-1-a[e])),n.set(r.get(...a),...i)}return n.toTensor()}concat(t,e){if("complex64"===t[0].dtype){const n=t.map((t=>Oi(t))),r=t.map((t=>di(t)));return Tn(this.concat(n,e),this.concat(r,e))}const n=t.map((t=>{const n=ge(t.shape.slice(e));return t.as2D(-1,n)})),r=_s(n.map((t=>t.shape)),1),s=dr(r,t[0].dtype).values;if(1===n[0].shape[0]){let t=0;n.forEach((e=>{s.set(this.readSync(e.dataId),t),t+=e.size}))}else{let t=0;n.forEach((e=>{const n=this.readSync(e.dataId);let i=0;for(let a=0;a<e.shape[0];++a){const o=a*r[1]+t;for(let t=0;t<e.shape[1];++t)s[o+t]=n[i++]}t+=e.shape[1]}))}const i=_s(t.map((t=>t.shape)),e);return Fn(s,i,t[0].dtype)}neg(t){return Gm(t,"neg"),this.multiply(Xr(-1),t)}add(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),((t,e,n,r)=>({real:t+n,imag:e+r}))):this.broadcastedBinaryOp(t,e,dn(t.dtype,e.dtype),((t,e)=>t+e))}addN(t){Gm(t,"addN");const e=t.map((t=>this.readSync(t.dataId))),n=dr(t[0].shape,t[0].dtype),r=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=Ce([e],t.shape),r=bi(t,n),s=ns(r.shape,n),i=this.subtract(t,r.reshape(s)),a=this.exp(i),o=this.sum(a,n).reshape(s);return qs(a,o)}subtract(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),((t,e,n,r)=>({real:t-n,imag:e-r}))):this.broadcastedBinaryOp(t,e,dn(t.dtype,e.dtype),((t,e)=>t-e))}pow(t,e){return Gm([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.pow(t,e)))}batchMatMul(t,e,n,r){Gm([t,e],"matMul");const s=n?t.shape[1]:t.shape[2],i=n?t.shape[2]:t.shape[1],a=r?e.shape[1]:e.shape[2],o=t.shape[0],l=this.readSync(t.dataId),u=this.readSync(e.dataId),[c,h,d]=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],[p,f,g]=r?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],m=i*a,y=dr([o,i,a],t.dtype),b=y.values,x=this.blockSize;for(let t=0;t<o;t++)for(let e=0;e<i;e+=x)for(let n=0;n<a;n+=x)for(let r=0;r<s;r+=x){const o=Math.min(e+x,i),y=Math.min(n+x,a),w=Math.min(r+x,s);for(let s=e;s<o;s++)for(let e=n;e<y;e++){let n=0;for(let i=r;i<w;i++)n+=l[t*c+s*h+i*d]*u[i*p+e*f+t*g];b[t*m+(s*a+e)]+=n}}return y.toTensor()}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:a}){let o=this.batchMatMul(t,e,n,r);return s&&(o=this.add(o,s)),i&&(o=Zm(this,o,i,a)),o}multiply(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))):this.broadcastedBinaryOp(t,e,dn(t.dtype,e.dtype),((t,e)=>t*e))}floorDiv(t,e){return Gm([t,e],"floorDiv"),this.broadcastedBinaryOp(t,e,"int32",((t,e)=>Math.floor(t/e)))}sum(t,e){Gm(t,"sum"),rs("sum",e,t.rank);const[n,r]=es(t.shape,e),s=Ii(n,dn(t.dtype,"int32")),i=ge(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=0;for(let t=0;t<i;++t)n+=o[e+t];a[t]=n}return s}prod(t,e){Gm(t,"sum");const[n,r]=es(t.shape,e),s=Ii(n,dn(t.dtype,"int32")),i=ge(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=1;for(let t=0;t<i;++t)n*=o[e+t];a[t]=n}return s}unsortedSegmentSum(t,e,n){Gm(t,"unsortedSegmentSum");const r=[],s=t.rank-e.rank;for(let t=0;t<s;++t)e=e.expandDims(t+1);for(let s=0;s<n;++s){const n=Xr(s,"int32"),i=Zs(n,e).asType("float32").mul(t).sum(0);r.push(i)}return ua(r)}argMin(t,e){Gm(t,"argMin");const n=[e];rs("argMin",n,t.rank);const[r,s]=es(t.shape,n),i=Ii(r,"int32"),a=ge(s),o=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*a;let n=l[e],r=0;for(let t=0;t<a;++t){const s=l[e+t];s<n&&(n=s,r=t)}o[t]=r}return i}argMax(t,e){Gm(t,"argMax");const n=[e];rs("argMax",n,t.rank);const[r,s]=es(t.shape,n),i=Ii(r,"int32"),a=ge(s),o=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*a;let n=l[e],r=0;for(let t=0;t<a;++t){const s=l[e+t];s>n&&(n=s,r=t)}o[t]=r}return i}cumsum(t,e,n,r){if(Gm(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=dn(t.dtype,"int32"),i=Ii(t.shape,s),a=this.readSync(i.dataId),o=this.readSync(t.dataId),l=t.shape[t.rank-1],u=r?(t,e)=>t+l-e-1:(t,e)=>t+e;for(let t=0;t<o.length;t+=l)for(let e=0;e<l;e++){const r=u(t,e);if(0===e)a[r]=n?0:o[r];else{const s=u(t,e-1);a[r]=n?o[s]+a[s]:o[r]+a[s]}}return i}equal(t,e){return Gm([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t===e?1:0))}notEqual(t,e){return Gm([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t!==e?1:0))}less(t,e){return Gm([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<e?1:0))}lessEqual(t,e){return Gm([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<=e?1:0))}greater(t,e){return Gm([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>e?1:0))}greaterEqual(t,e){return Gm([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>=e?1:0))}logicalNot(t){Gm(t,"logicalNot");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n[t]=e[t]?0:1;return this.makeOutput(n,t.shape,"bool")}logicalAnd(t,e){return Gm([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t&&e))}logicalOr(t,e){return Gm([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t||e))}select(t,e,n){Gm([t,e,n],"select");const r=this.readSync(t.dataId),s=this.readSync(e.dataId),i=this.readSync(n.dataId),a=Ii(e.shape,dn(e.dtype,n.dtype)),o=this.readSync(a.dataId);let l=0;const u=0===t.rank||t.rank>1||1===e.rank?1:ge(e.shape.slice(1));for(let t=0;t<r.length;t++)for(let e=0;e<u;e++)1===r[t]?o[l++]=s[t]:o[l++]=i[t];return a}where(t){Gm([t],"where");const e=this.readSync(t.dataId);return Jm(t.shape,e)}topk(t,e,n){Gm(t,"topk");const r=this.readSync(t.dataId);return Ym(r,t.shape,t.dtype,e,n)}min(t,e){Gm(t,"min"),rs("min",e,t.rank);const[n,r]=es(t.shape,e),s=Ii(n,t.dtype),i=ge(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const r=o[e+t];r<n&&(n=r)}a[t]=n}return s}minimum(t,e){return Gm([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.min(t,e)))}mod(t,e){return Gm([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}))}maximum(t,e){return Gm([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.max(t,e)))}all(t,e){Gm(t,"all"),rs("all",e,t.rank);const[n,r]=es(t.shape,e),s=Ii(n,t.dtype),i=ge(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const r=o[e+t];n=n&&r}a[t]=n}return s}any(t,e){Gm(t,"any"),rs("any",e,t.rank);const[n,r]=es(t.shape,e),s=Ii(n,t.dtype),i=ge(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const r=o[e+t];n=n||r}a[t]=n}return s}squaredDifference(t,e){return Gm([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t-e;return n*n}))}ceil(t){Gm(t,"ceil");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.ceil(e[t]);return this.makeOutput(n,t.shape,"float32")}floor(t){Gm(t,"floor");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.floor(e[t]);return this.makeOutput(n,t.shape,"float32")}sign(t){Gm(t,"x");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)e[t]<0?n[t]=-1:e[t]>0?n[t]=1:n[t]=0;return this.makeOutput(n,t.shape,"float32")}isNaN(t){Gm(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Number.isNaN(e[t])&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}isInf(t){Gm(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Math.abs(e[t])===1/0&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}isFinite(t){Gm(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Number.isFinite(e[t])&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}round(t){Gm(t,"round");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=Math.floor(e[t]);e[t]-r<.5?n[t]=Math.floor(e[t]):e[t]-r>.5?n[t]=Math.ceil(e[t]):n[t]=r%2==0?r:r+1}return this.makeOutput(n,t.shape,"float32")}exp(t){Gm(t,"exp");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.exp(e[t]);return this.makeOutput(n,t.shape,"float32")}expm1(t){Gm(t,"expm1");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.expm1(e[t]);return this.makeOutput(n,t.shape,"float32")}log(t){Gm(t,"log");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.log(r)}return this.makeOutput(n,t.shape,"float32")}log1p(t){Gm(t,"log1p");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.log1p(r)}return this.makeOutput(n,t.shape,"float32")}sqrt(t){Gm(t,"sqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.sqrt(r)}return this.makeOutput(n,t.shape,"float32")}rsqrt(t){Gm(t,"rsqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=1/Math.sqrt(r)}return this.makeOutput(n,t.shape,"float32")}reciprocal(t){Gm(t,"reciprocal");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=1/e[t];return this.makeOutput(n,t.shape,"float32")}linear(t){return t}relu(t){Gm(t,"relu");const e=Ii(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t)n[t]=Math.max(0,r[t]);return e}relu6(t){Gm(t,"relu");const e=Ii(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t)n[t]=Math.min(Math.max(0,r[t]),6);return e}prelu(t,e){return Gm([t,e],"prelu"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>t<0?e*t:t))}elu(t){Gm(t,"elu");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t){const r=n[t];e[t]=r>=0?r:Math.exp(r)-1}return this.makeOutput(e,t.shape,"float32")}eluDer(t,e){Gm([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const e=r[t];n[t]=e>=1?s[t]:s[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}selu(t){Gm(t,"selu");const e=To,n=Do,r=new Float32Array(t.size),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t){const i=s[t];r[t]=i>=0?n*i:e*(Math.exp(i)-1)}return this.makeOutput(r,t.shape,"float32")}clip(t,e,n){Gm(t,"clip");const r=new Float32Array(t.size),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t){const i=s[t];r[t]=i>n?n:i<e?e:i}return this.makeOutput(r,t.shape,t.dtype)}abs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return this.makeOutput(e,t.shape,"float32")}complexAbs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<t.size;++r){const t=n[2*r],s=n[2*r+1];e[r]=Math.hypot(t,s)}return this.makeOutput(e,t.shape,"float32")}int(t){Gm(t,"int");const e=new Int32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=n[t];return this.makeOutput(e,t.shape,"int32")}sigmoid(t){Gm(t,"sigmoid");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=1/(1+Math.exp(-n[t]));return this.makeOutput(e,t.shape,"float32")}softplus(t){Gm(t,"softplus");const e=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const s=r[t]>-e,i=r[t]<e,a=Math.exp(r[t]);let o;o=i?a:s?r[t]:Math.log(1+a),n[t]=o}return this.makeOutput(n,t.shape,"float32")}sin(t){Gm(t,"sin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.sin(n[t]);return this.makeOutput(e,t.shape,"float32")}tan(t){Gm(t,"tan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.tan(n[t]);return this.makeOutput(e,t.shape,"float32")}asin(t){Gm(t,"asin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.asin(n[t]);return this.makeOutput(e,t.shape,"float32")}acos(t){Gm(t,"acos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.acos(n[t]);return this.makeOutput(e,t.shape,"float32")}atan(t){Gm(t,"atan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.atan(n[t]);return this.makeOutput(e,t.shape,"float32")}atan2(t,e){return Gm([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.atan2(t,e)))}sinh(t){Gm(t,"sinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.sinh(n[t]);return this.makeOutput(e,t.shape,"float32")}cosh(t){Gm(t,"cosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.cosh(n[t]);return this.makeOutput(e,t.shape,"float32")}tanh(t){Gm(t,"tanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=be(n[t]);return this.makeOutput(e,t.shape,"float32")}asinh(t){Gm(t,"asinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.asinh(n[t]);return this.makeOutput(e,t.shape,"float32")}acosh(t){Gm(t,"acosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.acosh(n[t]);return this.makeOutput(e,t.shape,"float32")}atanh(t){Gm(t,"atanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.atanh(n[t]);return this.makeOutput(e,t.shape,"float32")}erf(t){Gm(t,"erf");const e=new Float32Array(t.size),n=this.readSync(t.dataId),r=Fo,s=_o,i=Oo,a=Lo,o=Mo,l=zo;for(let t=0;t<n.length;++t){const u=Math.sign(n[t]),c=Math.abs(n[t]),h=1/(1+r*c);e[t]=u*(1-((((l*h+o)*h+a)*h+i)*h+s)*h*Math.exp(-c*c))}return this.makeOutput(e,t.shape,"float32")}step(t,e=0){Gm(t,"step");const n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const s=r[t];isNaN(s)?n[t]=NaN:n[t]=s>0?1:e}return this.makeOutput(n,t.shape,"float32")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){let a=this.conv2d(t,e,n);return r&&(a=this.add(a,r)),s&&(a=Zm(this,a,s,i)),a}conv2d(t,e,n){Gm([t,e],"conv2d");const r=n.filterHeight,s=n.filterWidth,i=n.dilationHeight,a=n.dilationWidth,o=n.padInfo.left,l=n.padInfo.top,u="channelsLast"===n.dataFormat,c=dr(n.outShape,t.dtype),h=t.strides[0],d=u?t.strides[1]:t.strides[2],p=u?t.strides[2]:1,f=u?1:t.strides[1],g=c.strides[0],m=u?c.strides[1]:c.strides[2],y=u?c.strides[2]:1,b=u?1:c.strides[1],x=this.readSync(t.dataId),w=this.readSync(e.dataId),v=c.values;for(let t=0;t<n.batchSize;++t){const u=t*h,c=t*g;for(let t=0;t<n.outHeight;++t){const h=c+t*m,g=t*n.strideHeight-l;for(let t=0;t<r;t++){const r=g+t*i;if(r<0||r>=n.inHeight)continue;const l=t*e.strides[0],c=u+r*d;for(let t=0;t<n.outWidth;++t){const r=h+t*y,i=t*n.strideWidth-o;for(let t=0;t<s;t++){const s=i+t*a;if(s<0||s>=n.inWidth)continue;const o=c+s*p;let u=l+t*e.strides[1];for(let t=0;t<n.inChannels;++t){const e=x[o+t*f];for(let t=0;t<n.outChannels;++t)v[r+t*b]+=e*w[u+t];u+=n.outChannels}}}}}}return c.toTensor()}conv3d(t,e,n){const r=n.filterDepth,s=n.filterHeight,i=n.filterWidth,a=n.dilationDepth,o=n.dilationHeight,l=n.dilationWidth,u=n.padInfo.front,c=n.padInfo.left,h=n.padInfo.top,d=dr(n.outShape,t.dtype),p=this.readSync(t.dataId),f=this.readSync(e.dataId),g=d.values;for(let m=0;m<n.batchSize;++m){const y=m*t.strides[0],b=m*d.strides[0];for(let m=0;m<n.outDepth;++m){const x=b+m*d.strides[1],w=m*n.strideDepth-u;for(let u=0;u<r;u++){const r=w+u*a;if(r<0||r>=n.inDepth)continue;const m=u*e.strides[0],b=y+r*t.strides[1];for(let r=0;r<n.outHeight;++r){const a=x+r*d.strides[2],u=r*n.strideHeight-h;for(let r=0;r<s;r++){const s=u+r*o;if(s<0||s>=n.inHeight)continue;const h=m+r*e.strides[1],d=b+s*t.strides[2];for(let t=0;t<n.outWidth;++t){const r=a+t*n.outChannels,s=t*n.strideWidth-c;for(let t=0;t<i;t++){const i=s+t*l;if(i<0||i>=n.inWidth)continue;const a=h+t*e.strides[2],o=d+i*n.inChannels;let u=a;for(let t=0;t<n.inChannels;++t){const e=p[o+t];for(let t=0;t<n.outChannels;++t)g[r+t]+=e*f[u+t];u+=n.outChannels}}}}}}}}return d.toTensor()}conv2dDerInput(t,e,n){Gm([t,e],"conv2dDerInput");const r=dr(n.inShape,"float32"),s=r.values,i=this.readSync(t.dataId),a=this.readSync(e.dataId),[o,l,u]=e.strides,{batchSize:c,filterHeight:h,filterWidth:d,inChannels:p,inHeight:f,inWidth:g,outChannels:m,outHeight:y,outWidth:b,strideHeight:x,strideWidth:w,dataFormat:v}=n,C=h-1-n.padInfo.top,$=d-1-n.padInfo.left,k="channelsLast"===v,I=r.strides[0],S=k?r.strides[1]:r.strides[2],E=k?r.strides[2]:1,R=k?1:r.strides[1],A=t.strides[0],N=k?t.strides[1]:t.strides[2],T=k?t.strides[2]:1,D=k?1:t.strides[1];for(let t=0;t<c;++t)for(let e=0;e<p;++e)for(let n=0;n<f;++n){const r=n-C,c=Math.max(0,Math.ceil(r/x)),p=Math.min(y,(h+r)/x);for(let f=0;f<g;++f){const g=f-$,y=Math.max(0,Math.ceil(g/w)),v=Math.min(b,(d+g)/w);let C=0;for(let n=c;n<p;++n){const s=n*x-r;for(let r=y;r<v;++r){const c=A*t+N*n+T*r,p=o*(h-1-s)+l*(d-1-(r*w-g))+u*e;for(let t=0;t<m;++t)C+=i[c+D*t]*a[p+t]}}s[I*t+S*n+E*f+R*e]=C}}return r.toTensor()}conv3dDerInput(t,e,n){const r=dr(n.inShape,"float32"),s=r.values,[i,a,o,l]=r.strides,u=this.readSync(t.dataId),[c,h,d,p]=t.strides,f=this.readSync(e.dataId),[g,m,y,b]=e.strides,{batchSize:x,filterDepth:w,filterHeight:v,filterWidth:C,inChannels:$,inDepth:k,inHeight:I,inWidth:S,outChannels:E,outDepth:R,outHeight:A,outWidth:N,strideDepth:T,strideHeight:D,strideWidth:F}=n,_=w-1-n.padInfo.front,O=v-1-n.padInfo.top,L=C-1-n.padInfo.left;for(let t=0;t<x;++t)for(let e=0;e<$;++e)for(let n=0;n<k;++n){const r=n-_,x=Math.max(0,Math.ceil(r/T)),$=Math.min(R,(w+r)/T);for(let k=0;k<I;++k){const I=k-O,R=Math.max(0,Math.ceil(I/D)),_=Math.min(A,(v+I)/D);for(let A=0;A<S;++A){const S=A-L,O=Math.max(0,Math.ceil(S/F)),M=Math.min(N,(C+S)/F);let z=0;for(let n=x;n<$;++n){const s=n*T-r;for(let r=R;r<_;++r){const i=r*D-I;for(let a=O;a<M;++a){const o=c*t+h*n+d*r+p*a,l=g*(w-1-s)+m*(v-1-i)+y*(C-1-(a*F-S))+b*e;for(let t=0;t<E;++t)z+=u[o+t]*f[l+t]}}}s[i*t+a*n+o*k+l*A+e]=z}}}return r.toTensor()}conv2dDerFilter(t,e,n){Gm([t,e],"conv2dDerFilter");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o="channelsLast"===n.dataFormat,l=dr(n.filterShape,"float32"),u=n.padInfo.left,c=n.padInfo.top,h=this.bufferSync(t),d=this.bufferSync(e);for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((c-t)/r)),i=Math.min(n.outHeight,(n.inHeight+c-t)/r);for(let p=0;p<a;++p){const a=Math.max(0,Math.ceil((u-p)/s)),f=Math.min(n.outWidth,(n.inWidth+u-p)/s);for(let g=0;g<n.inChannels;++g)for(let m=0;m<n.outChannels;++m){let y=0;for(let l=0;l<n.batchSize;++l)for(let n=e;n<i;++n){const e=t+n*r-c;for(let t=a;t<f;++t){const r=p+t*s-u;y+=o?h.get(l,e,r,g)*d.get(l,n,t,m):h.get(l,g,e,r)*d.get(l,m,n,t)}}l.set(y,t,p,g,m)}}}return l.toTensor()}conv3dDerFilter(t,e,n){const r=n.strideDepth,s=n.strideHeight,i=n.strideWidth,a=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=dr(n.filterShape,"float32"),c=u.values,[h,d,p,f]=u.strides,g=this.readSync(e.dataId),[m,y,b,x]=e.strides,w=this.readSync(t.dataId),[v,C,$,k]=t.strides,I=n.padInfo.front,S=n.padInfo.left,E=n.padInfo.top;for(let t=0;t<a;++t){const e=Math.max(0,Math.ceil((I-t)/r)),a=Math.min(n.outDepth,(n.inDepth+I-t)/r),u=t*h;for(let h=0;h<o;++h){const o=Math.max(0,Math.ceil((E-h)/s)),R=Math.min(n.outHeight,(n.inHeight+E-h)/s),A=h*d+u;for(let u=0;u<l;++u){const l=Math.max(0,Math.ceil((S-u)/i)),d=Math.min(n.outWidth,(n.inWidth+S-u)/i),N=u*p+A;for(let p=0;p<n.inChannels;++p){const A=p*f+N;for(let f=0;f<n.outChannels;++f){let N=0;for(let c=0;c<n.batchSize;++c){const n=c*v,A=c*m;for(let c=e;c<a;++c){const e=(t+c*r-I)*C+n,a=c*y+A;for(let t=o;t<R;++t){const n=(h+t*s-E)*$+e,r=t*b+a;for(let t=l;t<d;++t){const e=t*x+r;N+=w[(u+t*i-S)*k+n+p]*g[e+f]}}}}c[A+f]=N}}}}}return u.toTensor()}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){let a=this.depthwiseConv2D(t,e,n);return r&&(a=this.add(a,r)),s&&(a=Zm(this,a,s,i)),a}depthwiseConv2D(t,e,n){Gm([t,e],"depthwiseConv2D");const r=n.filterHeight,s=n.filterWidth,i=n.dilationHeight,a=n.dilationWidth,o=n.padInfo.left,l=n.padInfo.top,u=n.outChannels/n.inChannels,c=dr(n.outShape,t.dtype),h=this.readSync(t.dataId),d=this.readSync(e.dataId),p=c.values;for(let f=0;f<n.batchSize;++f){const g=f*t.strides[0],m=f*c.strides[0];for(let f=0;f<n.outHeight;++f){const y=m+f*c.strides[1],b=f*n.strideHeight-o;for(let o=0;o<r;++o){const r=b+o*i;if(r<0||r>=n.inHeight)continue;const f=o*e.strides[0],m=g+r*t.strides[1];for(let t=0;t<n.outWidth;++t){const r=y+t*c.strides[2],i=t*n.strideWidth-l;for(let t=0;t<s;++t){const s=i+t*a;if(s<0||s>=n.inWidth)continue;const o=f+t*e.strides[1],l=m+s*n.inChannels;let c=r,g=o;for(let t=0;t<n.inChannels;++t){const e=h[l+t];for(let t=0;t<u;++t)p[c+t]+=e*d[g+t];c+=u,g+=u}}}}}}return c.toTensor()}depthwiseConv2DDerInput(t,e,n){Gm([t,e],"depthwiseConv2DDerInput");const r=dr(n.inShape,"float32"),s=r.values,[i,a,o]=r.strides,l=this.readSync(t.dataId),[u,c,h]=t.strides,d=this.readSync(e.dataId),[p,f,g]=e.strides,{batchSize:m,filterHeight:y,filterWidth:b,inChannels:x,inHeight:w,inWidth:v,outChannels:C,outHeight:$,outWidth:k,strideHeight:I,strideWidth:S}=n,E=y-1-n.padInfo.top,R=b-1-n.padInfo.left,A=C/x;for(let t=0;t<m;++t)for(let e=0;e<x;++e)for(let n=0;n<w;++n){const r=n-E,m=Math.max(0,Math.ceil(r/I)),x=Math.min($,(y+r)/I);for(let w=0;w<v;++w){const v=w-R,C=Math.max(0,Math.ceil(v/S)),$=Math.min(k,(b+v)/S);let E=0;for(let n=m;n<x;++n){const s=n*I-r;for(let r=C;r<$;++r){const i=u*t+c*n+h*r,a=p*(y-1-s)+f*(b-1-(r*S-v))+g*e;for(let t=0;t<A;++t)E+=l[i+(e*A+t)]*d[a+t]}}s[i*t+a*n+o*w+e]=E}}return r.toTensor()}depthwiseConv2DDerFilter(t,e,n){Gm([t,e],"depthwiseConv2DDerFilter");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o=dr(n.filterShape,"float32"),l=n.padInfo.left,u=n.padInfo.top,c=n.outChannels/n.inChannels,h=this.bufferSync(t),d=this.bufferSync(e);for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((u-t)/r)),i=Math.min(n.outHeight,(n.inHeight+u-t)/r);for(let p=0;p<a;++p){const a=Math.max(0,Math.ceil((l-p)/s)),f=Math.min(n.outWidth,(n.inWidth+l-p)/s);for(let g=0;g<n.outChannels;++g){const m=Math.trunc(g/c),y=g%c;let b=0;for(let o=0;o<n.batchSize;++o)for(let n=e;n<i;++n){const e=t+n*r-u;for(let t=a;t<f;++t){const r=p+t*s-l;b+=h.get(o,e,r,m)*d.get(o,n,t,g)}}o.set(b,t,p,m,y)}}}return o.toTensor()}tile(t,e){return Gm(t,"tile"),Xm(this.bufferSync(t),e)}gather(t,e,n){Gm([t,e],"gather");const r=t.shape.slice(),s=this.readSync(e.dataId);r[n]=s.length;const i=dr(r,t.dtype),a=this.bufferSync(t);for(let t=0;t<i.size;++t){const e=i.indexToLoc(t),r=e.slice();r[n]=s[e[n]];const o=a.locToIndex(r);i.values[t]=a.values[o]}return i.toTensor()}batchToSpaceND(t,e,n){Gm([t],"batchToSpaceND");const r=e.reduce(((t,e)=>t*e)),s=Co(t.shape,e,r),i=$o(s.length,e.length),a=ko(t.shape,e,r),o=Io(n,e.length),l=So(a,n,e.length);return ls(t.reshape(s),i).reshape(a).slice(o,l)}maxPool(t,e){return Gm(t,"maxPool"),Hm(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"max").toTensor()}maxPoolBackprop(t,e,n,r){Gm([e,n],"maxPoolBackprop");const s=this.readSync(e.dataId),i=dr(r.outShape,e.dtype,jm(s,e.shape,e.dtype,r).values),a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=h-1-r.padInfo.left,p=c-1-r.padInfo.top,f=dr(e.shape,"float32"),g=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inHeight;++n)for(let s=0;s<r.inWidth;++s){const m=n-p,y=s-d;let b=0;for(let n=0;n<c;n+=l){const s=(m+n)/a;if(!(s<0||s>=r.outHeight||Math.floor(s)!==s))for(let a=0;a<h;a+=u){const l=(y+a)/o;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const u=c*h-1-i.get(t,s,l,e)===n*h+a?1:0;0!==u&&(b+=g.get(t,s,l,e)*u)}}f.set(b,t,n,s,e)}return f.toTensor()}avgPoolBackprop(t,e,n){Gm([t,e],"avgPoolBackprop");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o=n.dilationHeight,l=n.dilationWidth,u=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=c-1-n.padInfo.left,d=u-1-n.padInfo.top,p=dr(e.shape,"float32"),f=1/(i*a),g=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let i=0;i<n.inHeight;++i)for(let a=0;a<n.inWidth;++a){const m=i-d,y=a-h;let b=0;for(let i=0;i<u;i+=o){const a=(m+i)/r;if(!(a<0||a>=n.outHeight||Math.floor(a)!==a))for(let r=0;r<c;r+=l){const i=(y+r)/s;i<0||i>=n.outWidth||Math.floor(i)!==i||(b+=g.get(t,a,i,e))}}p.set(b*f,t,i,a,e)}return p.toTensor()}pool3d(t,e,n){Gm(t,"pool3d");const r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,g="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=this.readSync(t.dataId),y=dr(e.outShape,t.dtype),b=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[3]*e.outShape[4],C=e.outShape[4];for(let y=0;y<e.batchSize;++y){const $=y*x,k=y*t.strides[0];for(let y=0;y<e.inChannels;++y)for(let x=0;x<e.outDepth;++x){const I=x*r-d;let S=I;for(;S<0;)S+=a;const E=Math.min(e.inDepth,u+I),R=$+x*w;for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const x=Math.min(e.inHeight,c+u),w=R+r*v;for(let r=0;r<e.outWidth;++r){const s=r*i-f;let u=s;for(;u<0;)u+=l;const c=Math.min(e.inWidth,h+s),p=w+r*C;let v=g,$=0,I=0;for(let e=S;e<E;e+=a){const r=k+e*t.strides[1];for(let e=d;e<x;e+=o){const s=r+e*t.strides[2];for(let e=u;e<c;e+=l){const r=m[s+e*t.strides[3]+y];if("max"===n&&r>v?v=r:"avg"===n&&($+=r,I++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}b[p+y]="avg"===n?$/I:v}}}}return y.toTensor()}avgPool3d(t,e){return Gm(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){Gm([t,e],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,i=n.strideWidth,a=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,g=d-1-n.padInfo.front,m=f-1-n.padInfo.left,y=p-1-n.padInfo.top,b=dr(e.shape,"float32"),x=1/(a*o*l),w=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let a=0;a<n.inDepth;++a)for(let o=0;o<n.inHeight;++o)for(let l=0;l<n.inWidth;++l){const v=a-g,C=o-y,$=l-m;let k=0;for(let a=0;a<d;a+=u){const o=(v+a)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let r=0;r<p;r+=c){const a=(C+r)/s;if(!(a<0||a>=n.outHeight||Math.floor(a)!==a))for(let r=0;r<f;r+=h){const s=($+r)/i;s<0||s>=n.outWidth||Math.floor(s)!==s||(k+=w.get(t,o,a,s,e))}}}b.set(k*x,t,a,o,l,e)}return b.toTensor()}maxPool3d(t,e){return Gm(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=dr(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,g=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let m=0;m<e.inChannels;++m)for(let y=0;y<e.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=a;const w=Math.min(e.inDepth,u+b);for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const v=Math.min(e.inHeight,c+u);for(let s=0;s<e.outWidth;++s){const p=s*i-f;let C=p;for(;C<0;)C+=l;const $=Math.min(e.inWidth,h+p);let k=Number.NEGATIVE_INFINITY,I=-1;for(let e=x;e<w;e+=a){const n=e-b;for(let r=d;r<v;r+=o){const s=r-u;for(let i=C;i<$;i+=l){const a=i-p,o=g.get(t,e,r,i,m);o>=k&&(k=o,I=n*c*h+s*c+a)}}}n.set(I,t,y,r,s,m)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){Gm([e,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(e,r),i=r.strideDepth,a=r.strideHeight,o=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=h-1-r.padInfo.front,g=p-1-r.padInfo.left,m=d-1-r.padInfo.top,y=dr(e.shape,"float32"),b=this.bufferSync(s),x=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inDepth;++n)for(let s=0;s<r.inHeight;++s)for(let w=0;w<r.inWidth;++w){const v=n-f,C=s-m,$=w-g;let k=0;for(let n=0;n<h;n+=l){const s=(v+n)/i;if(!(s<0||s>=r.outDepth||Math.floor(s)!==s))for(let i=0;i<d;i+=u){const l=(C+i)/a;if(!(l<0||l>=r.outHeight||Math.floor(l)!==l))for(let a=0;a<p;a+=c){const u=($+a)/o;if(u<0||u>=r.outWidth||Math.floor(u)!==u)continue;const c=h*d*p-1-b.get(t,s,l,u,e)===n*d*p+i*p+a?1:0;0!==c&&(k+=x.get(t,s,l,u,e)*c)}}}y.set(k,t,n,s,w,e)}return y.toTensor()}cast(t,e){return Xo(t,e,this)}avgPool(t,e){return Gm(t,"avgPool"),Gm(t,"maxPool"),Hm(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"avg").toTensor().toFloat()}resizeBilinear(t,e,n,r){Gm(t,"resizeBilinear");const[s,i,a,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(ge([s,e,n,o])),c=[r&&e>1?i-1:i,r&&n>1?a-1:a],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d=0;const p=c[0]/h[0],f=c[1]/h[1];for(let r=0;r<s;r++)for(let s=0;s<e;s++){const e=p*s,c=Math.floor(e),h=e-c,g=Math.min(i-1,Math.ceil(e)),m=r*t.strides[0]+c*t.strides[1],y=r*t.strides[0]+g*t.strides[1];for(let e=0;e<n;e++){const n=f*e,r=Math.floor(n),s=n-r,i=Math.min(a-1,Math.ceil(n)),c=m+r*t.strides[2],p=y+r*t.strides[2],g=m+i*t.strides[2],b=y+i*t.strides[2];for(let t=0;t<o;t++){const e=l[c+t],n=l[p+t],r=e+(l[g+t]-e)*s,i=r+(n+(l[b+t]-n)*s-r)*h;u[d++]=i}}}return Fn(u,[s,e,n,o])}resizeBilinearBackprop(t,e,n){Gm([t,e],"resizeBilinearBackprop");const[r,s,i,a]=e.shape,[,o,l]=t.shape,u=new Float32Array(r*s*i*a),c=[n&&o>1?s-1:s,n&&l>1?i-1:i],h=[n&&o>1?o-1:o,n&&l>1?l-1:l],d=c[0]/h[0],p=c[1]/h[1],f=this.readSync(t.dataId);let g=0;for(let t=0;t<r;t++){const n=t*e.strides[0];for(let t=0;t<o;t++){const r=t*d,o=Math.floor(r),c=Math.min(Math.ceil(r),s-1),h=n+o*e.strides[1],m=n+c*e.strides[1],y=r-o,b=1-y;for(let t=0;t<l;t++){const n=t*p,r=Math.floor(n),s=Math.min(Math.ceil(n),i-1),o=n-r,l=1-o,c=h+r*e.strides[2],d=h+s*e.strides[2],x=m+r*e.strides[2],w=m+s*e.strides[2],v=b*l,C=b*o,$=y*l,k=y*o;for(let t=0;t<a;t++){const e=f[g++];u[c+t]+=e*v,u[d+t]+=e*C,u[x+t]+=e*$,u[w+t]+=e*k}}}}return da(u,[r,i,s,a],e.dtype)}resizeNearestNeighbor(t,e,n,r){Gm(t,"resizeNearestNeighbor");const[s,i,a,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(s*e*n*o),c=[r&&e>1?i-1:i,r&&n>1?a-1:a],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],d=c[0]/h[0],p=c[1]/h[1];let f=0;for(let c=0;c<s;c++){const s=c*t.strides[0];for(let c=0;c<e;c++){const e=d*c,h=s+Math.min(i-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=p*e,s=h+Math.min(a-1,r?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<o;t++){const e=l[s+t];u[f++]=e}}}}return Fn(u,[s,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){Gm([t,e],"resizeNearestNeighborBackprop");const[r,s,i,a]=e.shape,[,o,l]=t.shape,u=new Float32Array(r*s*i*a),c=this.readSync(t.dataId),h=[n&&o>1?s-1:s,n&&l>1?i-1:i],d=[n&&o>1?o-1:o,n&&l>1?l-1:l],p=h[0]/d[0],f=h[1]/d[1],g=1/p,m=1/f,y=2*Math.ceil(g)+2,b=2*Math.ceil(m)+2;for(let h=0;h<r;h++){const r=h*e.strides[0];for(let h=0;h<s;h++){const d=r+h*e.strides[1],x=Math.floor(h*g),w=Math.floor(x-y/2);for(let g=0;g<i;g++){const x=d+g*e.strides[2],v=Math.floor(g*m),C=Math.floor(v-b/2);for(let e=0;e<a;e++){let a=0;for(let u=0;u<y;u++){const d=u+w;if(d<0||d>=o)continue;const m=r+d*t.strides[1],y=d*p;if(h===Math.min(s-1,n?Math.round(y):Math.floor(y)))for(let r=0;r<b;r++){const s=r+C;if(s<0||s>=l)continue;const o=m+s*t.strides[2],u=s*f;g===Math.min(i-1,n?Math.round(u):Math.floor(u))&&(a+=c[o+e])}}u[x+e]=a}}}}return da(u,e.shape,e.dtype)}batchNorm(t,e,n,r,s,i){Gm([t,e,n,s,r],"batchNorm");const a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=this.readSync(n.dataId),u=s?this.readSync(s.dataId):new Float32Array([1]),c=r?this.readSync(r.dataId):new Float32Array([0]),h=new Float32Array(a.length),d=c.length,p=u.length,f=l.length,g=o.length;let m=0,y=0,b=0,x=0;for(let t=0;t<a.length;++t)h[t]=c[m++]+(a[t]-o[y++])*u[b++]/Math.sqrt(l[x++]+i),m>=d&&(m=0),y>=g&&(y=0),b>=p&&(b=0),x>=f&&(x=0);return da(h,t.shape)}localResponseNormalization4D(t,e,n,r,s){Gm(t,"localResponseNormalization4D");const i=t.shape[3],a=i-1,o=this.readSync(t.dataId),l=t.size,u=new Float32Array(l);function c(t){const n=t%i;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,a);let l=0;for(;r<=s;r++){const t=o[r];l+=t*t}return l}for(let t=0;t<l;t++){const e=c(t),i=o[t]*Math.pow(n+r*e,-s);u[t]=i}return da(u,t.shape)}LRNGrad(t,e,n,r,s,i,a){Gm(t,"LRNGrad");const o=t.shape[3],l=this.readSync(t.dataId),u=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),d=t.size;for(let t=0;t<d;t++){const e=t%o,n=t-e+Math.max(0,e-r),d=t-e+Math.min(o,e+r+1);let p=0;for(let t=n;t<d;t++)p+=Math.pow(u[t],2);p=i*p+s;for(let e=n;e<d;e++){let n=-2*i*a*u[e]*c[t]/p;t===e&&(n+=Math.pow(p,-a)),n*=l[t],h[e]+=n}}return da(h,t.shape)}multinomial(t,e,n,r){Gm(t,"multinomial");const s=e?t:ra(t),i=s.shape[0],a=s.shape[1],o=Ii([i,n],"int32"),l=this.readSync(o.dataId),u=this.readSync(s.dataId);for(let t=0;t<i;++t){const e=t*a,s=new Float32Array(a-1);s[0]=u[e];for(let t=1;t<s.length;++t)s[t]=s[t-1]+u[e+t];const i=Pi.alea(r.toString()),o=t*n;for(let t=0;t<n;++t){const e=i();l[o+t]=s.length;for(let n=0;n<s.length;n++)if(e<s[n]){l[o+t]=n;break}}}return o}oneHot(t,e,n,r){Gm(t,"oneHot");const s=new Float32Array(t.size*e);s.fill(r);const i=this.readSync(t.dataId);for(let r=0;r<t.size;++r)i[r]>=0&&i[r]<e&&(s[r*e+i[r]]=n);return ha(s,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){Gm(t,"nonMaxSuppression");const i=this.readSync(t.dataId),a=this.readSync(e.dataId);return qm(i,a,n,r,s)}fft(t){return this.fftBatch(t,!1)}ifft(t){return this.fftBatch(t,!0)}fftBatch(t,e){const n=t.shape[0],r=t.shape[1],s=dr(t.shape,"float32"),i=dr(t.shape,"float32"),a=Oi(t).as2D(n,r),o=di(t).as2D(n,r);for(let t=0;t<n;t++){const n=a.slice([t,0],[1,r]),l=o.slice([t,0],[1,r]),u=Tn(n,l),c=this.readSync(this.fftImpl(u,e).dataId);for(let e=0;e<r;e++){const n=Ho(c,e);s.values[t*r+e]=n.real,i.values[t*r+e]=n.imag}}return Tn(s.toTensor(),i.toTensor()).as2D(n,r)}fftImpl(t,e){const n=t.as1D(),r=n.size;if(this.isExponentOf2(r)){let s=this.fftRadix2(n,r,e).as2D(t.shape[0],t.shape[1]);return e&&(s=Tn(Oi(s).div(Xr(r)),di(s).div(Xr(r)))),s}{const n=this.readSync(t.dataId),s=Uo(this.fourierTransformByMatmul(n,r,e));return Tn(s.real,s.imag).as2D(t.shape[0],t.shape[1])}}isExponentOf2(t){return 0==(t&t-1)}fftRadix2(t,e,n){if(1===e)return t;const r=this.readSync(t.dataId),s=e/2,i=Vo(r);let a=Tn(i.real,i.imag).as1D();const o=Go(r);let l=Tn(o.real,o.imag).as1D();a=this.fftRadix2(a,s,n),l=this.fftRadix2(l,s,n);const u=qo(e,n),c=Tn(u.real,u.imag).mul(l),h=a.add(c),d=a.sub(c),p=Oi(h).concat(Oi(d)),f=di(h).concat(di(d));return Tn(p,f).as1D()}fourierTransformByMatmul(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let i=0,a=0;for(let r=0;r<e;r++){const o=Ko(s*r,e,n),l=Ho(t,r);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=e,a/=e),jo(r,i,a,s)}return r}depthToSpace(t,e,n){he("NHWC"===n,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${n}`)),he(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const r=t.shape[0],s=t.shape[1],i=t.shape[2],a=t.shape[3],o=s*e,l=i*e,u=a/(e*e),c=this.readSync(t.dataId),h=new Float32Array(r*o*l*u);let d=0;for(let t=0;t<r;++t)for(let n=0;n<o;++n){const r=Math.floor(n/e),o=n%e;for(let n=0;n<l;++n){const l=Math.floor(n/e),p=(o*e+n%e)*u;for(let e=0;e<u;++e){const n=e+p+a*(l+i*(r+s*t));h[d++]=c[n]}}}return da(h,[r,o,l,u])}broadcastedBinaryOp(t,e,n,r){const s=Js(t.shape,e.shape),i=dr(s,n),a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=Xs(t.shape,s),u=Xs(e.shape,s),c=i.values;if(l.length+u.length===0)for(let t=0;t<c.length;++t)c[t]=r(a[t%a.length],o[t%o.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let h=0;h<c.length;++h){const d=i.indexToLoc(h),p=d.slice(-t.rank);l.forEach((t=>p[t]=0));const f=n.locToIndex(p),g=d.slice(-e.rank);u.forEach((t=>g[t]=0));const m=s.locToIndex(g);c[h]=r(a[f],o[m])}}return i.toTensor()}broadcastedBinaryComplexOp(t,e,n){const r=Js(t.shape,e.shape),s=dr(r,"float32"),i=dr(r,"float32"),a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=Xs(t.shape,r),u=Xs(e.shape,r),c=s.values,h=i.values;if(l.length+u.length===0)for(let t=0;t<c.length;t++){const e=t%a.length,r=t%o.length,s=n(a[2*e],a[2*e+1],o[2*r],o[2*r+1]);c[t]=s.real,h[t]=s.imag}else{const r=this.bufferSync(this.data.get(t.dataId).complexTensors.real),i=this.bufferSync(this.data.get(e.dataId).complexTensors.real);for(let d=0;d<c.length;d++){const p=s.indexToLoc(d),f=p.slice(-t.rank);l.forEach((t=>f[t]=0));const g=r.locToIndex(f),m=p.slice(-e.rank);u.forEach((t=>m[t]=0));const y=i.locToIndex(m),b=n(a[2*g],a[2*g+1],o[2*y],o[2*y+1]);c[d]=b.real,h[d]=b.imag}}return this.complex(s.toTensor(),i.toTensor())}split(t,e,n){return Km(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,s,i){const[a,o,l,u]=t.shape,c=e.shape[0],[h,d]=r,p=dr([c,h,d,u],"float32"),f=this.readSync(e.dataId),g=this.readSync(n.dataId),m=this.readSync(t.dataId),y=t.strides,b=p.strides;for(let t=0;t<c;t++){const e=4*t,n=f[e],r=f[e+1],c=f[e+2],x=f[e+3],w=g[t];if(w>=a)continue;const v=h>1?(c-n)*(o-1)/(h-1):0,C=d>1?(x-r)*(l-1)/(d-1):0;for(let e=0;e<h;e++){const a=h>1?n*(o-1)+e*v:.5*(n+c)*(o-1);if(a<0||a>o-1)for(let n=0;n<d;n++)for(let r=0;r<u;r++){const s=r+n*b[2]+e*b[1]+t*b[0];p.values[s]=i}else if("bilinear"===s){const n=Math.floor(a),s=Math.ceil(a),o=a-n;for(let a=0;a<d;a++){const c=d>1?r*(l-1)+a*C:.5*(r+x)*(l-1);if(c<0||c>l-1){for(let n=0;n<u;n++){const r=n+a*b[2]+e*b[1]+t*b[0];p.values[r]=i}continue}const h=Math.floor(c),f=Math.ceil(c),g=c-h;for(let r=0;r<u;r++){let i=r+h*y[2]+n*y[1]+w*y[0];const l=m[i];i=r+f*y[2]+n*y[1]+w*y[0];const u=m[i];i=r+h*y[2]+s*y[1]+w*y[0];const c=m[i];i=r+f*y[2]+s*y[1]+w*y[0];const d=l+(u-l)*g,x=c+(m[i]-c)*g;i=r+a*b[2]+e*b[1]+t*b[0],p.values[i]=d+(x-d)*o}}}else for(let n=0;n<d;++n){const s=d>1?r*(l-1)+n*C:.5*(r+x)*(l-1);if(s<0||s>l-1){for(let r=0;r<u;r++){const s=r+n*b[2]+e*b[1]+t*b[0];p.values[s]=i}continue}const o=Math.round(s),c=Math.round(a);for(let r=0;r<u;r++){const s=r+o*y[2]+c*y[1]+w*y[0],i=r+n*b[2]+e*b[1]+t*b[0];p.values[i]=m[s]}}}}return p.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:i,sliceSize:a,strides:o,outputSize:l}=No(0,t,n);return this.scatter(t,e,n,l,a,i,s,o,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,i,a,o]=Eo(t,e);if(0===i)return Fn([],s,t.dtype);const l=new Qe([i,a],t.dtype),u=this.readSync(e.dataId),c=this.readSync(t.dataId);for(let e=0;e<i;e++){const n=[];let s=0;for(let t=0;t<r;t++){const i=u[e*r+t];s+=i*o[t],n.push(i)}if(s<0||s>=t.size/a)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<a;t++)l.values[e*a+t]=c[s*a+t]}return l.toTensor().reshape(s)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:i,strides:a,outputSize:o}=No(0,t,n),l=Xr(0);return this.scatter(t,e,n,o,i,s,r,a,l,!0)}fill(t,e,n){const r=Ie(n=n||Ne(e),ge(t));return r.fill(e),Ur().makeTensor(r,t,n,this)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)}zerosLike(t){const e=Ie(t.dtype,ge(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return Jo(t,e,n)}scatter(t,e,n,r,s,i,a,o,l,u){const c=[r/s,s],h=this.readSync(t.dataId),d=this.readSync(e.dataId);if(0===r)return Fn([],n,e.dtype);const p=new Qe(c,e.dtype);p.values.fill(this.readSync(l.dataId)[0]);for(let t=0;t<i;t++){const i=[];let l=0;for(let e=0;e<a;e++){const n=h[t*a+e];i.push(n),l+=n*o[e]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[t*s+n]:p.values[l*s+n]=0===e.rank?d[0]:d[t*s+n]}return p.toTensor().reshape(n)}}qr("cpu",(()=>new Qm),1);const ty={kernelName:P,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;Gm(n,"cos");const s=r.data.get(n.dataId).values,i=ge(n.shape),a=new Float32Array(i);for(let t=0;t<i;++t)a[t]=Math.cos(s[t]);return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ey={kernelName:G,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:i,pad:a,dilations:o}=n,l=e,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:C,filterWidth:$,dilationHeight:k,dilationWidth:I,outShape:S}=ds(r.shape,s.shape,i,a,"NHWC",o),E=ge(S),R=S.length,A=Ie(r.dtype,E);for(let t=0;t<p;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let i=0;i<b;++i){const a=i*v-x.left;for(let o=0;o<m;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<C;++e){const i=n+e*k;if(i>=0&&i<f)for(let n=0;n<$;++n){const p=a+n*I;if(p>=0&&p<g){const a=Ve([t,i,p,o],c,Fe(r.shape)),f=Ve([e,n,o],d,Fe(s.shape)),g=u[a]+h[f];g>l&&(l=g)}}}A[Ve([t,e,i,o],R,Fe(S))]=l}}}return{dataId:l.write(_e(A,r.dtype),S,r.dtype),shape:S,dtype:r.dtype}}},ny={kernelName:j,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=Le(r.shape,u.data.get(r.dataId).values),h=Le(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:$,dilationWidth:k,outShape:I}=ds(r.shape,s.shape,a,o,"NHWC",l);he(i.rank===I.length,(()=>`Error in ${j}, dy must have the same rank as output ${I.length}, but got ${i.rank}`));const S=Le(I,u.data.get(i.dataId).values),E=Be(s.shape,s.dtype);for(let t=0;t<d;++t)for(let e=0;e<m;++e){const n=e*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<v;++e){const r=n+e*$;if(r>=0&&r<p)for(let n=0;n<C;++n){const u=s+n*k;if(u>=0&&u<f){const s=c[t][r][u][i]+h[e][n][i];s>a&&(a=s,o=e,l=n)}}}E[o][l][i]+=S[t][e][r][i]}}}return{dataId:u.write(_e(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},ry={kernelName:H,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=Le(r.shape,u.data.get(r.dataId).values),h=Le(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:$,dilationWidth:k,outShape:I}=ds(r.shape,s.shape,a,o,"NHWC",l);he(i.rank===I.length,(()=>`Error in ${H}, dy must have the same rank as output ${I.length}, but got ${i.rank}`));const S=Le(I,u.data.get(i.dataId).values),E=Be(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<m;++e){const n=e*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let e=0;e<v;++e){const r=n+e*$;if(r>=0&&r<p)for(let n=0;n<C;++n){const u=s+n*k;if(u>=0&&u<f){const s=c[t][r][u][i]+h[e][n][i];s>a&&(a=s,o=r,l=u)}}}E[t][o][l][i]+=S[t][e][r][i]}}}return{dataId:u.write(_e(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function sy(t,e){return{kernelName:t,backendName:"cpu",kernelFunc:({inputs:n,backend:r})=>{const{a:s,b:i}=n,a=r;Gm([s,i],t);const o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values,[u,c]=e(s.shape,i.shape,o,l,s.dtype);return{dataId:a.write(u,c,s.dtype),shape:c,dtype:s.dtype}}}}function iy(t){return(e,n,r,s,i)=>{const a=Js(e,n),o=a.length,l=Fe(a),u=ke(i,ge(a)),c=e.length,h=n.length,d=Fe(e),p=Fe(n),f=Xs(e,a),g=Xs(n,a);if(f.length+g.length===0)for(let e=0;e<u.length;++e)u[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<u.length;++e){const n=Ge(e,o,l),i=n.slice(-c);f.forEach((t=>i[t]=0));const a=Ve(i,c,d),m=n.slice(-h);g.forEach((t=>m[t]=0));const y=Ve(m,h,p);u[e]=t(r[a],s[y])}return[u,a]}}const ay=iy(((t,e)=>t/e)),oy=sy(q,ay),ly={kernelName:X,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,i=ke(r.dtype,ge(r.shape)),[a,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let o=0;o<u;o++){const h=[a,t,r,o][2],d=Math.round(l-h),p=e+n+s+o;let f=c[p];d>=0&&d<l&&(f=c[e+n+d*u+o]),i[p]=f}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},uy={kernelName:et,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}};function cy(t,e,n,r){const s=ke(r,ge(n));for(let n=0;n<s.length;++n){const r=n*e;let i=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>i&&(i=e)}s[n]=i}return s}function hy(t,e,n,r,s){const i=e.length,a=ge(e),o=Fe(e),l=Fe(s),u=ke(n,ge(s));for(let e=0;e<a;++e){const n=Ge(e,i,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];u[Ve(s,i,l)]=t[e]}return u}const dy={kernelName:ot,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:i}=e,a=n;let o=r.shape;const l=o.length,u=Ce(s,o);let c=u;const h=ss(c,l);let d=a.data.get(r.dataId).values;if(null!=h){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=o[h[e]];d=hy(d,o,r.dtype,h,t),c=as(c.length,l),o=t}Gm(r,"max"),rs("max",c,l);const[p,f]=es(o,c),g=cy(d,ge(f),p,r.dtype),m=a.write(g,p,r.dtype);let y=p;return i&&(y=ns(p,u)),{dataId:m,shape:y,dtype:r.dtype}}},py={kernelName:ht,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;Gm(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=ps(r.shape,s,i,[1,1],a),[h,d]=function(t,e,n,r,s){const i=Hm(t,0,n,Fe(e),s,"max"),a=jm(t,e,n,s,!0,r);return[i.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},fy=Ga,gy={kernelName:mt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e;Gm(r,"NonMaxSuppressionPadded");const c=u.data.get(r.dataId).values,h=u.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=fy(c,h,i,a,o,l);return[d,p]}},my=Ha,yy={kernelName:yt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=n,u=e;Gm(r,"NonMaxSuppressionWithScore");const c=u.data.get(r.dataId).values,h=u.data.get(s.dataId).values,d=i,p=a,f=o,g=l,{selectedIndices:m,selectedScores:y}=my(c,h,d,p,f,g);return[m,y]}},by={kernelName:wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:a}=r;Gm(s,"pad");const o=i.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=i.map((t=>t[0])),u=n.data.get(s.dataId).values,c=ge(s.shape),h=s.shape.length,d=Fe(s.shape),p=ge(o),f=o.length,g=Fe(o),m=ke(s.dtype,p);0!==a&&m.fill(a);for(let t=0;t<c;t++)m[Ve(Ge(t,h,d).map(((t,e)=>t+l[e])),f,g)]=u[t];return{dataId:n.write(m,o,s.dtype),shape:o,dtype:s.dtype}}};function xy(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r;return n.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}const wy={kernelName:kt,backendName:"cpu",kernelFunc:xy},vy={kernelName:Jt,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:a}=e,o=n,l=ke(r.dtype,ge(r.shape)),[u,c,h,d]=r.shape,[p,f]=vo(a,c,h),g=Math.sin(s),m=Math.cos(s),y=o.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let a=0;a<d;a++){const o=[u,t,r,a],b=o[2],x=o[1];let w=(b-p)*m-(x-f)*g,v=(b-p)*g+(x-f)*m;w=Math.round(w+p),v=Math.round(v+f);let C=i;"number"!=typeof i&&(C=3===a?255:i[a]),w>=0&&w<h&&v>=0&&v<c&&(C=y[e+v*(h*d)+w*d+a]),l[e+n+s+a]=C}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Cy(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:i}=n;Gm(s,"transpose");const a=s.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=s.shape[i[t]];const l=hy(r.data.get(s.dataId).values,s.shape,s.dtype,i,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const $y={kernelName:jt,backendName:"cpu",kernelFunc:Cy},ky={kernelName:Bt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:a}=r;Gm([s],"spaceToBatchND");const o=ge(i),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<s.shape.length;++t)l.push([0,0]);const u=by.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Co(u.shape,i,o,!1),h=$o(c.length,i.length,!1),d=ko(u.shape,i,o,!1),p=xy({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Cy({inputs:{x:p},backend:n,attrs:{perm:h}}),g=xy({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}},Iy={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;Gm(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];i[t]=e*e}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Sy=iy(((t,e)=>{const n=t-e;return n*n})),Ey=sy(Ut,Sy),Ry=[ty,ey,ry,ny,oy,ly,uy,py,dy,gy,yy,by,wy,vy,ky,Iy,Ey,$y];for(const t of Ry)ie(t);const Ay={},Ny={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Ty(t){t in Ay||(Ay[t]=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete Ay[t]}),!1),1===t?e.getContext("webgl",Ny)||e.getContext("experimental-webgl",Ny):e.getContext("webgl2",Ny)}(t));const e=Ay[t];return e.isContextLost()?(delete Ay[t],Ty(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Ay[t])}var Dy,Fy,_y;function Oy(t,e){return[e,t]}function Ly(t){const e=ge(t);return xe(Math.ceil(e/4))}function My(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function zy(t,e){const n=t;let r,s,i,a,o,l,u,c,h,d;return 2===p().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=t.RGBA,s=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT),l=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function By(t,e){const n=e();return p().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function Py(t){return!!(p().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function Wy(t,e){return Xy(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(Dy||(Dy={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(Fy||(Fy={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(_y||(_y={}));const Uy=/ERROR: [0-9]+:([0-9]+):/g;function Vy(t,e){if(By(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Gy(t,e,n,r,s,i,a){const o=t.getAttribLocation(e,n);return-1!==o&&(By(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),By(t,(()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,i,a))),By(t,(()=>t.enableVertexAttribArray(o))),!0)}function Hy(t,e,n,r){By(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),By(t,(()=>t.activeTexture(t.TEXTURE0+n))),By(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),By(t,(()=>t.uniform1i(n,r)))}function jy(t,e,n){By(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),By(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function qy(t,e){By(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),By(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function Ky(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function Xy(t,e,n){const r=By(t,(()=>e()));if(null==r)throw new Error(n);return r}function Yy(t,e=2){return ge(t.slice(0,t.length-e))}function Jy(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Zy(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Yy(t),...Jy(t)]),e}function Qy(t){return t%2==0}function tb(t,e){if(me(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Qy(n)&&Qy(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Qy(t[0])&&Qy(e[0])}let eb,nb;function rb(t,e){return null!=t.getExtension(e)}function sb(t){try{if(null!=Ty(t))return!0}catch(t){return!1}return!1}function ib(t){const e=zy(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}const ab=p();ab.registerFlag("HAS_WEBGL",(()=>ab.getNumber("WEBGL_VERSION")>0)),ab.registerFlag("WEBGL_VERSION",(()=>sb(2)?2:sb(1)?1:0)),ab.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),ab.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===ab.get("WEBGL_VERSION"))),ab.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),ab.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),ab.registerFlag("WEBGL_PACK",(()=>ab.getBool("HAS_WEBGL"))),ab.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>ab.getBool("WEBGL_PACK"))),ab.registerFlag("WEBGL_PACK_CLIP",(()=>ab.getBool("WEBGL_PACK"))),ab.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),ab.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>ab.getBool("WEBGL_PACK"))),ab.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>ab.getBool("WEBGL_PACK"))),ab.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>ab.getBool("WEBGL_PACK"))),ab.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>ab.getBool("WEBGL_PACK"))),ab.registerFlag("WEBGL_PACK_REDUCE",(()=>ab.getBool("WEBGL_PACK"))),ab.registerFlag("WEBGL_LAZILY_UNPACK",(()=>ab.getBool("WEBGL_PACK"))),ab.registerFlag("WEBGL_CONV_IM2COL",(()=>ab.getBool("WEBGL_PACK"))),ab.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==eb){const e=Ty(t);eb=e.getParameter(e.MAX_TEXTURE_SIZE)}return eb}(ab.getNumber("WEBGL_VERSION")))),ab.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==nb){const e=Ty(t);nb=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,nb)}(ab.getNumber("WEBGL_VERSION")))),ab.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=ab.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Ty(t);return e=rb(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:rb(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),ab.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>ab.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}())),ab.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=Ty(t);if(1===t){if(!rb(e,"OES_texture_float"))return!1}else if(!rb(e,"EXT_color_buffer_float"))return!1;return ib(e)}(ab.getNumber("WEBGL_VERSION")))),ab.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!ab.getBool("WEBGL_FORCE_F16_TEXTURES")&&ab.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),ab.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=Ty(t);if(1!==t){if(rb(e,"EXT_color_buffer_float"))return ib(e);const t="EXT_color_buffer_half_float";if(rb(e,t)){const n=e.getExtension(t);return function(t,e){const n=zy(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),i}(e,n)}return!1}return!!rb(e,"OES_texture_float")&&!!rb(e,"WEBGL_color_buffer_float")&&ib(e)}(ab.getNumber("WEBGL_VERSION")))),ab.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=ab.getNumber("WEBGL_VERSION"))&&null!=Ty(t).fenceSync;var t})),ab.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>ab.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),ab.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));class ob{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class lb{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class ub{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function cb(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function hb(t,e){return 1===e?[t]:cb(t,e)}function db(){let t,e,n,r,s,i,a,o,l,u;return 2===p().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function pb(t,e,n="index"){const r=Fe(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function fb(t){const e=Fe(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const gb="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:mb}=r;function yb(t,e,n,r){const s=[];t.forEach((t=>{const e=ge(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))}));const i=s.join("\n"),a=t.map((t=>function(t,e,n=!1){let r="";r+=n?xb(t):bb(t);const s=t.shapeInfo.logicalShape,i=e.logicalShape;return s.length<=i.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=mb(t.shapeInfo.logicalShape,e.logicalShape),l=Sb(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+u]}`)).join(", ");let p="return outputValue;";const f=1===ge(t.shapeInfo.logicalShape),g=1===ge(e.logicalShape);if(1!==i||f||g){if(f&&!g)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=i-2,e=i-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&me(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=Sb(l),c=mb(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${p[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(t,e)),r}(t,e,r))).join("\n"),o=e.texShape,l=db(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${wb}\n    ${vb}\n    ${Cb}\n  `}(l);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(me(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let i=s,a="",o="b, r, c";for(let e=2;e<t.length-1;e++)i*=t[t.length-e-1],a=`\n      int b${e} = index / ${i};\n      index -= b${e} * ${i};\n    `+a,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return me(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=pb(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=pb(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=pb(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=pb(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}var n}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=$b),[d,u,h,i,c,a,n].join("\n")}function bb(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[i,a]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${a}, ${kb(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Ib(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const a=kb(e);return 1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&me(e,s)){const t=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:a}=$e(e),o=i;if(o.length<e.length){const e=["row","col"];return`\n      ${bb(Eb(t,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${Rb(e,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${Ib(t)}\n      }\n    `;const l=s[0],u=s[1],c=kb(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],i=e[2],{newShape:a,keptDims:o}=$e(e),l=a;if(l.length<e.length){const e=["row","col","depth"];return`\n        ${bb(Eb(t,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Rb(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${Ib(t)}\n      }\n    `;const u=t.shapeInfo.texShape,c=u[0],h=u[1],d=t.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===i&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${kb(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],i=e[2]*s,a=e[1]*i,{newShape:o,keptDims:l}=$e(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${bb(Eb(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Rb(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${i}, ${s}, 1)));\n        ${Ib(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],d=c[1];if(d===a&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${kb(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=$e(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${bb(Eb(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Rb(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${Ib(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${kb(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=$e(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${bb(Eb(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Rb(e,i)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${Ib(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${kb(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function xb(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${db().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=db();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=s[0],a=s[1],o=db();if(null!=s&&me(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${xb(Eb(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Rb(s,n)});\n        }\n      `}const a=i[0],o=i[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${a}, ${o}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${db().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=a[0],l=a[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],d=`b${t} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${db().texture2D}(${r}, uv);\n    }\n  `}(t)}}const wb="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vb="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Cb="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$b="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function kb(t){return`offset${t}`}function Ib(t){const e=t.name,n=ge(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function Sb(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Eb(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Rb(t,e){return e.map((e=>t[e])).join(", ")}class Ab{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,he(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=Sb(o),u=hb("coords",o);let c,h;if(1===i){h=o+1;const t=Sb(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((t=>"int "+t)),g=hb("sourceLocR",h-1).concat("inIdx.r"),m=hb("sourceLocG",h-1).concat("inIdx.g"),y=hb("sourceLocB",h-1).concat("inIdx.b"),b=hb("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,C=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${C}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class Nb{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Tb{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,g=d-1-t.padInfo.left,m=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Db{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Js(t,e),Js(t,n);let a="0.0";null!=r&&(Js(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Js(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Fb{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Js(t,e),Js(t,n);let a="vec4(0.0)";null!=r&&(Js(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Js(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}class _b{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Js(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Ob="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",Lb="return a + b;",Mb="return a - b;",zb="return a * b;",Bb=Ob+"\n  return max(a, b);\n",Pb=Ob+"\n  return min(a, b);\n",Wb=Ob+"\n  return atan(a, b);\n",Ub="return (a < 0.) ? b * a : a;";class Vb{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Js(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Gb="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n",Hb="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+Gb+"\n  return result;\n",jb="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",qb="\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Gb+"\n  return result;\n",Kb="\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Gb+"\n  return result;\n",Xb="\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Gb+"\n  return result;\n",Yb="\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+Gb+"\n  return result;\n";class Jb{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Js(e,n);const s=this.outputShape.length;let i="";if(r)if(0===s||1===ge(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${Sb(s)} coords = getOutputCoords();\n        `,1===s)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=hb("coords",s);i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}class Zb{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Qb{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class tx{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class ex{constructor(t){this.outputShape=[],this.outputShape=_s(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class nx{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=_s(t,e);const n=this.outputShape,r=n.length,s=Sb(r),i=hb("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${rx(a,l,e)}),\n            vec2(${rx(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${rx(a,l,p)}),\n          vec2(${rx(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function rx(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}class sx{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ix{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ax{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ox{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lx{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ux{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cx{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,i=t.padInfo.left,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,g=f?1:2,m=f?2:3,y=f?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${m}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${u};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class hx{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dx{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,a=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let g="",m="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,m="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${m}\n        setOutput(result);\n      }\n    `}}class px{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,a=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=p;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<p;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<f;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*c};\n          xC = xCCorner + ${n*h};\n        `,1===u){if(n<p&&(g+=o%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<p)){const e=o%2==0?ce(h):h;h%2==0&&o%2==1||h%2!=0&&o%2!=1?(g+=`\n                  xCOffset = xC + ${o%2} + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<p&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,o%2==1?(g+=`\n                xCOffset = xC + 1 - ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<p&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${u};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<p&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<p&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<p&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<p;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let m="",y="";n&&(m=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class fx{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[g,m,y]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class gx{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${mx(r,"coords")})`,i=t[t.length-1];let a="",o="";e?(a=n?"end != "+(i-1):"end != 0",o=n?"end + 1":"end - 1"):(a=n?`end + pow2 < ${i}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${Sb(r)} coords = getOutputCoords();\n        int end = ${yx(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${a}) {\n          int idx = ${o};\n          ${yx(r,"coords")} = idx;\n          val += getX(${mx(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function mx(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function yx(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class bx{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Dy.DENSE;const e=Ly(t),n=db();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${pb(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class xx{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Dy.DENSE;const e=Ly(t),n=db();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${pb(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class wx{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class vx{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class Cx{constructor(t){this.variableNames=["A"],this.outTexUsage=Fy.DOWNLOAD;const e=db();this.outputShape=t,this.userCode=`\n      ${gb}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class $x{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Fy.DOWNLOAD;const e=db();this.outputShape=t,this.userCode=`\n      ${gb}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class kx{constructor(t,e,n=!1){this.variableNames=["A"];const r=db(),[s,i]=e;this.outputShape=t;let a="result";n&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${fb(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class Ix{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=db(),[s,i]=e;this.outputShape=t;let a="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${fb(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${a}\n\n        ${r.output} = ${o};\n      }\n    `}}class Sx{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${t}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}class Ex{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class Rx{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=Sb(this.rank),i=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let n=0;n<t.length;n++)n===e?s.push(`int(getIndices(${r[n]}))`):s.push(`${r[n]}`);return s.join()}(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}class Ax{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=Sb(e.length),s=Sb(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function Nx(t,e,n,r,s,i){!function(t,e){const n=p().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return Xy(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return By(t,(()=>t.bindTexture(o,a))),By(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),By(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),By(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),By(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),By(t,(()=>t.texImage2D(o,0,r,e,n,0,s,i,null))),By(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),a}function Tx(t){return t.internalFormatFloat}function Dx(t){return t.internalFormatHalfFloat}function Fx(t){return t.downloadTextureFormat}function _x(t){return t.internalFormatPackedFloat}function Ox(t){return t.internalFormatPackedHalfFloat}class Lx{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=p().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){Ay[t]=e}(e,t)):this.gl=Ty(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===p().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=Wy(this.gl,t),rb(this.gl,e))this.textureHalfFloatExtension=Wy(this.gl,e);else if(p().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),rb(this.gl,r))this.colorBufferHalfFloatExtension=Wy(this.gl,r);else if(p().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",rb(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!rb(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=Xy(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return By(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),By(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=Xy(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return By(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),By(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return Xy(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=zy(this.gl,this.textureHalfFloatExtension)}get debug(){return p().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;By(t,(()=>t.finish())),By(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),By(t,(()=>t.deleteFramebuffer(this.framebuffer))),By(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),By(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),By(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=Oy(e,n);return Nx(t,s,i,Tx(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=Oy(e,n);return Nx(t,s,i,Dx(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=Oy(e,n);return Nx(t,s,i,Fx(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){By(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?By(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):By(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),By(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,i){let a,o,l;By(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*r*4),o=t.FLOAT,l=i.internalFormatPackedFloat),a.set(s),By(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,o,a))),By(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=My(e,n);return Nx(t,s,i,Ox(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=My(e,n);return Nx(t,s,i,_x(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(qy(this.gl,this.framebuffer),this.outputTexture=null),By(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,i]=Oy(e,n),a=new Uint8Array(e*n*4);return By(t,(()=>t.readPixels(0,0,s,i,r.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,i){return function(t,e,n,r,s,i,a,o){const l=t,u=new Float32Array(function(t,e){const[n,r]=My(t,e);return n*r*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();By(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const i=16*e*n;return By(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),By(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),By(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(p().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return By(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=Xy(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(By(t,(()=>t.shaderSource(n,e))),By(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=Uy.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,a=s.map(((t,e)=>we((e+1).toString(),i)+t));let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${we(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),r=function(t){const e=db();return function(t,e){const n=Xy(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(By(t,(()=>t.shaderSource(n,e))),By(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),s=function(t){return Xy(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return By(e,(()=>e.attachShader(s,r))),By(e,(()=>e.attachShader(s,n))),function(t,e){if(By(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&Vy(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n){return By(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),Gy(t,e,"clipSpacePos",n,3,20,0)&&Gy(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&By(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Vy(this.gl,this.program),By(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return Xy(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),By(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),Hy(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=My(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Vy(this.gl,this.program),Ky(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),By(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),By(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Wy(this.gl,2===p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await ve((()=>this.disposed||this.isQueryAvailable(t,p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||ve((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),jy(this.gl,t,this.framebuffer),this.debug&&Ky(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(jy(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ky(this.gl)):qy(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;jy(r,t,this.framebuffer),this.debug&&Ky(r),this.outputTexture=t,By(r,(()=>r.viewport(0,0,e,n))),By(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),By(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function Mx(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!me(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const a=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!me(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}class zx{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:i,strideHeight:a,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,g=db(),m="channelsLast"===h,y=m?0:1,b=m?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${a} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${i}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${m}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${g.output} = result;\n      }\n    `}}class Bx{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Px{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class Wx{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class Ux{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=s-1-t.padInfo.top,o=i-1-t.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Vx{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Gx{constructor(t,e,n=!1,r=!1,s=!1,i=null,a=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const o=n?t[1]:t[2],l=Math.ceil(o/2),u=n?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let p="",f="";i&&(p=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,f="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${p}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          vec4 a = getMatrixA(rc.x, ${u});\n          vec4 b = getMatrixB(rc.x, ${c});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${d[0]});\n          result += (${h[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${f}\n\n        setOutput(result);\n      }\n    `}}class Hx{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class jx{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class qx{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=hb("rc",e),r=Sb(e),s=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),i=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),a=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let i=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)i=`${e[e.length-1-n]},`+i;n.push(i)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}}class Kx{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=Sb(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Xx{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=Sb(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=hb("rc",r),l=hb("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class Yx{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,m=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(i/4),w=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Jx{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,g=t.padInfo.front,m=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(i/4),C=i%4,$=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${$}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${2===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${3===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${$}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}class Zx{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}class Qx{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${pb(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${fb(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class tw{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,i,a]=t.shape,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class ew{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,i,a,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?i-1:i,r&&n>1?a-1:a],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class nw{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,a,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?i-1:i,r&&n>1?a-1:a],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]},\n          ${l[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${a}.0,\n                                     ${a}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class rw{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,i,a]=t.shape,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class sw{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,i,a,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?i-1:i,r&&n>1?a-1:a],u=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class iw{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=Sb(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class aw{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=hb("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=Sb(n);function o(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class ow{constructor(t,e,n,r,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=Sb(s.length),l=Sb(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class lw{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class uw{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<e.length;r++)a.push(`${n[r]}`),r<t&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=Sb(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}class cw{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Sb(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return hw.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${hw[e]} = start[${e}] + coords.${hw[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const hw=["x","y","z","w","u","v"];class dw{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=Sb(this.rank),n=hb("coords",this.rank),r=hb("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class pw{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=Sb(n.length),i=Sb(n.length);let a="";if(1===r)a="coords * strides + begin";else{let t=0;a=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class fw{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=mw(e,n),s=yw(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=gw(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let a;return r===_y.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===_y.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===_y.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===_y.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===_y.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=mw(n,r),i=yw(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=gw(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=p().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function gw(t,e,n,r,s){const i=function(t,e){switch(t){case _y.PACKED_2X2_FLOAT32:return _x(e);case _y.PACKED_2X2_FLOAT16:return Ox(e);case _y.UNPACKED_FLOAT32:return Tx(e);case _y.UNPACKED_FLOAT16:return Dx(e);case _y.PACKED_4X1_UNSIGNED_BYTE:return Fx(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let a;if(s){const[e,n]=My(t[0],t[1]);a=e*n}else{const[e,n]=Oy(t[0],t[1]);a=e*n}const o=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,i);return a*o}function mw(t,e){if(t===Fy.UPLOAD)return _y.PACKED_2X2_FLOAT32;if(t===Fy.RENDER||null==t)return function(t){return p().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?_y.PACKED_2X2_FLOAT32:_y.UNPACKED_FLOAT32:t?_y.PACKED_2X2_FLOAT16:_y.UNPACKED_FLOAT16}(e);if(t===Fy.DOWNLOAD||t===Fy.PIXELS)return _y.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function yw(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class bw{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=Sb(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class xw{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const ww="if (isnan(x)) return x;",vw="return abs(x);",Cw=ww+"\n  return (x < 0.0) ? 0.0 : x;\n",$w=ww+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",kw="return (x >= 0.0) ? x : (exp(x) - 1.0);",Iw=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${To};\n  float scale = ${Do};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,Sw="return -x;",Ew="return ceil(x);",Rw="return floor(x);",Aw="return exp(x);",Nw="return exp(x) - 1.0;",Tw=ww+"\n  return sin(x);\n",Dw=ww+"\n  return cos(x);\n",Fw=ww+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",_w=ww+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",Ow=ww+"\n  return atan(x);\n",Lw=ww+"return log(x + sqrt(x * x + 1.0));",Mw=ww+"\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));",zw=ww+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;",Bw=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Fo};\n  float a1 = ${_o};\n  float a2 = ${Oo};\n  float a3 = ${Lo};\n  float a4 = ${Mo};\n  float a5 = ${zo};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Pw="return x;",Ww="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Uw="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Vw="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class Gw{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Hw{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=hb("rc",e),r=Sb(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const{segment_util:jw}=r,qw=Zo,Kw=Qo,Xw=tl,Yw=el,Jw={};function Zw(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?Ww:Cw;if("elu"===t)return e?Vw:kw;if("relu6"===t)return e?Uw:$w;if("prelu"===t)return e?jb:Ub;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class Qw extends rl{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!p().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Ty(p().getNumber("WEBGL_VERSION"));this.binaryCache=((e=p().getNumber("WEBGL_VERSION"))in Jw||(Jw[e]={}),Jw[e]),this.gpgpu=new Lx(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new fw(this.gpgpu),this.numMBBeforeWarning=null==p().global.screen?1024:p().global.screen.height*p().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new nl(this,Ur())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((p().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||p().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:Fy.UPLOAD}),r}move(t,e,n,r){if(p().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:Fy.UPLOAD})}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensors:s,slice:i,shape:a,isPacked:o}=e;if(null!=i){let e;e=o?new Gw(a,Pw):new xw(a,Pw);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Pe()),c="complex64"===r?Wo(s.real.dataSync(),s.imag.dataSync()):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=Pe()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensors:a,isPacked:o}=e;if(null!=s){let e;e=o?new Gw(r,Pw):new xw(r,Pw);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!p().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===p().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&p().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...Ly(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([a.real.data(),a.imag.data()]);u=Wo(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=ge(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=l&&this.disposeData(l.dataId);const h=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!Py(n)){if(p().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=ge(e);if(p().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...Ly(e)).subarray(0,s);return this.disposeData(n.dataId),i}const i=p().getBool("WEBGL_PACK")&&!0===r,a=i?Zy(e):e,o=i?new $x(a):new Cx(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeData(l.dataId),c}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=fe(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=fe(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Pe(),endMs:null}}endTimer(t){return p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Pe(),t)}async getQueryTime(t){if(p().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;this.releaseGPUData(t);const{complexTensors:e}=this.texData.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return p().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Ur().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||p().getBool("IS_TEST")||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&ge(t.shape)<e))}getGPGPUContext(){return this.gpgpu}complex(t,e){const n=this.makeOutput(t.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:Ur().keep(t.clone()),imag:Ur().keep(e.clone())},n}real(t){return this.texData.get(t.dataId).complexTensors.real.clone()}imag(t){return this.texData.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);if(0===ge(n))return Fn([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),s=Or(t.shape,e,n);if(r||!s){const r=p().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dw(n):new cw(n),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),s=this.makeOutput(n,t.dtype),i=this.texData.get(s.dataId);Object.assign(i,r),i.shape=n,i.dtype=t.dtype;let a=Lr(e,t.strides);r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||t.dataId};const o=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,o+1),s}stridedSlice(t,e,n,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,r);const s=Ir(e,n,r);if(s.some((t=>0===t)))return Fn([],s);const i=new pw(e,r,s);return this.compileAndRun(i,[t])}reverse(t,e){const n=p().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aw(t.shape,e):new iw(t.shape,e);return this.compileAndRun(n,[t])}concat(t,e){if("complex64"===t[0].dtype){const n=t.map((t=>Oi(t))),r=t.map((t=>di(t)));return Tn(this.concat(n,e),this.concat(r,e))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>p().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const n=Math.floor(t.length/2),r=this.concat(t.slice(0,n),e),s=this.concat(t.slice(n),e);return this.concat([r,s],e)}if(p().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){const n=new nx(t.map((t=>t.shape)),e);return this.compileAndRun(n,t)}const n=_s(t.map((t=>t.shape)),e),r=t.map((t=>t.as2D(-1,ge(t.shape.slice(e))))),s=new ex(r.map((t=>t.shape)));return this.compileAndRun(s,r).reshape(n)}neg(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(p().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Sw,t.dtype);const e=new xw(t.shape,Sw);return this.compileAndRun(e,[t])}batchMatMul(t,e,n,r){const s=n?t.shape[2]:t.shape[1],i=r?e.shape[1]:e.shape[2],a=n?t.shape[1]:t.shape[2],[o,,]=t.shape;if((1===s||1===i)&&a>1e3){n&&(t=ls(t,[0,2,1])),r&&(e=ls(e,[0,2,1]));const s=1===i?t:t.as3D(o,a,1),l=1===i?2:1,u=1===i?e.as3D(o,1,a):e;return this.multiply(s,u).sum(l,!0)}const l=dn(t.dtype,e.dtype),u=new Gx(t.shape,[o,s,i],n,r);return this.compileAndRun(u,[t,e],l)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:a}){const o=n?t.shape[2]:t.shape[1],l=r?e.shape[1]:e.shape[2],[u,,]=t.shape,c=dn(t.dtype,e.dtype),h=null!=s,d=null!=a,p=i?Zw(i,!0):null,f=new Gx(t.shape,[u,o,l],n,r,h,p,d),g=[t,e];return s&&g.push(s),a&&g.push(a),this.compileAndRun(f,g,c)}multiply(t,e){if("complex64"===t.dtype){const n=this.texData.get(t.dataId),r=this.texData.get(e.dataId),s=new _b("return areal * breal - aimag * bimag;",t.shape,e.shape),i=new _b("return areal * bimag + aimag * breal;",t.shape,e.shape),a=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag),this.makeComplexComponentTensorInfo(e,r.complexTensors.real),this.makeComplexComponentTensorInfo(e,r.complexTensors.imag)],o=this.compileAndRun(s,a),l=this.compileAndRun(i,a),u=this.complex(o,l);return o.dispose(),l.dispose(),u}if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.multiply(t,e);if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,zb,t.dtype);const n=new Vb(zb,t.shape,e.shape);return this.compileAndRun(n,[t,e],t.dtype)}batchNorm(t,e,n,r,s,i){const a=[t,e,n];let o=null;null!=r&&(o=r.shape,a.push(r));let l=null;if(null!=s&&(l=s.shape,a.push(s)),p().getBool("WEBGL_PACK_NORMALIZATION")){const r=new Fb(t.shape,e.shape,n.shape,o,l,i);return this.compileAndRun(r,a)}const u=new Db(t.shape,e.shape,n.shape,o,l,i);return this.compileAndRun(u,a)}localResponseNormalization4D(t,e,n,r,s){const i=p().getBool("WEBGL_PACK_NORMALIZATION")?new Wx(t.shape,e,n,r,s):new Bx(t.shape,e,n,r,s);return this.compileAndRun(i,[t])}LRNGrad(t,e,n,r,s,i,a){const o=new Px(e.shape,r,s,i,a);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>Ue(t))),r=dr(t.shape,t.dtype,n);return Kw(r,e)}const n=new bw(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=p().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xx(t.shape,e,n):new Kx(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.gather(t,e,n);const r=new Rx(t.shape,e.size,n);return this.compileAndRun(r,[t,e])}batchToSpaceND(t,e,n){he(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=Co(t.shape,e,r),i=$o(s.length,e.length),a=ko(t.shape,e,r),o=Io(n,e.length),l=So(a,n,e.length);return ls(t.reshape(s),i).reshape(a).slice(o,l)}spaceToBatchND(t,e,n){he(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=[[0,0]];s.push(...n);for(let n=1+e.length;n<t.shape.length;++n)s.push([0,0]);const i=t.pad(s),a=Co(i.shape,e,r,!1),o=$o(a.length,e.length,!1),l=ko(i.shape,e,r,!1),u=ls(i.reshape(a),o);return os(u,l)}reduce(t,e,n){const r=t.shape[0],s=t.shape[1],i=ii(s),a=Math.ceil(s/i),o=new Zx({windowSize:i,inSize:s,batchSize:r,outSize:a},e),l=this.compileAndRun(o,[t],n);return 1===l.shape[1]?l:this.reduce(l,e,n)}argReduce(t,e,n=null){let r=t.shape[0],s=t.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const i=ii(s),a={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},o=new ub(a,e,null==n),l=[t];null!=n&&l.push(n);const u=this.compileAndRun(o,l,"int32");return 1===u.shape[1]?u:this.argReduce(t,e,u)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,s=ii(r[r.length-1]),i=new Ab(r,s,e,null==n),a=null==n?[t]:[t,n],o=this.compileAndRun(i,a,"int32");return o.rank===t.rank?this.argReducePacked(t,e,o):o}sum(t,e){rs("sum",e,t.rank);const[n,r]=es(t.shape,e),s=ge(r),i=t.as2D(-1,s),a=pn(t.dtype);return this.reduce(i,"sum",a).reshape(n)}prod(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,e);const[n,r]=es(t.shape,e),s=ge(r),i=t.as2D(-1,s),a=pn(t.dtype);return this.reduce(i,"prod",a).reshape(n)}unsortedSegmentSum(t,e,n){let r=0;const s=ss([r],t.rank);let i=t;null!=s&&(i=ls(t,s),r=as(1,t.rank)[0]);const a=jw.computeOutShape(i.shape,r,n),o=ge([i.shape[r]]),l=i.as2D(-1,o),u=pn(t.dtype);let c=this.segOpCompute(l,"unsortedSegmentSum",e,u,n).reshape(a);return null!=s&&(c=ls(c,is(s))),c}segOpCompute(t,e,n,r,s){const i=t.shape[0],a=t.shape[1],o=jw.segOpComputeOptimalWindowSize(a,s),l=new lw({windowSize:o,inSize:a,batchSize:i,numSegments:s},e),u=this.compileAndRun(l,[t,n],r);return u.shape[1]===s?u:(n=ji(0,s).tile([a/o]),this.segOpCompute(u,e,n,r,s))}argMinMaxReduce(t,e,n){const r=[e];if(rs("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!p().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,s]=es(t.shape,r),i=ge(s),a=t.as2D(-1,i);return this.argReduce(a,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=t.shape[e];let i=t;for(let e=0;e<=Math.ceil(Math.log2(s))-1;e++){const n=new gx(t.shape,!1,r),s=n.getCustomSetupFunc(e),a=i;i=this.compileAndRun(n,[i],i.dtype,s),a.dispose()}if(n){const e=new gx(t.shape,n,r),s=i;i=this.compileAndRun(e,[i]),s.dispose()}return i}equal(t,e){if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new Vb("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}notEqual(t,e){if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(notEqual(a, b));\n","bool");const n=new Vb("return float(a != b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.less(t,e);if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const n=new Vb("return float(a < b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}lessEqual(t,e){if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new Vb("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.greater(t,e);if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const n=new Vb("return float(a > b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greaterEqual(t,e){if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new Vb("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new xw(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new Vb("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new Vb("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new uw(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],dn(e.dtype,n.dtype))}where(t){Bo("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Yw(t.shape,e)}topk(t,e,n){const r=t.dataSync();return Xw(r,t.shape,t.dtype,e,n)}min(t,e){rs("min",e,t.rank);const[n,r]=es(t.shape,e),s=ge(r),i=t.as2D(-1,s);return this.reduce(i,"min",i.dtype).reshape(n)}minimum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.minimum(t,e);const n=p().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jb(Xb,t.shape,e.shape):new Vb(Pb,t.shape,e.shape);return this.compileAndRun(n,[t,e])}mod(t,e){const n=p().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jb(Yb,t.shape,e.shape):new Vb("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.maximum(t,e);const n=p().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jb(Kb,t.shape,e.shape):new Vb(Bb,t.shape,e.shape);return this.compileAndRun(n,[t,e])}all(t,e){rs("all",e,t.rank);const[n,r]=es(t.shape,e),s=ge(r),i=t.as2D(-1,s);return this.reduce(i,"all",i.dtype).reshape(n)}any(t,e){rs("any",e,t.rank);const[n,r]=es(t.shape,e),s=ge(r),i=t.as2D(-1,s);return this.reduce(i,"any",i.dtype).reshape(n)}floorDiv(t,e){const n="int32";if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new Vb("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}add(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,Lb);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.add(t,e);const n=dn(t.dtype,e.dtype);if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Lb,n);const r=new Vb(Lb,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new Gw(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const i=new Jb(n,t.shape,e.shape,s);return this.compileAndRun(i,[t,e],r)}complexSeparableBinaryOp(t,e,n){const r=this.texData.get(t.dataId),s=this.texData.get(e.dataId),[i,a]=[[r.complexTensors.real,s.complexTensors.real],[r.complexTensors.imag,s.complexTensors.imag]].map((r=>{const[s,i]=r,a=this.makeComplexComponentTensorInfo(t,s),o=this.makeComplexComponentTensorInfo(e,i),l=new Vb(n,t.shape,e.shape);return this.compileAndRun(l,[a,o],dn(s.dtype,i.dtype))})),o=this.complex(i,a);return i.dispose(),a.dispose(),o}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>p().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>dn(t,e))),n=t.map((t=>t.shape)),r=p().getBool("WEBGL_PACK")?new lb(t[0].shape,n):new ob(t[0].shape,n);return this.compileAndRun(r,t,e)}subtract(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,Mb);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.subtract(t,e);const n=dn(t.dtype,e.dtype);if(p().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Mb,t.dtype);const r=new Vb(Mb,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}pow(t,e){const n=p().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jb(Hb,t.shape,e.shape):new Vb("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=dn(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(p().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Ew,t.dtype);const e=new xw(t.shape,Ew);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(p().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Rw,t.dtype);const e=new xw(t.shape,Rw);return this.compileAndRun(e,[t])}sign(t){const e=new xw(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new xw(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new xw(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new xw(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new xw(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(p().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Aw,t.dtype);const e=new xw(t.shape,Aw);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(p().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Nw,t.dtype);const e=new xw(t.shape,Nw);return this.compileAndRun(e,[t])}softmax(t,e){const n=Ce([e],t.shape),r=bi(t,n),s=ns(r.shape,n),i=this.subtract(t,r.reshape(s)),a=this.exp(i),o=this.sum(a,n).reshape(s);return qs(a,o)}log(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(p().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new xw(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new xw(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new xw(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);const e=new xw(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new xw(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=p().getBool("WEBGL_PACK")?new Gw(t.shape,Ww):new xw(t.shape,Cw),this.compileAndRun(e,[t])}relu6(t){let e;return e=p().getBool("WEBGL_PACK")?new Gw(t.shape,Uw):new xw(t.shape,$w),this.compileAndRun(e,[t])}prelu(t,e){const n=p().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jb(jb,t.shape,e.shape):new Vb(Ub,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(p().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Vw,t.dtype);const e=new xw(t.shape,kw);return this.compileAndRun(e,[t])}eluDer(t,e){const n=p().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jb("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new Vb("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new xw(t.shape,Iw);return this.compileAndRun(e,[t])}int(t){const e=new xw(t.shape,"return float(int(x));");return this.compileAndRun(e,[t],"int32")}clip(t,e,n){let r;r=p().getBool("WEBGL_PACK_CLIP")?new Qb(t.shape):new Zb(t.shape);const s=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(p().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,vw,t.dtype);const e=new xw(t.shape,vw);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new tx(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensors.real),this.makeComplexComponentTensorInfo(t,e.complexTensors.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new xw(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new xw(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}sin(t){const e=new xw(t.shape,Tw);return this.compileAndRun(e,[t])}cos(t){const e=new xw(t.shape,Dw);return this.compileAndRun(e,[t])}tan(t){const e=new xw(t.shape,"return tan(x);");return this.compileAndRun(e,[t])}asin(t){const e=new xw(t.shape,Fw);return this.compileAndRun(e,[t])}acos(t){const e=new xw(t.shape,_w);return this.compileAndRun(e,[t])}atan(t){const e=new xw(t.shape,Ow);return this.compileAndRun(e,[t])}atan2(t,e){const n=p().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jb(qb,t.shape,e.shape):new Vb(Wb,t.shape,e.shape);return this.compileAndRun(n,[t,e])}sinh(t){const e=new xw(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new xw(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new xw(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new xw(t.shape,Lw);return this.compileAndRun(e,[t])}acosh(t){const e=new xw(t.shape,Mw);return this.compileAndRun(e,[t])}atanh(t){const e=new xw(t.shape,zw);return this.compileAndRun(e,[t])}erf(t){const e=new xw(t.shape,Bw);return this.compileAndRun(e,[t])}step(t,e){const n=new xw(t.shape,function(t=0){return ww+`\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,s,i){const a=t.shape,o=this.texData.get(t.dataId),l=n.inChannels,u=a[0]*a[1]*a[2],c=n.outChannels,h="channelsLast"===n.dataFormat,d=(1===u||1===c)&&l>1e3,f=a[2]%2!=0&&!!o.isPacked;if(d||!p().getBool("WEBGL_LAZILY_UNPACK")||!p().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const o=h?a[0]*a[1]*a[2]:a[0]*a[2]*a[3],l=this.reshape(t,[1,o,n.inChannels]),u=this.reshape(e,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:l,b:u,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:i}),n.outShape)}const g=h?a[0]*a[1]*(a[2]+1):a[0]*a[2]*(a[3]+1),m={dataId:t.dataId,shape:[1,g,n.inChannels],dtype:t.dtype},y=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,he(tb(o.shape,m.shape),(()=>`packed reshape ${o.shape} to ${m.shape} isn't free`));const b=this.reshape(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:m,b,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:i}),w=this.texData.get(x.dataId);return he(w.isPacked,(()=>"batchMatMul result is expected to be packed")),o.shape=y,w.shape=n.outShape,Ur().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,r,s,i){const{filterWidth:a,filterHeight:o,inChannels:l,outWidth:u,outHeight:c,dataFormat:h}=n,d="channelsLast"===h,p=a*o*l,f=c*u,g=[p,f],m=t.squeeze([0]),y=e.reshape([1,p,-1]),b=new zx(g,m.shape,n),x=this.compileAndRun(b,[m]).reshape([1,g[0],g[1]]),w=null!=r,v=null!=i,C=s?Zw(s,!0):null,$=new Gx(x.shape,[1,f,n.outChannels],!0,!1,w,C,v),k=[x,y];r&&k.push(r),v&&k.push(i);const I=this.compileAndRun($,k);return d?I.reshape([1,c,u,n.outChannels]):I.reshape([1,n.outChannels,c,u])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,s,i);if(p().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,s,i);const a=null!=r,o=null!=i,l=s?Zw(s,!1):null,u=new cx(n,a,l,o),c=[t,e];return r&&c.push(r),i&&c.push(i),this.compileAndRun(u,c)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(p().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new cx(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new ix(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new sx(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){const a=p().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=s?Zw(s,a):null,l=[t,e],u=null!=r,c=null!=i;let h;return u&&l.push(r),c&&l.push(i),a?(h=new px(n,u,o,c),this.compileAndRun(h,l)):(h=new dx(n,u,o,c),this.compileAndRun(h,l))}depthwiseConv2D(t,e,n){let r;return p().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new px(n),this.compileAndRun(r,[t,e])):(r=new dx(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new ux(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new lx(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new hx(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new ox(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new ax(n);return this.compileAndRun(r,[t,e])}maxPool(t,e){const n=new Yx(e,"max",!1);return this.compileAndRun(n,[t])}avgPool(t,e){const n=new Yx(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}maxPoolBackprop(t,e,n,r){const s=new Yx(r,"max",!0),i=this.compileAndRun(s,[e]),a=new Ux(r),o=this.compileAndRun(a,[t,i],e.dtype);return i.dispose(),o}avgPoolBackprop(t,e,n){const r=new Nb(n);return this.compileAndRun(r,[t],e.dtype)}cast(t,e){return Xo(t,e,this)}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const i=new Array(t.rank).fill(0),a=t.shape.slice();a[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)i[e]=n,o[n]=this.slice(t,i,a).reshape(r);return o}avgPool3d(t,e){const n=new Jx(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new Tb(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new Jx(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=new Jx(r,"max",!0),i=this.compileAndRun(s,[e]),a=new Vx(r),o=this.compileAndRun(a,[t,i],e.dtype);return i.dispose(),o}reshape(t,e){const n=this.texData.get(t.dataId);if(n.isPacked&&!tb(t.shape,e)&&(null===n.texture||!tb(n.shape,e))){const n=this.packedReshape(t,e);return Ur().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}return Yo(t,e)}resizeBilinear(t,e,n,r){const s=p().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new nw(t.shape,e,n,r):new ew(t.shape,e,n,r);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new tw(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new sw(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new rw(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const s=e?t:ra(t),i=s.shape[0],a=s.shape[1],o=new Hx(i,a,n),l=o.getCustomSetupFunc(r);return this.compileAndRun(o,[s],"int32",l)}oneHot(t,e,n,r){const s=new jx(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new vx(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,i){const a=new fx(t.shape,e.shape,r,s,i);return this.compileAndRun(a,[t,e,n],"float32")}depthToSpace(t,e,n){he(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const r=t.shape[0],s="NHWC"===n?t.shape[1]:t.shape[2],i="NHWC"===n?t.shape[2]:t.shape[3],a="NHWC"===n?t.shape[3]:t.shape[1],o=s*e,l=i*e,u=a/(e*e),c=new wx("NHWC"===n?[r,o,l,u]:[r,u,o,l],e,n);return this.compileAndRun(c,[t])}split(t,e,n){return qw(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:i,strides:a,outputSize:o}=No(0,t,n),l=[o/i,i],u=t.reshape([s,r]),c=e.reshape([s,i]);if(0===o)return Yo(Fn([]),n);const h=Xr(0),d=new ow(s,r,u.rank,c.rank,a,l);return this.compileAndRun(d,[c,u,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:i,strides:a,outputSize:o}=No(0,t,n),l=new ow(i,s,t.rank,e.rank,a,[o,1],!1);return this.compileAndRun(l,[e,t,r]).reshape(n)}fft(t){return this.fftImpl(t,!1)}ifft(t){return this.fftImpl(t,!0)}fftImpl(t,e){const n=this.texData.get(t.dataId),r=new Sx("return real * expR - imag * expI;",t.shape,e),s=new Sx("return real * expI + imag * expR;",t.shape,e),i=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag)],a=this.compileAndRun(r,i),o=this.compileAndRun(s,i),l=this.complex(a,o).as2D(t.shape[0],t.shape[1]);return a.dispose(),o.dispose(),l}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,i,a,o]=Eo(t,e),l=e.reshape([i,r]),u=t.reshape([t.size/a,a]),c=new Ax(r,o,[i,a]);return this.compileAndRun(c,[u,l]).reshape(s)}fill(t,e,n){if("string"===(n=n||Ne(e))){const r=Ie(n,ge(t));return r.fill(e),Ur().makeTensor(r,t,n,this)}{const r=new Ex(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return Jo(t,e,n)}makeTensorInfo(t,e){const n=this.write(null,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e){const{dataId:n}=this.makeTensorInfo(t,e);return Ur().makeTensorFromDataId(n,t,e,this)}unpackTensor(t){const e=new Hw(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new qx(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Yy(t.shape),...Jy(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[Yy(e),...Jy(e)],i=new Qx(s,n),a=this.runWebGLProgram(i,[r],t.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,i=Zy(r);let a;return a=n?new xx(i):new bx(i),{dtype:s,shape:r,dataId:this.runWebGLProgram(a,[{shape:i,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const i=this.makeTensorInfo(t.outputShape,n),a=this.texData.get(i.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===Dy.DENSE){const e=Ly(t.outputShape);a.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(a.usage=t.outTexUsage),0===ge(i.shape))return a.values=ke(i.dtype,0),i;const o=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&ge(e.shape)<=p().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!tb(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const u={shape:i.shape,texData:a,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const s=t.userCode;let i=t.constructor.name;return i+="_"+r+"_"+s,i}(t,l,u),h=this.getAndSaveBinary(c,(()=>function(t,e,n,r){const s=e.userCode,i=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),a=i.map((t=>t.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=yb(i,o,s,e.packedInputs),u=t.createProgram(l);let c=null;const h=t.getUniformLocation(u,"NAN",!1);1===p().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;d[r]=t.getUniformLocation(u,r,s),d[`offset${r}`]=t.getUniformLocation(u,`offset${r}`,s)}return{program:e,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,l,u))),d=null!=this.activeTimers;let f;if(d&&(f=this.startTimer()),function(t,e,n,r,s){Mx(e.inShapeInfos,n),Mx([e.outShapeInfo],[r]);const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i,a[0],a[1]):t.setOutputMatrixTexture(i,a[0],a[1]),t.setProgram(e.webGLProgram),1===p().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],a=e.uniformLocations[`offset${s}`];if(null!=i)if(n.isUniform)if(ge(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,r)})),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((t=>this.disposeData(t.dataId))),d&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!p().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===s){const t=this.unpackTensor(i);return this.disposeData(i.dataId),t}return i}compileAndRun(t,e,n,r,s=!1){n=n||e[0].dtype;const i=this.runWebGLProgram(t,e,n,r,s);return Ur().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(p().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Gr((()=>{if(!p().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=p().getBool("DEBUG");p().set("DEBUG",!1);const e=this.abs(Xr(1e-8)).dataSync()[0];if(p().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=e;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=Pe());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=p().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?ce(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=$e(t);t=e.newShape}let r=ge(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Yy(t);let n=2,s=2;return t.length&&([n,s]=Jy(t)),r=e*(n/2)*(s/2),xe(r).map((t=>2*t))}return xe(r)}(n,o),e.texShape=c),null!=s){const t=Zy(n);let i,a=c[1],h=c[0];const d=s instanceof Uint8Array;o?([a,h]=My(c[0],c[1]),i=new Ix(t,[h,a],d)):i=new kx(t,[h,a],d);const p=this.makeTensorInfo([h,a],r);this.texData.get(p.dataId).usage=d?Fy.PIXELS:Fy.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),a,h,s);const f=!0,g=this.runWebGLProgram(i,[p],r,null,f),m=this.texData.get(g.dataId);e.texture=m.texture,e.texShape=m.texShape,e.isPacked=m.isPacked,e.usage=m.usage,this.disposeData(p.dataId),this.texData.delete(g.dataId),e.values=null,l&&(this.uploadWaitMs+=Pe()-u)}else{const t=this.acquireTexture(c,a,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Ee(e)}}$n()&&qr("webgl",(()=>new Qw),2);const tv={kernelName:q,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t;return function(t,e,n){let r=new Vb("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",t.shape,e.shape);return p().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(r=new Jb("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",t.shape,e.shape,!0)),n.runWebGLProgram(r,[t,e],"float32")}(n,r,e)}};class ev{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const nv={kernelName:X,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new ev(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};class rv{constructor(t){this.variableNames=["A"];const e=db(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class sv{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=db(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const iv={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,a="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,i];(o||a)&&(null==av&&(av=document.createElement("canvas").getContext("2d")),av.canvas.width=l,av.canvas.height=u,av.drawImage(s,0,0,l,u),s=av.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=Fy.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const f=p().getBool("WEBGL_PACK")?new sv(h):new rv(h),g=n.runWebGLProgram(f,[d],"int32");return n.disposeData(d.dataId),g}};let av;const{maxImpl:ov,transposeImpl:lv}=s;function uv(t,e,n){const r=n.texData.get(t.dataId);return!r.isPacked||tb(t.shape,e)||null!==r.texture&&tb(r.shape,e)?{dataId:t.dataId,shape:e,dtype:t.dtype}:function(t,e,n){const r=[Yy(t.shape),...Jy(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},i=[Yy(e),...Jy(e)],a=new Qx(i,r),o=n.runWebGLProgram(a,[s],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(t,e,n)}class cv{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=Sb(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class hv{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Sb(this.rank),s=cb("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=s[t];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function dv(t,e,n){const r=p().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hv(t.shape,e):new cv(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const pv={kernelName:ot,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:i}=e,a=n,o=r.shape.length,l=Ce(s,r.shape);let u=l;const c=ss(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const t=a.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=lv(t,r.shape,r.dtype,c,e);p=a.makeTensorInfo(e,r.dtype),a.texData.get(p.dataId).values=n}else p=dv(r,c,a);u=as(u.length,o)}rs("max",u,o);const[f,g]=es(p.shape,u);let m,y=f;if(i&&(y=ns(f,l)),d){const t=a.texData.get(p.dataId).values,e=ov(t,ge(g),y,r.dtype);m=a.makeTensorInfo(y,r.dtype),a.texData.get(m.dataId).values=e}else m=function(t,e,n,r){const s=ge(e),i=uv(t,[ge(t.shape)/s,s],r),a=function(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=ii(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let i=t;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a],c=new Zx({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=i;i=r.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&r.disposeData(h.dataId)}return i}(i,t.dtype,"max",r);return i.dataId!==t.dataId&&r.disposeData(i.dataId),uv(a,n,r)}(p,g,y,a);return h&&a.disposeData(p.dataId),m}},fv={kernelName:ht,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;he(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];he($s(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=ps(r.shape,s,i,u,a),[h,d]=function(t,e,n,r){let s=new Yx(n,"max",!1);const i=r.runWebGLProgram(s,[t],"float32");return s=new Yx(n,"max",!0,!0,e),[i,r.runWebGLProgram(s,[t],"float32")]}(r,o,c,l);return[h,d]}},gv={kernelName:gt,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Bo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o}=n,l=e;return Va(l.readSync(r.dataId),l.readSync(s.dataId),i,a,o)}},mv=Ga,yv={kernelName:mt,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Bo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e,c=u.readSync(r.dataId),h=u.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=mv(c,h,i,a,o,l);return[d,p]}},bv=Ha,xv={kernelName:yt,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Bo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=n,u=e,c=u.readSync(r.dataId),h=u.readSync(s.dataId),d=i,p=a,f=o,g=l,{selectedIndices:m,selectedScores:y}=bv(c,h,d,p,f,g);return[m,y]}};class wv{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const s=t[1],i=t[2],a=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[l,u]=vo(r,s,i),c=l.toFixed(3),h=u.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${a};\n          float coordYFloat = (float(x) - ${c}) * ${a} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${d}\n          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const vv=[pv,nv,iv,tv,fv,gv,yv,xv,{kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:a}=e,o=n,l=new wv(r.shape,s,i,a);return o.runWebGLProgram(l,[r],r.dtype)}},{kernelName:Vt,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e,s=new xw(n.shape,"return x * x;");return r.runWebGLProgram(s,[n],n.dtype)}},{kernelName:Ut,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t,s="return (a - b) * (a - b);",i=e,a=p().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jb(s,n.shape,r.shape):new Vb(s,n.shape,r.shape);return i.compileAndRun(a,[n,r])}},{kernelName:jt,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,i=n,a=r.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=r.shape[s[t]];let l;if(i.shouldExecuteOnCPU([r])){const t=i.texData.get(r.dataId).values,e=lv(t,r.shape,r.dtype,s,o);l=i.makeTensorInfo(o,r.dtype),i.texData.get(l.dataId).values=e}else l=dv(r,s,i);return l}}];for(const t of vv)ie(t);var Cv,$v,kv=16e3,Iv=Zr(function(t,e,n){const r={start:0,stop:7180,num:360};return vn.runKernelFunc((t=>t.linspace(0,7180,360)),{},null,"LinSpace",r)}(),Fn(1997.379408437619));function Sv(t){return Sv="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Sv(t)}function Ev(){Ev=function(){return t};var t={},e=Object.prototype,n=e.hasOwnProperty,r=Object.defineProperty||function(t,e,n){t[e]=n.value},s="function"==typeof Symbol?Symbol:{},i=s.iterator||"@@iterator",a=s.asyncIterator||"@@asyncIterator",o=s.toStringTag||"@@toStringTag";function l(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,n){return t[e]=n}}function u(t,e,n,s){var i=e&&e.prototype instanceof d?e:d,a=Object.create(i.prototype),o=new I(s||[]);return r(a,"_invoke",{value:v(t,n,o)}),a}function c(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=u;var h={};function d(){}function p(){}function f(){}var g={};l(g,i,(function(){return this}));var m=Object.getPrototypeOf,y=m&&m(m(S([])));y&&y!==e&&n.call(y,i)&&(g=y);var b=f.prototype=d.prototype=Object.create(g);function x(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function w(t,e){function s(r,i,a,o){var l=c(t[r],t,i);if("throw"!==l.type){var u=l.arg,h=u.value;return h&&"object"==Sv(h)&&n.call(h,"__await")?e.resolve(h.__await).then((function(t){s("next",t,a,o)}),(function(t){s("throw",t,a,o)})):e.resolve(h).then((function(t){u.value=t,a(u)}),(function(t){return s("throw",t,a,o)}))}o(l.arg)}var i;r(this,"_invoke",{value:function(t,n){function r(){return new e((function(e,r){s(t,n,e,r)}))}return i=i?i.then(r,r):r()}})}function v(t,e,n){var r="suspendedStart";return function(s,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===s)throw i;return{value:void 0,done:!0}}for(n.method=s,n.arg=i;;){var a=n.delegate;if(a){var o=C(a,n);if(o){if(o===h)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var l=c(t,e,n);if("normal"===l.type){if(r=n.done?"completed":"suspendedYield",l.arg===h)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r="completed",n.method="throw",n.arg=l.arg)}}}function C(t,e){var n=e.method,r=t.iterator[n];if(void 0===r)return e.delegate=null,"throw"===n&&t.iterator.return&&(e.method="return",e.arg=void 0,C(t,e),"throw"===e.method)||"return"!==n&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+n+"' method")),h;var s=c(r,t.iterator,e.arg);if("throw"===s.type)return e.method="throw",e.arg=s.arg,e.delegate=null,h;var i=s.arg;return i?i.done?(e[t.resultName]=i.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,h):i:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,h)}function $(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function k(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function I(t){this.tryEntries=[{tryLoc:"root"}],t.forEach($,this),this.reset(!0)}function S(t){if(t){var e=t[i];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,s=function e(){for(;++r<t.length;)if(n.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return s.next=s}}return{next:E}}function E(){return{value:void 0,done:!0}}return p.prototype=f,r(b,"constructor",{value:f,configurable:!0}),r(f,"constructor",{value:p,configurable:!0}),p.displayName=l(f,o,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===p||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,f):(t.__proto__=f,l(t,o,"GeneratorFunction")),t.prototype=Object.create(b),t},t.awrap=function(t){return{__await:t}},x(w.prototype),l(w.prototype,a,(function(){return this})),t.AsyncIterator=w,t.async=function(e,n,r,s,i){void 0===i&&(i=Promise);var a=new w(u(e,n,r,s),i);return t.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},x(b),l(b,o,"Generator"),l(b,i,(function(){return this})),l(b,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),n=[];for(var r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},t.values=S,I.prototype={constructor:I,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!t)for(var e in this)"t"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(n,r){return a.type="throw",a.arg=t,e.next=n,r&&(e.method="next",e.arg=void 0),!!r}for(var s=this.tryEntries.length-1;s>=0;--s){var i=this.tryEntries[s],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var o=n.call(i,"catchLoc"),l=n.call(i,"finallyLoc");if(o&&l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(o){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var s=this.tryEntries[r];if(s.tryLoc<=this.prev&&n.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var i=s;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,h):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),h},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),k(n),h}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var s=r.arg;k(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:S(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),h}},t}function Rv(t,e,n,r,s,i,a){try{var o=t[i](a),l=o.value}catch(t){return void n(t)}o.done?e(l):Promise.resolve(l).then(r,s)}var Av,Nv,Tv=function(){var t,e=(t=Ev().mark((function t(e){return Ev().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,null==(n=void 0)&&(n={}),hf("crepeModel/model.json",n);case 2:Cv=t.sent,$v=e;case 4:case"end":return t.stop()}var n}),t)})),function(){var e=this,n=arguments;return new Promise((function(r,s){var i=t.apply(e,n);function a(t){Rv(i,r,s,a,o,"next",t)}function o(t){Rv(i,r,s,a,o,"throw",t)}a(void 0)}))});return function(t){return e.apply(this,arguments)}}(),Dv=function(t){var e,n,r=Fv(t);return Gr((function(){var t=Fn(r.slice(0,1024)),s=xi(t,Ei(t)),i=Fn(xa(s).dataSync()/Math.sqrt(1024)),a=qs(s,i).reshape([1,1024]),o=Cv.predict([a]).reshape([360]);n=o.max().dataSync()[0];var l=o.argMax().dataSync()[0],u=Math.max(0,l-4),c=Math.min(360,l+5),h=o.slice([u],[c-u]),d=Iv.slice([u],[c-u]),p=fi(h,d).dataSync().reduce((function(t,e){return t+e}),0)/h.dataSync().reduce((function(t,e){return t+e}),0);e=10*Math.pow(2,p/1200)})),{freq:e,confidence:n}},Fv=function(t){for(var e=$v%kv!=0,n=$v/kv,r=new Float32Array(1024),s=0;s<1024;s++)if(e){var i=Math.floor(s*n),a=i+1,o=s*n-i;r[s]=(1-o)*t[i]+o*t[a]}else r[s]=t[s*n];return r};self.onmessage=(Av=self.postMessage,Nv=[{key:"CREPE_GET_BUFFER_SIZE",fn:function(t){var e=t/kv*1024;return Math.pow(2,Math.ceil(Math.log2(e)))}},{key:"CREPE_INIT",fn:Tv},{key:"CREPE_DETECT_PITCHES",fn:function(t){for(var e=[],n=0;n<t.length;n++)e.push(Dv(t[n]));return e}}],function(){var t,e=(t=a().mark((function t(e){var n,r,s,i,c,h,d,p,f;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:n=e.data,r=n.type,s=n.payload,i=o(Nv),t.prev=2,i.s();case 4:if((c=i.n()).done){t.next=13;break}if(h=c.value,d=h.key,p=h.fn,d!==r){t.next=11;break}return t.next=9,p.apply(void 0,function(t){if(Array.isArray(t))return u(t)}(a=s)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(a)||l(a)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());case 9:f=t.sent,Av({type:d,payload:f});case 11:t.next=4;break;case 13:t.next=18;break;case 15:t.prev=15,t.t0=t.catch(2),i.e(t.t0);case 18:return t.prev=18,i.f(),t.finish(18);case 21:case"end":return t.stop()}var a}),t,null,[[2,15,18,21]])})),function(){var e=this,n=arguments;return new Promise((function(r,s){var i=t.apply(e,n);function a(t){c(i,r,s,a,o,"next",t)}function o(t){c(i,r,s,a,o,"throw",t)}a(void 0)}))});return function(t){return e.apply(this,arguments)}}())})()})();